{"version":3,"sources":["Nav.js","App.js","CheckoutForm.js","Book.js","index.js"],"names":["querystring","qs","window","location","search","cookies","Cookies","languages","Nav","props","state","language","copy","title","subtitle","includes","lang","get","this","setState","prevState","set","path","fetch","CopyApi","then","responseCopyApi","json","catch","console","log","className","to","map","key","href","Component","App","carousel","blurbs","cards","temperature","value","created_at","humidity","responseUbiBotApi","container","result","lastValues","JSON","parse","channel","last_values","field1","field2","style","paddingTop","carouselItem","carouselItemIndex","Item","src","image","url","alt","rounded","Caption","description","slice","blurb","blurbIndex","paragraph","paragraphIndex","padding","theme","Math","round","max","steps","format","size","height","xs","Intl","DateTimeFormat","year","month","day","hour","minute","second","timeZone","Date","card","cardIndex","width","marginRight","Header","as","icon","Img","variant","Body","Title","join","features","feature","featureIndex","text","details","detail","detailIndex","button","link","bootstrapURLKeys","defaultCenter","lat","lng","defaultZoom","onGoogleApiLoaded","maps","marker","Marker","position","infoWindow","InfoWindow","content","open","addListener","setZoom","setCenter","getPosition","marginTop","CheckoutForm","submit","bind","ev","onClick","React","injectStripe","lockers","client","Stitch","initializeDefaultAppClient","serviceClient","getServiceClient","RemoteMongoClient","factory","Book","context","locker","startDate","setHours","setDate","getDate","endDate","setMonth","getMonth","reservations","reservation","from","toISOString","name","email","telephone","handleChange","displayReservations","addReservation","event","target","id","db","displayReservationsOnLoad","collection","find","limit","asArray","auth","loginWithCredential","AnonymousCredential","error","preventDefault","insertOne","owner_id","user","onSubmit","Group","controlId","Label","Control","type","placeholder","onChange","Text","moment","startDateId","endDateId","onDatesChange","focusedInput","onFocusChange","Check","label","checked","apiKey","hostname","stringify","routing","exact","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4e2adde6.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport Button from 'react-bootstrap/Button';\r\nimport Cookies from 'universal-cookie';\r\nimport * as qs from 'query-string';\r\n\r\n\r\nconst querystring = qs.parse(window.location.search);\r\nconst cookies = new Cookies();\r\nconst CopyApi = 'https://raw.githubusercontent.com/bearslairs/bearslairs-data/master/copy';\r\nconst languages = ['bg', 'en', 'ru'];\r\n\r\nclass Nav extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      language: 'en',\r\n      copy: {\r\n        title: '',\r\n        subtitle: '',\r\n        languages: []\r\n      }\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    let language = languages.includes(querystring.lang) // if the querystring lang is set, use that\r\n      ? querystring.lang\r\n      : languages.includes(cookies.get('lang')) // else if the cookies contain a lang, use that\r\n        ? cookies.get('lang')\r\n        : this.state.language; // fall back to a default\r\n    this.setState(prevState => ({ \r\n      language: language,\r\n      copy: prevState.copy\r\n    }));\r\n    cookies.set('lang', language, { path: '/' });\r\n    fetch(CopyApi + '/' + language + '/nav.json')\r\n    .then(responseCopyApi => responseCopyApi.json())\r\n    .then((copy) => {\r\n      this.setState(prevState => ({\r\n        language: prevState.language,\r\n        copy: copy\r\n      }));\r\n    })\r\n    .catch(console.log);\r\n  }\r\n  render() {\r\n    return (\r\n      <header className=\"App-header clearfix\">\r\n        <LinkContainer to=\"/\">\r\n          <h1 className=\"float-left\">{this.state.copy.title}</h1>\r\n        </LinkContainer>\r\n        <h2 className=\"float-left text-muted\">{this.state.copy.subtitle}</h2>\r\n        <LinkContainer to=\"/book\">\r\n          <Button className=\"float-right\">book</Button>\r\n        </LinkContainer>\r\n        <span className=\"float-right text-muted\">\r\n          {\r\n            this.state.copy.languages.map(lang => (\r\n              <a key={lang} href={'?lang=' + lang} className=\"text-muted\">{lang}</a>\r\n            ))\r\n          }\r\n        </span>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Nav;","import React, { Component } from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport Container from 'react-bootstrap/Container';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport Card from 'react-bootstrap/Card';\nimport Image from 'react-bootstrap/Image';\nimport Button from 'react-bootstrap/Button';\nimport Carousel from 'react-bootstrap/Carousel';\nimport Thermometer from 'react-thermometer-component'\nimport './App.css';\nimport Cookies from 'universal-cookie';\nimport Nav from './Nav';\nimport * as qs from 'query-string';\nimport GoogleMapReact from 'google-map-react';\n\nconst querystring = qs.parse(window.location.search);\nconst cookies = new Cookies();\nconst CopyApi = 'https://raw.githubusercontent.com/bearslairs/bearslairs-data/master/copy';\nconst UbiBotApi = 'https://api.ubibot.io/channels/13604?api_key=609210eb2306427a88d662d48ddb578d';\nconst languages = ['bg', 'en', 'ru'];\n\nclass App extends Component {\n  state = {\n    language: 'en',\n    copy: {\n      carousel: [],\n      blurbs: [],\n      cards: []\n    },\n    temperature: {\n      value: 0,\n      created_at: '2020-01-01T00:00:01Z'\n    },\n    humidity: {\n      value: 0,\n      created_at: '2020-01-01T00:00:01Z'\n    }\n  };\n\n  componentDidMount() {\n    let language = languages.includes(querystring.lang) // if the querystring lang is set, use that\n      ? querystring.lang\n      : languages.includes(cookies.get('lang')) // else if the cookies contain a lang, use that\n        ? cookies.get('lang')\n        : this.state.language; // fall back to a default\n    this.setState(prevState => ({ \n      language: language,\n      copy: prevState.copy\n    }));\n    cookies.set('lang', language, { path: '/' });\n    fetch(CopyApi + '/' + language + '/home.json')\n    .then(responseCopyApi => responseCopyApi.json())\n    .then((copy) => {\n      this.setState(prevState => ({\n        language: prevState.language,\n        copy: copy\n      }));\n    })\n    .catch(console.log);\n    fetch(UbiBotApi)\n    .then(responseUbiBotApi => responseUbiBotApi.json())\n    .then((container) => {\n      if (container.result === 'success') {\n        let lastValues = JSON.parse(container.channel.last_values);\n        this.setState(prevState => ({\n          temperature: lastValues.field1,\n          humidity: lastValues.field2\n        }));\n      }\n    })\n    .catch(console.log);\n  }\n\n  render() {\n    return (\n      <Container>\n        <Nav />\n        <Row style={{ paddingTop: '10px' }}>\n          <Carousel>\n            {\n              this.state.copy.carousel.map((carouselItem, carouselItemIndex) => (\n                <Carousel.Item key={carouselItemIndex}>\n                  <Image src={carouselItem.image.url} alt={carouselItem.image.alt} rounded=\"true\" />\n                  <Carousel.Caption>\n                    <h3>{carouselItem.title}</h3>\n                    <p>{carouselItem.description}</p>\n                  </Carousel.Caption>\n                </Carousel.Item>\n              ))\n            }\n          </Carousel>\n        </Row>\n        <Row style={{ paddingTop: '10px' }}>\n          {\n            this.state.copy.blurbs.slice(0, 2).map((blurb, blurbIndex) => (\n              <div key={blurbIndex}>\n                <h4>{blurb.title}</h4>\n                {\n                  blurb.copy.map((paragraph, paragraphIndex) => (\n                    <p key={paragraphIndex}>{paragraph}</p>\n                  ))\n                }\n              </div>\n            ))\n          }\n        </Row>\n        <Row style={{ padding: '20px' }}>\n          <Col>\n            <Thermometer\n              theme=\"dark\"\n              value={(Math.round(this.state.temperature.value * 10) / 10)}\n              max={(this.state.temperature.value * 1.3)}\n              steps=\"3\"\n              format=\"°C\"\n              size=\"large\"\n              height=\"200\"\n            />\n          </Col>\n          <Col xs={10}>\n            <h4>real-time environment monitoring</h4>\n            <p>\n              we monitor temperature, humidity and light within the facility and publish those readings at <a href=\"https://space.ubibot.io/space/user/device/channel-id/13604\">ubibot.io/bearslairs</a> so our customers can keep informed of the environmental conditions of their self-storage. the latest readings taken were:\n            </p>\n            <dl>\n              <dt>temperature</dt>\n              <dd>\n                {\n                  new Intl.DateTimeFormat(\"en-GB\", {\n                    year: \"numeric\",\n                    month: \"long\",\n                    day: \"2-digit\",\n                    hour: 'numeric',\n                    minute: 'numeric',\n                    second: 'numeric',\n                    timeZone: 'Europe/Sofia'\n                  }).format(new Date(this.state.temperature.created_at))\n                }:&nbsp;\n                <strong>{(Math.round(this.state.temperature.value * 10) / 10)}°C</strong>\n              </dd>\n              <dt>humidity</dt>\n              <dd>\n                {\n                  new Intl.DateTimeFormat(\"en-GB\", {\n                    year: \"numeric\",\n                    month: \"long\",\n                    day: \"2-digit\",\n                    hour: 'numeric',\n                    minute: 'numeric',\n                    second: 'numeric',\n                    timeZone: 'Europe/Sofia'\n                  }).format(new Date(this.state.humidity.created_at))\n                }:&nbsp;\n                <strong>{this.state.humidity.value}%</strong>\n              </dd>\n            </dl>\n          </Col>\n        </Row>\n        <Row style={{ paddingTop: '10px' }}>\n          {\n            this.state.copy.cards.slice(0, 3).map((card, cardIndex) => (\n              <Card style={{ width: '30%', marginRight: '10px' }} key={cardIndex}>\n                <Card.Header as=\"h3\">\n                  {card.title}\n                  <Image src={card.icon.url} alt={card.icon.alt} rounded=\"true\" style={{ marginRight: '10px' }} className=\"float-right\" />\n                </Card.Header>\n                <Card.Img variant=\"top\" src={card.image.url} alt={card.image.alt} rounded=\"true\" />\n                <Card.Body>\n                  <Card.Title>\n                    {card.description.join(' ')}\n                  </Card.Title>\n                  <hr />\n\n                  <ul>\n                    {\n                      card.features.map((feature, featureIndex) => (\n                        <li key={featureIndex}>\n                          {feature.text}\n                          <ul>\n                            {\n                              feature.details.map((detail, detailIndex) => (\n                                <li key={detailIndex}>\n                                  {detail}\n                                </li>\n                              ))\n                            }\n                          </ul>\n                        </li>\n                      ))\n                    }\n                  </ul>\n                  <LinkContainer to={card.button.link}>\n                    <Button variant=\"primary\" className=\"float-right\">\n                      {card.button.text}\n                    </Button>\n                  </LinkContainer>\n                </Card.Body>\n              </Card>\n            ))\n          }\n        </Row>\n        <Row style={{ paddingTop: '10px' }}>\n          {\n            this.state.copy.blurbs.slice(2, 4).map((blurb, blurbIndex) => (\n              <div key={blurbIndex}>\n                <h4>{blurb.title}</h4>\n                {\n                  blurb.copy.map((paragraph, paragraphIndex) => (\n                    <p key={paragraphIndex}>\n                      {paragraph}\n                    </p>\n                  ))\n                }\n              </div>\n            ))\n          }\n        </Row>\n        <Row style={{ paddingTop: '10px' }}>\n          {\n            this.state.copy.cards.slice(3, 6).map((card, cardIndex) => (\n              <Card style={{ width: '30%', marginRight: '10px' }} key={cardIndex}>\n                <Card.Header as=\"h3\">\n                  {card.title}\n                  <Image src={card.icon.url} alt={card.icon.alt} rounded=\"true\" style={{ marginRight: '10px' }} className=\"float-right\" />\n                </Card.Header>\n                <Card.Img variant=\"top\" src={card.image.url} alt={card.image.alt} rounded=\"true\" />\n                <Card.Body>\n                  <Card.Title>\n                    {card.description.join(' ')}\n                  </Card.Title>\n                  <hr />\n                  <ul>\n                    {\n                      card.features.map((feature, featureIndex) => (\n                        <li key={featureIndex}>\n                          {feature.text}\n                          <ul>\n                            {\n                              feature.details.map((detail, detailIndex) => (\n                                <li key={detailIndex}>\n                                  {detail}\n                                </li>\n                              ))\n                            }\n                          </ul>\n                        </li>\n                      ))\n                    }\n                  </ul>\n                  <LinkContainer to={card.button.link}>\n                    <Button variant=\"primary\" className=\"float-right\">\n                      {card.button.text}\n                    </Button>\n                  </LinkContainer>\n                </Card.Body>\n              </Card>\n            ))\n          }\n        </Row>\n        <Row style={{ paddingTop: '10px' }}>\n          {\n            this.state.copy.blurbs.slice(4, 5).map((blurb, blurbIndex) => (\n              <div key={blurbIndex}>\n                <h4>{blurb.title}</h4>\n                {\n                  blurb.copy.map((paragraph, paragraphIndex) => (\n                    <p key={paragraphIndex}>\n                      {paragraph}\n                    </p>\n                  ))\n                }\n              </div>\n            ))\n          }\n        </Row>\n        <Row style={{ paddingTop: '10px' }}>\n          <div style={{ height: '40vh', width: '100%' }}>\n            <GoogleMapReact\n              bootstrapURLKeys={{ key: 'AIzaSyCKw8by28pNI5tlimezyyjgtXz_Nvkq2-Y' }}\n              defaultCenter={{ lat: 41.820582, lng: 23.478257 }}\n              defaultZoom={ 14 }\n              onGoogleApiLoaded={({map, maps}) => {\n                let marker = new maps.Marker({\n                  position: { lat: 41.820582, lng: 23.478257 },\n                  map,\n                  title: 'Bears Lairs, Bansko',\n                  description: 'secure, self-storage in bansko with access at your convenience',\n                  link: {\n                    url: 'https://www.google.com/maps/place/Bears+Lairs/@41.8223813,23.4681867,15z/data=!4m5!3m4!1s0x0:0xadd4ea4c0b9a3216!8m2!3d41.820631!4d23.478215',\n                    text: 'maps.google.com/Bears+Lairs'\n                  }\n                });\n                let infoWindow = new maps.InfoWindow({\n                  content: '<h4><img src=\"favicon-32x32.png\" style=\"margin-right: 6px;\" class=\"rounded-circle\" />' + marker.title + '</h4><p>' + marker.description + '<br /><a href=\"' + marker.link.url + '\">' + marker.link.text + '</a></p>'\n                });\n                infoWindow.open(map, marker);\n                marker.addListener('click', () => {\n                  map.setZoom(14);\n                  map.setCenter(marker.getPosition());\n                  infoWindow.open(map, marker);\n                });\n              }} />\n          </div>\n        </Row>\n        <footer className=\"clearfix\" style={{ marginTop: '20px' }}>\n          <p className=\"text-center text-muted\">\n            <a href={'https://github.com/bearslairs/bearslairs-data/edit/master/copy/' + this.state.language + '/home.json'}>\n              edit this page\n            </a>\n          </p>\n        </footer>\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport {\n  CardElement,\n  injectStripe\n} from 'react-stripe-elements';\n\n/*\n * https://stripe.com/docs/recipes/elements-react\n * https://stripe.com/docs/stripe-js/reference\n * https://stripe.com/docs/payments/accept-a-payment\n */\nclass CheckoutForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.submit = this.submit.bind(this);\n  }\n\n  async submit(ev) {\n    // User clicked submit\n  }\n\n  render() {\n    return (\n      <div className=\"checkout\">\n        <p>enter your payment card details below to complete your reservation</p>\n        <CardElement />\n        <hr />\n        <Button variant=\"primary\" onClick={this.submit}>\n          Purchase\n        </Button>\n      </div>\n    );\n  }\n}\n\nexport default injectStripe(CheckoutForm);\n","import React from 'react'\r\nimport Container from 'react-bootstrap/Container';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Nav from './Nav';\r\nimport Cookies from 'universal-cookie';\r\nimport * as qs from 'query-string';\r\nimport 'react-dates/initialize';\r\nimport { DateRangePicker } from 'react-dates';\r\nimport 'react-dates/lib/css/_datepicker.css';\r\nimport moment from 'moment'\r\nimport {\r\n  Stitch,\r\n  AnonymousCredential,\r\n  RemoteMongoClient\r\n} from 'mongodb-stitch-browser-sdk';\r\nimport {\r\n  Elements,\r\n  StripeProvider\r\n} from 'react-stripe-elements';\r\nimport CheckoutForm from './CheckoutForm';\r\n\r\nconst querystring = qs.parse(window.location.search);\r\nconst cookies = new Cookies();\r\nconst CopyApi = 'https://raw.githubusercontent.com/bearslairs/bearslairs-data/master/copy';\r\nconst languages = ['bg', 'en', 'ru'];\r\nconst lockers = ['small', 'medium', 'large', 'bicycle', 'motorcycle', 'large-motorcycle'];\r\nconst client = Stitch.initializeDefaultAppClient('bearslairsstitch-pkblb');\r\nconst serviceClient = client.getServiceClient(RemoteMongoClient.factory, 'mongodb-atlas');\r\n//const stripe = Stripe('pk_test_kSrcl4f2BEKQTkQCIuDih41I000nfCqc5I');\r\n\r\nclass Book extends React.Component {\r\n  constructor(props, context) {\r\n    super(props, context);\r\n    let language = languages.includes(querystring.lang) // if the querystring lang is set, use that\r\n      ? querystring.lang\r\n      : languages.includes(cookies.get('lang')) // else if the cookies contain a lang, use that\r\n        ? cookies.get('lang')\r\n        : 'en';\r\n    let locker = lockers.includes(querystring.locker) // if the querystring lang is set, use that\r\n      ? querystring.locker\r\n      : 'small';\r\n    // todo: handle timezone\r\n    let startDate = new Date();\r\n    startDate.setHours(14,0,0,0);\r\n    startDate.setDate(startDate.getDate() + 1);\r\n    let endDate = new Date();\r\n    endDate.setHours(12,0,0,0);\r\n    endDate.setMonth(startDate.getMonth() + 3);\r\n    this.state = {\r\n      reservations: [],\r\n      language: language,\r\n      reservation: {\r\n        from: startDate.toISOString(),\r\n        to: endDate.toISOString(),\r\n        name: '',\r\n        email: '',\r\n        telephone: '',\r\n        locker: locker,\r\n        language: language\r\n      },\r\n      copy: {\r\n        languages: []\r\n      }\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.displayReservations = this.displayReservations.bind(this);\r\n    this.addReservation = this.addReservation.bind(this);\r\n  }\r\n  handleChange(event) {\r\n    const target = event.target;\r\n    this.setState(state => {\r\n      state.reservation[target.id] = target.value;\r\n      return state;\r\n    });\r\n  }\r\n  componentDidMount() {\r\n    fetch(CopyApi + '/' + this.state.language + '/book.json')\r\n      .then(responseCopyApi => responseCopyApi.json())\r\n      .then((copy) => {\r\n        this.setState(state => ({\r\n          language: state.language,\r\n          reservation: state.reservation,\r\n          copy: copy\r\n        }));\r\n      })\r\n      .catch(console.log);\r\n    this.db = serviceClient.db('bearslairs-bansko');\r\n    this.displayReservationsOnLoad();\r\n  }\r\n\r\n  displayReservations() {\r\n    this.db\r\n      .collection('reservations')\r\n      .find({}, { limit: 1000 })\r\n      .asArray()\r\n      .then(reservations => { this.setState({reservations}); });\r\n  }\r\n\r\n  displayReservationsOnLoad() {\r\n    client.auth\r\n      .loginWithCredential(new AnonymousCredential())\r\n      .then(this.displayReservations)\r\n      .catch(console.error);\r\n  }\r\n\r\n  addReservation(event) {\r\n    event.preventDefault();\r\n    const { reservation } = this.state;\r\n    this.db\r\n      .collection('reservations')\r\n      .insertOne({\r\n        owner_id: client.auth.user.id,\r\n        reservation: reservation\r\n      })\r\n      .then(this.displayReservations)\r\n      .catch(console.error);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <Nav />\r\n        <Row style={{ paddingTop: '10px' }}>\r\n          <h2>make a reservation</h2>\r\n        </Row>\r\n        <Row style={{ paddingTop: '10px' }}>\r\n\r\n          <Form onSubmit={this.addReservation}>\r\n            <Form.Group controlId=\"name\">\r\n              <Form.Label>name</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"full name\"\r\n                value={this.state.reservation.name}\r\n                onChange={this.handleChange} />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"email\">\r\n              <Form.Label>email</Form.Label>\r\n              <Form.Control\r\n                type=\"email\"\r\n                placeholder=\"email\"\r\n                value={this.state.reservation.email}\r\n                onChange={this.handleChange} />\r\n              <Form.Text className=\"text-muted\">\r\n                we'll never share your email with anyone else.\r\n              </Form.Text>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"telephone\">\r\n              <Form.Label>telephone</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"telephone number\"\r\n                value={this.state.reservation.telephone}\r\n                onChange={this.handleChange} />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"fromto\">\r\n              <Form.Label>reservation dates</Form.Label>\r\n              <br />\r\n              <DateRangePicker\r\n                startDate={moment(this.state.reservation.from)}\r\n                startDateId='reservation_from'\r\n                endDate={moment(this.state.reservation.to)}\r\n                endDateId='reservation_to'\r\n                onDatesChange={({ startDate, endDate }) => this.setState(state => { state.reservation.from = startDate.toISOString(); state.reservation.to = endDate.toISOString(); return state; })}\r\n                focusedInput={this.state.focusedInput}\r\n                onFocusChange={focusedInput => this.setState({ focusedInput })}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"locker\">\r\n              <Form.Label>i would like to book storage</Form.Label>\r\n              <Form.Check\r\n                type=\"radio\"\r\n                label=\"in a small locker\"\r\n                onChange={() => this.setState(state => {state.reservation.locker = 'small'; return state;})}\r\n                checked={this.state.reservation.locker === 'small'} />\r\n              <Form.Check\r\n                type=\"radio\"\r\n                label=\"in a medium locker\"\r\n                onChange={() => this.setState(state => {state.reservation.locker = 'medium'; return state;})}\r\n                checked={this.state.reservation.locker === 'medium'} />\r\n              <Form.Check\r\n                type=\"radio\"\r\n                label=\"in a large locker\"\r\n                onChange={() => this.setState(state => {state.reservation.locker = 'large'; return state;})}\r\n                checked={this.state.reservation.locker === 'large'} />\r\n              <Form.Check\r\n                type=\"radio\"\r\n                label=\"for a bicycle\"\r\n                onChange={() => this.setState(state => {state.reservation.locker = 'bicycle'; return state;})}\r\n                checked={this.state.reservation.locker === 'bicycle'} />\r\n              <Form.Check\r\n                type=\"radio\"\r\n                label=\"for a motorcycle\"\r\n                onChange={() => this.setState(state => {state.reservation.locker = 'motorcycle'; return state;})}\r\n                checked={this.state.reservation.locker === 'motorcycle'} />\r\n              <Form.Check\r\n                type=\"radio\"\r\n                label=\"for a large motorcycle\"\r\n                onChange={() => this.setState(state => {state.reservation.locker = 'large-motorcycle'; return state;})}\r\n                checked={this.state.reservation.locker === 'large-motorcycle'} />\r\n            </Form.Group>\r\n            <StripeProvider apiKey=\"pk_test_kSrcl4f2BEKQTkQCIuDih41I000nfCqc5I\">\r\n              <Elements>\r\n                <CheckoutForm />\r\n              </Elements>\r\n            </StripeProvider>\r\n          </Form>\r\n        </Row>\r\n        {\r\n          (window.location.hostname === 'localhost') ?\r\n          <Row>\r\n            <pre>\r\n              {JSON.stringify(this.state, null, 2)}\r\n            </pre>\r\n          </Row> : null\r\n        }\r\n      </Container>\r\n    );\r\n  }\r\n}\r\nexport default Book;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\nimport './index.css';\nimport App from './App';\nimport Book from './Book';\n\nconst routing = (\n  <BrowserRouter>\n    <Switch>\n      <Route exact path=\"/\" component={App} />\n      <Route path=\"/book\" component={Book} />\n    </Switch>\n  </BrowserRouter>\n);\nReactDOM.render(routing, document.getElementById('root'));\n"],"sourceRoot":""}