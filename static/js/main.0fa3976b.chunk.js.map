{"version":3,"sources":["Logo.js","Navigation.js","App.js","CheckoutForm.js","LockerAnimation.js","Book.js","index.js"],"names":["Logo","props","state","language","Container","id","Row","Image","src","className","Component","Navigation","links","href","text","Navbar","Nav","this","map","link","Link","querystring","qs","window","location","search","cookies","Cookies","languages","lairImages","lairIcons","bikeImages","bikeIcons","App","copy","carousel","blurbs","cards","temperature","value","created_at","humidity","includes","lang","get","setState","prevState","set","path","fetch","CopyApi","then","responseCopyApi","json","catch","console","log","responseUbiBotApi","container","result","lastValues","JSON","parse","channel","last_values","field1","field2","fluid","style","display","alignItems","justifyContent","Col","xl","md","theme","Math","round","max","steps","format","size","height","Intl","DateTimeFormat","year","month","day","hour","minute","second","timeZone","Date","slice","blurb","blurbIndex","key","title","paragraph","paragraphIndex","length","image","to","Button","card","cardIndex","Card","Header","backgroundImage","alt","marginTop","Body","Title","description","join","lmargin","padding","features","feature","featureIndex","listStyleType","fontWeight","margin","details","detail","detailIndex","Footer","button","width","bootstrapURLKeys","defaultCenter","lat","lng","defaultZoom","onGoogleApiLoaded","maps","marker","Marker","position","url","infoWindow","InfoWindow","content","open","addListener","setZoom","setCenter","getPosition","CheckoutForm","submit","bind","ev","variant","onClick","React","injectStripe","Box","mesh","useRef","useState","hovered","setHover","active","setActive","useEffect","current","rotation","y","PI","scale","ref","e","onPointerOver","onPointerOut","attach","args","geometry","depth","color","hover","default","wireframe","LockerAnimation","storageSpaces","category","name","price","quarter","biannual","annual","storageCategories","lg","filter","o","i","s","findIndex","t","lockers","client","Stitch","initializeDefaultAppClient","serviceClient","getServiceClient","RemoteMongoClient","factory","Book","context","locker","selectedCategoryIndex","c","hash","replace","startDate","setHours","setDate","getDate","endDate","setMonth","getMonth","stripe","reservations","reservation","from","toISOString","email","telephone","selectedStorageSpace","handleChange","displayReservations","addReservation","lockerSelectHandler","getDurationInMonths","getPriceBand","getTotalPrice","getInstallments","event","target","Stripe","document","querySelector","addEventListener","db","displayReservationsOnLoad","collection","find","limit","asArray","auth","loginWithCredential","AnonymousCredential","error","preventDefault","insertOne","owner_id","user","storageSpace","fromDate","toDate","months","getFullYear","durationInMonths","monthlyPrice","toFixed","Array","keys","installmentIndex","date","amount","Tabs","defaultActiveKey","storageCategory","Tab","eventKey","lgI","textAlign","paddingTop","Form","onSubmit","Group","controlId","Label","Control","type","placeholder","onChange","Text","moment","startDateId","endDateId","onDatesChange","focusedInput","onFocusChange","installment","routing","StrictMode","exact","component","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.0fa3976b.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Image from 'react-bootstrap/Image';\nimport Row from 'react-bootstrap/Row';\n\nclass Logo extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      language: 'en'\n    };\n  }\n\n  render() {\n    return (\n      <Container id=\"container-logo\">\n        <Row>\n          <Image src={'/logo.png'} className=\"m-auto\" />\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default Logo;\n","import React, { Component } from 'react';\nimport Nav from 'react-bootstrap/Nav';\nimport Navbar from 'react-bootstrap/Navbar';\n\n\nclass Navigation extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      language: (props.language || 'en'),\n      links: [\n        {\n          href: '/#about',\n          text: {\n            'bg': 'about',\n            'en': 'about',\n            'ru': 'about'\n          }\n        },\n        {\n          href: '/#prices',\n          text: {\n            'bg': 'prices',\n            'en': 'prices',\n            'ru': 'prices'\n          }\n        },\n        {\n          href: '/#location',\n          text: {\n            'bg': 'location',\n            'en': 'location',\n            'ru': 'location'\n          }\n        },\n        {\n          href: '/book',\n          text: {\n            'bg': 'book now',\n            'en': 'book now',\n            'ru': 'book now'\n          }\n        }\n      ]\n    };\n  }\n\n  render() {\n    return (\n      <Navbar id=\"container-nav\">\n        <Nav className=\"m-auto\">\n          {\n            this.state.links.map(link => (\n              <Nav.Link href={link.href}>\n                {\n                  link.text[this.state.language]\n                }\n              </Nav.Link>\n            ))\n          }\n        </Nav>\n      </Navbar>\n    );\n  }\n}\n\nexport default Navigation;","import React, { Component } from 'react';\nimport { LinkContainer } from 'react-router-bootstrap'\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport Col from 'react-bootstrap/Col';\nimport Container from 'react-bootstrap/Container';\nimport Image from 'react-bootstrap/Image';\nimport Row from 'react-bootstrap/Row';\nimport Thermometer from 'react-thermometer-component'\nimport Cookies from 'universal-cookie';\nimport * as qs from 'query-string';\nimport GoogleMapReact from 'google-map-react';\n\nimport Logo from './Logo';\nimport Navigation from './Navigation';\n\nconst querystring = qs.parse(window.location.search);\nconst cookies = new Cookies();\nconst CopyApi = 'https://raw.githubusercontent.com/bearslairs/bearslairs-data/master/copy';\nconst UbiBotApi = 'https://api.ubibot.io/channels/13604?api_key=609210eb2306427a88d662d48ddb578d';\nconst languages = ['bg', 'en', 'ru'];\nconst lairImages = ['/lair-baby.png', '/lair-mama.png', '/lair-papa.png'];\nconst lairIcons = ['/lair-baby-icon.png', '/lair-mama-icon.png', '/lair-papa-icon.png'];\nconst bikeImages = ['/bike-rack.png', '/bike-small.png', '/bike-large.png'];\nconst bikeIcons = ['/bike-rack-icon.png', '/bike-small-icon.png', '/bike-large-icon.png'];\n\nclass App extends Component {\n  state = {\n    language: 'en',\n    copy: {\n      carousel: [],\n      blurbs: [],\n      cards: []\n    },\n    temperature: {\n      value: 0,\n      created_at: '2020-01-01T00:00:01Z'\n    },\n    humidity: {\n      value: 0,\n      created_at: '2020-01-01T00:00:01Z'\n    }\n  };\n\n  componentDidMount() {\n    let language = languages.includes(querystring.lang) // if the querystring lang is set, use that\n      ? querystring.lang\n      : languages.includes(cookies.get('lang')) // else if the cookies contain a lang, use that\n        ? cookies.get('lang')\n        : this.state.language; // fall back to a default\n    this.setState(prevState => ({ \n      language: language,\n      copy: prevState.copy\n    }));\n    cookies.set('lang', language, { path: '/' });\n    fetch(CopyApi + '/' + language + '/home.json')\n    .then(responseCopyApi => responseCopyApi.json())\n    .then((copy) => {\n      this.setState(prevState => ({\n        language: prevState.language,\n        copy: copy\n      }));\n    })\n    .catch(console.log);\n    fetch(UbiBotApi)\n    .then(responseUbiBotApi => responseUbiBotApi.json())\n    .then((container) => {\n      if (container.result === 'success') {\n        let lastValues = JSON.parse(container.channel.last_values);\n        this.setState(prevState => ({\n          temperature: lastValues.field1,\n          humidity: lastValues.field2\n        }));\n      }\n    })\n    .catch(console.log);\n  }\n\n  render() {\n    return (\n    <>\n      <Logo language={this.state.language} />\n      <Navigation language={this.state.language} />\n      <Container id=\"container-header\" fluid style={{display: \"flex\", alignItems: \"center\", justifyContent: \"center\"}}>\n        <h2>\n          secure self storage in bansko<br />\n          with access at your convenience\n        </h2>\n      </Container>\n      <Container id=\"container-environment\">\n        <h3>\n          real-time environment monitoring\n        </h3>\n        <p>\n          we monitor temperature, humidity and light within the facility and publish those readings at\n          &nbsp;\n          <a href=\"https://space.ubibot.io/space/user/device/channel-id/13604\">\n            ubibot.io/bearslairs-bansko\n          </a>,\n          <br />\n          so our customers can stay informed of the environmetal conditions of their self-storage.\n          The latest readings taken were:\n        </p>\n        <Row className=\"justify-content-xl-center justify-content-md-center\">\n          <Col xl=\"auto\" md=\"auto\">\n            <Thermometer\n              theme=\"dark\"\n              value={(Math.round(this.state.temperature.value * 10) / 10)}\n              max={(this.state.temperature.value * 1.3)}\n              steps=\"3\"\n              format=\"°C\"\n              size=\"large\"\n              height=\"200\"\n            />\n          </Col>\n          <Col xl=\"auto\" md=\"auto\">\n            <h4>temperature</h4>\n            {\n              new Intl.DateTimeFormat(\"en-GB\", {\n                year: \"numeric\",\n                month: \"long\",\n                day: \"2-digit\",\n                hour: 'numeric',\n                minute: 'numeric',\n                second: 'numeric',\n                timeZone: 'Europe/Sofia'\n              }).format(new Date(this.state.temperature.created_at))\n            }:&nbsp;\n            <strong>{(Math.round(this.state.temperature.value * 10) / 10)}°C</strong>\n            <h4>humidity</h4>\n            {\n              new Intl.DateTimeFormat(\"en-GB\", {\n                year: \"numeric\",\n                month: \"long\",\n                day: \"2-digit\",\n                hour: 'numeric',\n                minute: 'numeric',\n                second: 'numeric',\n                timeZone: 'Europe/Sofia'\n              }).format(new Date(this.state.humidity.created_at))\n            }:&nbsp;\n            <strong>{this.state.humidity.value}%</strong>\n          </Col>\n        </Row>\n      </Container>\n      <Container id=\"container-about\" fluid>\n        {\n          this.state.copy.blurbs.slice(0, 1).map((blurb, blurbIndex) => (\n            <Container key={blurbIndex}>\n              <h3>{blurb.title}</h3>\n              <Row className=\"justify-content-xl-center justify-content-md-center\">\n              {\n                blurb.copy.map((paragraph, paragraphIndex) => (\n                  <Col xl={(12 / blurb.copy.length)} key={paragraphIndex}>\n                    <Image src={paragraph.image} />\n                    <p>{paragraph.text}</p>\n                  </Col>\n                ))\n              }\n              </Row>\n            </Container>\n          ))\n        }\n      </Container>\n      <Container id=\"container-security\" fluid>\n        <Container>\n          <Row className=\"justify-content-xl-center justify-content-md-center\">\n            {\n              this.state.copy.blurbs.slice(1, 2).map((blurb, blurbIndex) => (\n                <Col xl={7} key={blurbIndex}>\n                  <h3>{blurb.title}</h3>\n                  {\n                    blurb.copy.map((paragraph, paragraphIndex) => (\n                      <p key={paragraphIndex}>\n                        {paragraph}\n                      </p>\n                    ))\n                  }\n                  <LinkContainer to={'/book'}>\n                    <Button size=\"sm\">\n                      book now\n                    </Button>\n                  </LinkContainer>\n                </Col>\n              ))\n            }\n          </Row>\n        </Container>\n      </Container>\n      <Container id=\"container-lair\">\n        <h3>\n          choose your lair\n        </h3>\n        <Row className=\"justify-content-xl-center justify-content-md-center\">\n          {\n            this.state.copy.cards.slice(0, 3).map((card, cardIndex) => (\n              <Col key={cardIndex}>\n              <Card className=\"h-100\">\n                <Card.Header>\n                  {card.title}\n                </Card.Header>\n                <div style={{height: '200px', backgroundImage: 'url(' + lairImages[cardIndex] + ')'}}>\n                  <Image src={lairIcons[cardIndex]} alt={card.image.alt} style={{marginTop: '25px'}} />\n                </div>\n                <Card.Body>\n                  <Card.Title>\n                    {card.description.join(' ')}\n                  </Card.Title>\n                  <hr />\n                  <ul style={{lmargin: 0, padding: 0}}>\n                    {\n                      card.features.map((feature, featureIndex) => (\n                        <li key={featureIndex} style={{listStyleType: 'none', fontWeight: 600, margin: 0, padding: 0}}>\n                          {feature.text}\n                          <ul style={{lmargin: 0, padding: 0}}>\n                            {\n                              feature.details.map((detail, detailIndex) => (\n                                <li key={detailIndex} style={{listStyleType: 'none', fontWeight: 'normal', margin: 0, padding: 0}}>\n                                  {detail}\n                                </li>\n                              ))\n                            }\n                          </ul>\n                        </li>\n                      ))\n                    }\n                  </ul>\n                </Card.Body>\n                <Card.Footer>\n                  <LinkContainer to={card.button.link}>\n                    <Button size=\"sm\">\n                      {card.button.text}\n                    </Button>\n                  </LinkContainer>\n                </Card.Footer>\n              </Card>\n              </Col>\n            ))\n          }\n        </Row>\n      </Container>\n      <Container id=\"container-adaptive\" fluid>\n        {\n          this.state.copy.blurbs.slice(2, 3).map((blurb, blurbIndex) => (\n            <Container key={blurbIndex}>\n              <h3>{blurb.title}</h3>\n              <Row className=\"justify-content-xl-center justify-content-md-center\">\n                <Col xl={7}>\n                  <p>{blurb.copy[0]}</p>\n                </Col>\n              </Row>\n              <blockquote className=\"blockquote\">\n                <p>{blurb.copy[1]}</p>\n              </blockquote>\n            </Container>\n          ))\n        }\n      </Container>\n      <Container id=\"container-bike\" fluid>\n        {\n          this.state.copy.blurbs.slice(3, 4).map((blurb, blurbIndex) => (\n            <Container key={blurbIndex}>\n              <h3>{blurb.title}</h3>\n              <Row className=\"justify-content-xl-center justify-content-md-center\">\n                <Col xl={8}>\n                  <p>{blurb.copy[0]}</p>\n                </Col>\n              </Row>\n            </Container>\n          ))\n        }\n        <Container>\n          <Row className=\"justify-content-xl-center justify-content-md-center\">\n            {\n              this.state.copy.cards.slice(3, 6).map((card, cardIndex) => (\n                <Col key={cardIndex}>\n                <Card className=\"h-100\">\n                  <Card.Header>\n                    {card.title}\n                  </Card.Header>\n                  <div style={{height: '200px', backgroundImage: 'url(' + bikeImages[cardIndex] + ')'}}>\n                    <Image src={bikeIcons[cardIndex]} alt={card.image.alt} style={{marginTop: '25px'}} />\n                  </div>\n                  <Card.Body>\n                    <Card.Title>\n                      {card.description.join(' ')}\n                    </Card.Title>\n                    <hr />\n                    <ul style={{lmargin: 0, padding: 0}}>\n                      {\n                        card.features.map((feature, featureIndex) => (\n                          <li key={featureIndex} style={{listStyleType: 'none', fontWeight: 600, margin: 0, padding: 0}}>\n                            {feature.text}\n                            <ul style={{margin: 0, padding: 0}}>\n                              {\n                                feature.details.map((detail, detailIndex) => (\n                                  <li key={detailIndex} style={{listStyleType: 'none', fontWeight: 'normal', margin: 0, padding: 0}}>\n                                    {detail}\n                                  </li>\n                                ))\n                              }\n                            </ul>\n                          </li>\n                        ))\n                      }\n                    </ul>\n                  </Card.Body>\n                  <Card.Footer>\n                    <LinkContainer to={card.button.link}>\n                      <Button size=\"sm\">\n                        {card.button.text}\n                      </Button>\n                    </LinkContainer>\n                  </Card.Footer>\n                </Card>\n                </Col>\n              ))\n            }\n          </Row>\n        </Container>\n      </Container>\n      <Container id=\"container-facility\" fluid>\n        {\n          this.state.copy.blurbs.slice(4, 5).map((blurb, blurbIndex) => (\n            <Container key={blurbIndex}>\n              <h3>{blurb.title}</h3>\n              <Row className=\"justify-content-xl-center justify-content-md-center\">\n              {\n                blurb.copy.map((paragraph, paragraphIndex) => (\n                  <Col xl={(12 / blurb.copy.length)} key={paragraphIndex}>\n                    <Image src={paragraph.image} />\n                    <p>{paragraph.text}</p>\n                  </Col>\n                ))\n              }\n              </Row>\n              <Row className=\"justify-content-xl-center justify-content-md-center\">\n                <Col xl=\"auto\" md=\"auto\">\n                  <LinkContainer to={'/book'}>\n                    <Button size=\"sm\">\n                      book now\n                    </Button>\n                  </LinkContainer>\n                </Col>\n              </Row>\n            </Container>\n          ))\n        }\n      </Container>\n      <Container id=\"container-map\" fluid>\n        <div style={{ height: '650px', width: '100%' }}>\n          <GoogleMapReact\n            bootstrapURLKeys={{ key: 'AIzaSyCKw8by28pNI5tlimezyyjgtXz_Nvkq2-Y' }}\n            defaultCenter={{ lat: 41.820582, lng: 23.478257 }}\n            defaultZoom={ 14 }\n            onGoogleApiLoaded={({map, maps}) => {\n              let marker = new maps.Marker({\n                position: { lat: 41.820582, lng: 23.478257 },\n                map,\n                title: 'Bears Lairs, Bansko',\n                description: 'secure, self-storage in bansko with access at your convenience',\n                link: {\n                  url: 'https://www.google.com/maps/place/Bears+Lairs/@41.8223813,23.4681867,15z/data=!4m5!3m4!1s0x0:0xadd4ea4c0b9a3216!8m2!3d41.820631!4d23.478215',\n                  text: 'maps.google.com/Bears+Lairs'\n                }\n              });\n              let infoWindow = new maps.InfoWindow({\n                content: '<h4><img src=\"favicon-32x32.png\" style=\"margin-right: 6px;\" class=\"rounded-circle\" />' + marker.title + '</h4><p>' + marker.description + '<br /><a href=\"' + marker.link.url + '\">' + marker.link.text + '</a></p>'\n              });\n              infoWindow.open(map, marker);\n              marker.addListener('click', () => {\n                map.setZoom(14);\n                map.setCenter(marker.getPosition());\n                infoWindow.open(map, marker);\n              });\n            }} />\n        </div>\n      </Container>\n      <Container id=\"container-footer\" fluid>\n        <Container>\n          <Row className=\"justify-content-xl-center justify-content-md-center\">\n            <Col xl={6}>\n              <a href=\"mailto:enquiries@bearslairs.eu\">enquiries@bearslairs.eu</a>\n              <hr />\n              &copy; 2020, Bears Lairs EOOD, Bulgaria. All rights reserved\n            </Col>\n          </Row>\n        </Container>\n      </Container>\n    </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport {\n  CardElement,\n  injectStripe\n} from 'react-stripe-elements';\n\n/*\n * https://stripe.com/docs/recipes/elements-react\n * https://stripe.com/docs/stripe-js/reference\n * https://stripe.com/docs/payments/accept-a-payment\n */\nclass CheckoutForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.submit = this.submit.bind(this);\n  }\n\n  async submit(ev) {\n    // User clicked submit\n  }\n\n  render() {\n    return (\n      <div className=\"checkout\">\n        <p>enter your payment card details below to complete your reservation</p>\n        <CardElement />\n        <hr />\n        <Button variant=\"primary\" onClick={this.submit}>\n          Purchase\n        </Button>\n      </div>\n    );\n  }\n}\n\nexport default injectStripe(CheckoutForm);\n","import React, { useRef, useState, useEffect } from 'react';\nimport { Canvas } from 'react-three-fiber';\n\nfunction Box(props) {\n  const mesh = useRef();\n  const [hovered, setHover] = useState(false);\n  const [active, setActive] = useState(props.active);\n\n  useEffect(() => {\n    mesh.current.rotation.y = -(Math.PI / 6);\n    setActive(props.active);\n  }, [props.active]);\n  return (\n    <mesh\n      scale={active ? [1.5, 1.5, 1.5] : [1, 1, 1]}\n      ref={mesh}\n      onClick={(e) => {\n        setActive(!active);\n        props.onClick();\n      }}\n      onPointerOver={(e) => setHover(true)}\n      onPointerOut={(e) => setHover(false)}>\n      <boxBufferGeometry attach=\"geometry\" args={[props.geometry.size.width, props.geometry.size.height, props.geometry.size.depth]} />\n      <meshStandardMaterial attach=\"material\" color={(hovered) ? props.color.hover : ((active) ? props.color.active : props.color.default)} wireframe={true} />\n    </mesh>\n  )\n}\n\nfunction LockerAnimation(props) {\n  return (\n    <Canvas>\n      <ambientLight />\n      <pointLight position={[10, 10, 10]} />\n      <Box geometry={props.geometry} color={props.color} onClick={props.onClick} active={props.active} />\n    </Canvas>\n  )\n}\n\nexport default LockerAnimation;","import React, { Component } from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Form from 'react-bootstrap/Form';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport Tab from 'react-bootstrap/Tab';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Cookies from 'universal-cookie';\nimport * as qs from 'query-string';\nimport 'react-dates/initialize';\nimport { DateRangePicker } from 'react-dates';\nimport 'react-dates/lib/css/_datepicker.css';\nimport moment from 'moment'\nimport {\n  Stitch,\n  AnonymousCredential,\n  RemoteMongoClient\n} from 'mongodb-stitch-browser-sdk';\nimport {\n  Elements,\n  StripeProvider\n} from 'react-stripe-elements';\nimport CheckoutForm from './CheckoutForm';\nimport LockerAnimation from './LockerAnimation';\n\nimport Logo from './Logo';\nimport Navigation from './Navigation';\n\nconst storageSpaces = [\n  {\n    category: {\n      name: 'bike',\n      description: 'open storage spaces'\n    },\n    name: 'bicycle/ebike',\n    size: {\n      width: 0.6,\n      depth: 2,\n      height: 1.1\n    },\n    price: {\n      month: 20,\n      quarter: 51,\n      biannual: 81,\n      annual: 120\n    }\n  },\n  {\n    category: {\n      name: 'bike',\n      description: 'open storage space'\n    },\n    name: 'enduro / small moto',\n    size: {\n      width: 1,\n      depth: 2,\n      height: 1.1\n    },\n    price: {\n      month: 60,\n      quarter: 150,\n      biannual: 240,\n      annual: 360\n    }\n  },\n  {\n    category: {\n      name: 'bike',\n      description: 'open storage space'\n    },\n    name: 'large motorcycle',\n    size: {\n      width: 1,\n      depth: 2.5,\n      height: 1.1\n    },\n    price: {\n      month: 80,\n      quarter: 200,\n      biannual: 320,\n      annual: 480\n    }\n  },\n  {\n    category: {\n      name: 'baby bear',\n      description: 'locker storage cupboard'\n    },\n    name: 'ski/board, boots',\n    size: {\n      width: 0.5,\n      depth: 0.5,\n      height: 2.3\n    },\n    price: {\n      month: 30,\n      quarter: 75,\n      biannual: 120,\n      annual: 180\n    }\n  },\n  {\n    category: {\n      name: 'baby bear',\n      description: 'locker storage cupboard'\n    },\n    name: 'luggage',\n    size: {\n      width: 1,\n      depth: 1,\n      height: 1.1\n    },\n    price: {\n      month: 30,\n      quarter: 75,\n      biannual: 120,\n      annual: 180\n    }\n  },\n  {\n    category: {\n      name: 'mama bear',\n      description: 'locker storage room'\n    },\n    name: 'small locker room',\n    size: {\n      width: 1,\n      depth: 2.5,\n      height: 2.3\n    },\n    price: {\n      month: 100,\n      quarter: 250,\n      biannual: 400,\n      annual: 600\n    }\n  },\n  {\n    category: {\n      name: 'mama bear',\n      description: 'locker storage room'\n    },\n    name: 'medium locker room',\n    size: {\n      width: 2,\n      depth: 2.5,\n      height: 2.3\n    },\n    price: {\n      month: 200,\n      quarter: 500,\n      biannual: 800,\n      annual: 1200\n    }\n  },\n  {\n    category: {\n      name: 'papa bear',\n      description: 'locker storage room'\n    },\n    name: 'large locker room',\n    size: {\n      width: 2.7,\n      depth: 2.5,\n      height: 2.3\n    },\n    price: {\n      month: 240,\n      quarter: 600,\n      biannual: 960,\n      annual: 1440\n    }\n  }\n];\nconst storageCategories = storageSpaces.map(lg => lg.category).filter((o, i, s) => i === s.findIndex((t) => (t.name === o.name)));\nconst querystring = qs.parse(window.location.search);\nconst cookies = new Cookies();\nconst CopyApi = 'https://raw.githubusercontent.com/bearslairs/bearslairs-data/master/copy';\nconst languages = ['bg', 'en', 'ru'];\nconst lockers = ['small', 'medium', 'large', 'bicycle', 'motorcycle', 'large-motorcycle'];\nconst client = Stitch.initializeDefaultAppClient('bearslairsstitch-pkblb');\nconst serviceClient = client.getServiceClient(RemoteMongoClient.factory, 'mongodb-atlas');\n//const stripe = Stripe('pk_test_kSrcl4f2BEKQTkQCIuDih41I0nfCqc5I');\n\nclass Book extends Component {\n  constructor(props, context) {\n    super(props, context);\n    let language = languages.includes(querystring.lang) // if the querystring lang is set, use that\n      ? querystring.lang\n      : languages.includes(cookies.get('lang')) // else if the cookies contain a lang, use that\n        ? cookies.get('lang')\n        : 'en';\n    let locker = lockers.includes(querystring.locker) // if the querystring lang is set, use that\n      ? querystring.locker\n      : 'small';\n    let selectedCategoryIndex = Math.max(0, storageCategories.findIndex((c) => (c.name === window.location.hash.slice(1).replace('+', ' '))));\n    // todo: handle timezone\n    let startDate = new Date();\n    startDate.setHours(14,0,0,0);\n    startDate.setDate(startDate.getDate() + 1);\n    let endDate = new Date();\n    endDate.setHours(12,0,0,0);\n    endDate.setMonth(startDate.getMonth() + 3);\n    this.state = {\n      stripe: null,\n      reservations: [],\n      language: language,\n      reservation: {\n        from: startDate.toISOString(),\n        to: endDate.toISOString(),\n        name: '',\n        email: '',\n        telephone: '',\n        locker: locker,\n        language: language\n      },\n      copy: {\n        languages: []\n      },\n      selectedStorageSpace: null,\n      selectedCategoryIndex: selectedCategoryIndex\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.displayReservations = this.displayReservations.bind(this);\n    this.addReservation = this.addReservation.bind(this);\n    this.lockerSelectHandler = this.lockerSelectHandler.bind(this);\n    this.getDurationInMonths = this.getDurationInMonths.bind(this);\n    this.getPriceBand = this.getPriceBand.bind(this);\n    this.getTotalPrice = this.getTotalPrice.bind(this);\n    this.getInstallments = this.getInstallments.bind(this);\n  }\n\n  handleChange(event) {\n    const target = event.target;\n    this.setState(state => {\n      state.reservation[target.id] = target.value;\n      return state;\n    });\n  }\n\n  componentDidMount() {\n    if (window.Stripe) {\n      this.setState({stripe: window.Stripe('pk_test_kSrcl4f2BEKQTkQCIuDih41I0nfCqc5I')});\n    } else {\n      document.querySelector('#stripe-js').addEventListener('load', () => {\n        this.setState({stripe: window.Stripe('pk_test_kSrcl4f2BEKQTkQCIuDih41I0nfCqc5I')});\n      });\n    }\n    fetch(CopyApi + '/' + this.state.language + '/book.json')\n      .then(responseCopyApi => responseCopyApi.json())\n      .then((copy) => {\n        this.setState(state => ({\n          language: state.language,\n          reservation: state.reservation,\n          copy: copy\n        }));\n      })\n      .catch(console.log);\n    this.db = serviceClient.db('bearslairs-bansko');\n    this.displayReservationsOnLoad();\n  }\n\n  displayReservations() {\n    this.db\n      .collection('reservations')\n      .find({}, { limit: 10 })\n      .asArray()\n      .then(reservations => { this.setState({reservations}); });\n  }\n\n  displayReservationsOnLoad() {\n    client.auth\n      .loginWithCredential(new AnonymousCredential())\n      .then(this.displayReservations)\n      .catch(console.error);\n  }\n\n  addReservation(event) {\n    event.preventDefault();\n    const { reservation } = this.state;\n    this.db\n      .collection('reservations')\n      .insertOne({\n        owner_id: client.auth.user.id,\n        reservation: reservation\n      })\n      .then(this.displayReservations)\n      .catch(console.error);\n  }\n\n  lockerSelectHandler(name) {\n    let selectedStorageSpace = storageSpaces.find(storageSpace => storageSpace.name === name);\n    if (selectedStorageSpace) {\n      this.setState(state => ({\n        selectedStorageSpace: ((state.selectedStorageSpace) && (state.selectedStorageSpace.name === name)) ? null : selectedStorageSpace\n      }));\n    }\n    //this.forceUpdate();\n  }\n\n  getDurationInMonths() {\n    let fromDate = (new Date (this.state.reservation.from));\n    let toDate = (new Date (this.state.reservation.to));\n    let months = (toDate.getFullYear() - fromDate.getFullYear()) * 12;\n    months -= fromDate.getMonth();\n    months += toDate.getMonth();\n    return months <= 0 ? 0 : months;\n  }\n\n  getPriceBand() {\n    let durationInMonths = this.getDurationInMonths();\n    if (durationInMonths < 3) {\n      return 'month';\n    } else if (durationInMonths < 6) {\n      return 'quarter';\n    } else if (durationInMonths < 12) {\n      return 'biannual';\n    }\n    return 'annual';\n  }\n\n  getTotalPrice() {\n    let priceBand = this.getPriceBand();\n    let monthlyPrice;\n    switch (priceBand) {\n      case 'month':\n        monthlyPrice = this.state.selectedStorageSpace.price[this.getPriceBand()];\n        break;\n      case 'quarter':\n        monthlyPrice = (this.state.selectedStorageSpace.price[this.getPriceBand()] / 3);\n        break;\n      case 'biannual':\n        monthlyPrice = (this.state.selectedStorageSpace.price[this.getPriceBand()] / 6);\n        break;\n      default:\n        monthlyPrice = (this.state.selectedStorageSpace.price[this.getPriceBand()] / 12);\n        break;\n    }\n    let durationInMonths = this.getDurationInMonths(this.state.reservation.from, this.state.reservation.to);\n    return (durationInMonths * monthlyPrice).toFixed(2);\n  }\n\n  getInstallments() {\n    let durationInMonths = this.getDurationInMonths(this.state.reservation.from, this.state.reservation.to);\n    return [...Array(durationInMonths).keys()].map(installmentIndex => ({\n      date: (new Date((new Date(this.state.reservation.from)).setMonth((new Date(this.state.reservation.from)).getMonth() + installmentIndex))),\n      amount: (\n        (installmentIndex < 2)\n          ? this.state.selectedStorageSpace.price.month.toFixed(2)\n          : (installmentIndex === 2)\n            ? (this.state.selectedStorageSpace.price.quarter - (this.state.selectedStorageSpace.price.month * 2)).toFixed(2)\n            : (installmentIndex < 5)\n              ? (this.state.selectedStorageSpace.price.quarter / 3).toFixed(2)\n              : (installmentIndex === 5)\n                ? (this.state.selectedStorageSpace.price.biannual - ((this.state.selectedStorageSpace.price.quarter / 3) * 5)).toFixed(2)\n                : (installmentIndex < 12)\n                  ? (this.state.selectedStorageSpace.price.biannual / 6).toFixed(2)\n                  : (this.state.selectedStorageSpace.price.annual / 12).toFixed(2)\n      )\n    }));\n  }\n\n  render() {\n    return (\n      <>\n        <Logo language={this.state.language} />\n        <Navigation language={this.state.language} />\n        <Container>\n          <Tabs defaultActiveKey={storageCategories[this.state.selectedCategoryIndex].name}>\n            {\n              storageCategories.map(storageCategory => (\n                <Tab eventKey={storageCategory.name} title={storageCategory.name + ' (' + storageCategory.description + ')'}>\n                  <Row style={{ height: '300px' }}>\n                    {\n                      storageSpaces.filter(lg => lg.category.name === storageCategory.name).map((storageSpace, lgI) => (\n                        <Col key={lgI}>\n                          <LockerAnimation\n                            geometry={storageSpace}\n                            color={{ default: 0x300b0b, active: 0x7bb32c, hover: 'hotpink'}}\n                            onClick={() => this.lockerSelectHandler(storageSpace.name)}\n                            active={((this.state.selectedStorageSpace) && (this.state.selectedStorageSpace.name === storageSpace.name))} />\n                        </Col>\n                      ))\n                    }\n                  </Row>\n                  <Row>\n                    {\n                      storageSpaces.filter(lg => lg.category.name === storageCategory.name).map((storageSpace, lgI) => (\n                        <Col key={lgI} style={{ textAlign: 'center' }}>\n                          <p style={{color: (((this.state.selectedStorageSpace) && (this.state.selectedStorageSpace.name === storageSpace.name)) ? 'hotpink' : '#300b0b')}}>\n                            <strong>{storageSpace.name}</strong>\n                            <br />\n                            floor space (area in square metres): <strong>{Math.round(storageSpace.size.width * storageSpace.size.depth * 10) / 10} m<sup>2</sup></strong>\n                            <br />\n                            air space (volume in cubic metres): <strong>{Math.round(storageSpace.size.width * storageSpace.size.depth * storageSpace.size.height * 10) / 10} m<sup>3</sup></strong>\n                            <br />\n                            width: <strong>{Math.round(storageSpace.size.width * 100)} cm</strong>\n                            <br />\n                            depth: <strong>{Math.round(storageSpace.size.depth * 100)} cm</strong>\n                            <br />\n                            height: <strong>{Math.round(storageSpace.size.height * 100)} cm</strong>\n                            <br />\n                            <br />\n                            <strong>pricing</strong>\n                            <br />\n                            1 - 2 months: <strong>bgn {storageSpace.price.month.toFixed(2)} lev</strong> per month,\n                            <br />\n                            3 - 5 months: <strong>bgn {(storageSpace.price.quarter / 3).toFixed(2)} lev</strong> per month,\n                            <br />\n                            6 - 11 months: <strong>bgn {(storageSpace.price.biannual / 6).toFixed(2)} lev</strong> per month,\n                            <br />\n                            12 or more months: <strong>bgn {(storageSpace.price.annual / 12).toFixed(2)} lev</strong> per month\n                          </p>\n                        </Col>\n                      ))\n                    }\n                  </Row>\n                </Tab>\n              ))\n            }\n          </Tabs>\n          <Row style={{ paddingTop: '10px' }}>\n            <h2>make a reservation</h2>\n          </Row>\n          <Row style={{ paddingTop: '10px' }}>\n            <Form onSubmit={this.addReservation}>\n              <Form.Group controlId=\"name\">\n                <Form.Label>name</Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"full name\"\n                  value={this.state.reservation.name}\n                  onChange={this.handleChange} />\n              </Form.Group>\n              <Form.Group controlId=\"email\">\n                <Form.Label>email</Form.Label>\n                <Form.Control\n                  type=\"email\"\n                  placeholder=\"email\"\n                  value={this.state.reservation.email}\n                  onChange={this.handleChange} />\n                <Form.Text className=\"text-muted\">\n                  we'll never share your email with anyone else.\n                </Form.Text>\n              </Form.Group>\n              <Form.Group controlId=\"telephone\">\n                <Form.Label>telephone</Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"telephone number\"\n                  value={this.state.reservation.telephone}\n                  onChange={this.handleChange} />\n              </Form.Group>\n              <Form.Group controlId=\"fromto\">\n                <Form.Label>reservation dates</Form.Label>\n                <br />\n                <DateRangePicker\n                  startDate={moment(this.state.reservation.from)}\n                  startDateId='reservation_from'\n                  endDate={moment(this.state.reservation.to)}\n                  endDateId='reservation_to'\n                  onDatesChange={({ startDate, endDate }) => this.setState(state => { state.reservation.from = startDate.toISOString(); state.reservation.to = endDate.toISOString(); return state; })}\n                  focusedInput={this.state.focusedInput}\n                  onFocusChange={focusedInput => this.setState({ focusedInput })}\n                />\n              </Form.Group>\n              <StripeProvider stripe={this.state.stripe}>\n                <Elements>\n                  <CheckoutForm />\n                </Elements>\n              </StripeProvider>\n            </Form>\n          </Row>\n          <Row>\n            What's going on?\n          </Row>\n          <Row>\n            {\n              (this.state.selectedStorageSpace)\n                ? (\n                    <>\n                      <dl>\n                        <dt>from</dt>\n                        <dd>\n                          {\n                            new Intl.DateTimeFormat(\n                              'en-GB', {\n                                year: 'numeric',\n                                month: 'long',\n                                day: '2-digit'\n                              }).format(new Date(this.state.reservation.from))\n                          }\n                        </dd>\n                        <dt>to</dt>\n                        <dd>\n                          {\n                            new Intl.DateTimeFormat(\n                              'en-GB', {\n                                year: 'numeric',\n                                month: 'long',\n                                day: '2-digit'\n                              }).format(new Date(this.state.reservation.to))\n                          }\n                        </dd>\n                        <dt>duration</dt>\n                        <dd>\n                          { this.getDurationInMonths() } month{(this.getDurationInMonths() > 1) ? 's' : ''}\n                        </dd>\n                      </dl>\n                      <p>\n                        the total price for a <strong>{\n                          this.getDurationInMonths()\n                        }</strong> month booking in a <strong>{\n                          this.state.selectedStorageSpace.category.name\n                        }/{\n                          this.state.selectedStorageSpace.name\n                        }</strong> between <strong>{\n                          new Intl.DateTimeFormat(\n                            'en-GB', {\n                              year: 'numeric',\n                              month: 'long',\n                              day: '2-digit'\n                            }).format(new Date(this.state.reservation.from))\n                          }</strong> and <strong>{\n                          new Intl.DateTimeFormat(\n                            'en-GB', {\n                              year: 'numeric',\n                              month: 'long',\n                              day: '2-digit'\n                            }).format(new Date(this.state.reservation.to))\n                          }</strong> is: <strong>bgn {\n                            this.getTotalPrice()\n                          } lev</strong>.\n                      </p>\n                      <p>\n                        this will be billed in monthly installments, as follows:\n                      </p>\n                      <dl>\n                        <dt>\n                          {\n                            this.getInstallments().map(installment => (\n                              <>\n                                <dt>\n                                  {\n                                    new Intl.DateTimeFormat(\n                                      'en-GB', {\n                                        year: 'numeric',\n                                        month: 'long',\n                                        day: '2-digit'\n                                      }).format(installment.date)\n                                  }:\n                                </dt>\n                                <dd>\n                                  {installment.amount}\n                                </dd>\n                              </>\n                            ))\n                          }\n                        </dt>\n                      </dl>\n                    </>\n                  )\n                : ('')\n            }\n          </Row>\n          {\n            /*\n            (window.location.hostname === 'localhost') ?\n            <Row>\n              <pre>\n                {JSON.stringify(this.state, null, 2)}\n              </pre>\n            </Row> : null\n            */\n          }\n        </Container>\n      </>\n    );\n  }\n}\n\nexport default Book;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport 'typeface-roboto';\nimport App from './App';\nimport Book from './Book';\n\nconst routing = (\n  <React.StrictMode>\n    <BrowserRouter>\n      <Switch>\n        <Route exact path=\"/\" component={App} />\n        <Route path=\"/book\" component={Book} />\n      </Switch>\n    </BrowserRouter>\n  </React.StrictMode>\n);\nReactDOM.render(routing, document.getElementById('root'));\n"],"sourceRoot":""}