{"version":3,"sources":["App.js","Nav.js","CheckoutForm.js","Book.js","index.js"],"names":["querystring","qs","window","location","search","cookies","Cookies","languages","lairImages","lairIcons","bikeImages","bikeIcons","App","state","language","copy","carousel","blurbs","cards","temperature","value","created_at","humidity","includes","lang","get","this","setState","prevState","set","path","fetch","CopyApi","then","responseCopyApi","json","catch","console","log","responseUbiBotApi","container","result","lastValues","JSON","parse","channel","last_values","field1","field2","Container","id","Row","Image","src","className","Navbar","Link","href","fluid","style","display","alignItems","justifyContent","Col","xl","md","theme","Math","round","max","steps","format","size","height","Intl","DateTimeFormat","year","month","day","hour","minute","second","timeZone","Date","slice","map","blurb","blurbIndex","key","title","paragraph","paragraphIndex","length","image","text","to","Button","card","cardIndex","Card","Header","backgroundImage","alt","marginTop","Body","Title","description","join","lmargin","padding","features","feature","featureIndex","listStyleType","fontWeight","margin","details","detail","detailIndex","Footer","button","link","width","bootstrapURLKeys","defaultCenter","lat","lng","defaultZoom","onGoogleApiLoaded","maps","marker","Marker","position","url","infoWindow","InfoWindow","content","open","addListener","setZoom","setCenter","getPosition","Component","Nav","props","subtitle","marginRight","CheckoutForm","submit","bind","ev","variant","onClick","React","injectStripe","lockers","client","Stitch","initializeDefaultAppClient","serviceClient","getServiceClient","RemoteMongoClient","factory","Book","context","locker","startDate","setHours","setDate","getDate","endDate","setMonth","getMonth","reservations","reservation","from","toISOString","name","email","telephone","handleChange","displayReservations","addReservation","event","target","db","displayReservationsOnLoad","collection","find","limit","asArray","auth","loginWithCredential","AnonymousCredential","error","preventDefault","insertOne","owner_id","user","paddingTop","Form","onSubmit","Group","controlId","Label","Control","type","placeholder","onChange","Text","moment","startDateId","endDateId","onDatesChange","focusedInput","onFocusChange","Check","label","checked","apiKey","hostname","stringify","routing","StrictMode","exact","component","ReactDOM","render","document","getElementById"],"mappings":"wbAgBMA,EAAcC,QAASC,OAAOC,SAASC,QACvCC,EAAU,IAAIC,IAGdC,EAAY,CAAC,KAAM,KAAM,MACzBC,EAAa,CAAC,iBAAkB,iBAAkB,kBAClDC,EAAY,CAAC,sBAAuB,sBAAuB,uBAC3DC,EAAa,CAAC,iBAAkB,kBAAmB,mBACnDC,EAAY,CAAC,sBAAuB,uBAAwB,wBA4XnDC,E,4MAzXbC,MAAQ,CACNC,SAAU,KACVC,KAAM,CACJC,SAAU,GACVC,OAAQ,GACRC,MAAO,IAETC,YAAa,CACXC,MAAO,EACPC,WAAY,wBAEdC,SAAU,CACRF,MAAO,EACPC,WAAY,yB,kEAIK,IAAD,OACdP,EAAWP,EAAUgB,SAASvB,EAAYwB,MAC1CxB,EAAYwB,KACZjB,EAAUgB,SAASlB,EAAQoB,IAAI,SAC7BpB,EAAQoB,IAAI,QACZC,KAAKb,MAAMC,SACjBY,KAAKC,UAAS,SAAAC,GAAS,MAAK,CAC1Bd,SAAUA,EACVC,KAAMa,EAAUb,SAElBV,EAAQwB,IAAI,OAAQf,EAAU,CAAEgB,KAAM,MACtCC,MAAMC,4EAAgBlB,EAAW,cAChCmB,MAAK,SAAAC,GAAe,OAAIA,EAAgBC,UACxCF,MAAK,SAAClB,GACL,EAAKY,UAAS,SAAAC,GAAS,MAAK,CAC1Bd,SAAUc,EAAUd,SACpBC,KAAMA,SAGTqB,MAAMC,QAAQC,KACfP,MA7Cc,iFA8CbE,MAAK,SAAAM,GAAiB,OAAIA,EAAkBJ,UAC5CF,MAAK,SAACO,GACL,GAAyB,YAArBA,EAAUC,OAAsB,CAClC,IAAIC,EAAaC,KAAKC,MAAMJ,EAAUK,QAAQC,aAC9C,EAAKnB,UAAS,SAAAC,GAAS,MAAK,CAC1BT,YAAauB,EAAWK,OACxBzB,SAAUoB,EAAWM,eAI1BZ,MAAMC,QAAQC,O,+BAIf,OACA,oCACE,kBAACW,EAAA,EAAD,CAAWC,GAAG,kBACZ,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAOC,IAAK,YAAaC,UAAU,aAGvC,kBAACC,EAAA,EAAD,CAAQL,GAAG,iBACT,kBAAC,IAAD,CAAKI,UAAU,UACb,kBAAC,IAAIE,KAAL,CAAUC,KAAK,UAAf,SACA,kBAAC,IAAID,KAAL,CAAUC,KAAK,WAAf,UACA,kBAAC,IAAID,KAAL,CAAUC,KAAK,aAAf,cAGJ,kBAACR,EAAA,EAAD,CAAWC,GAAG,mBAAmBQ,OAAK,EAACC,MAAO,CAACC,QAAS,OAAQC,WAAY,SAAUC,eAAgB,WACpG,4DAC+B,6BAD/B,oCAKF,kBAACb,EAAA,EAAD,CAAWC,GAAG,yBACZ,gEAGA,+HAGE,uBAAGO,KAAK,8DAAR,+BAHF,IAME,6BANF,4HAUA,kBAACN,EAAA,EAAD,CAAKG,UAAU,uDACb,kBAACS,EAAA,EAAD,CAAKC,GAAG,OAAOC,GAAG,QAChB,kBAAC,IAAD,CACEC,MAAM,OACN9C,MAAQ+C,KAAKC,MAAqC,GAA/B1C,KAAKb,MAAMM,YAAYC,OAAc,GACxDiD,IAAqC,IAA/B3C,KAAKb,MAAMM,YAAYC,MAC7BkD,MAAM,IACNC,OAAO,QACPC,KAAK,QACLC,OAAO,SAGX,kBAACV,EAAA,EAAD,CAAKC,GAAG,OAAOC,GAAG,QAChB,2CAEE,IAAIS,KAAKC,eAAe,QAAS,CAC/BC,KAAM,UACNC,MAAO,OACPC,IAAK,UACLC,KAAM,UACNC,OAAQ,UACRC,OAAQ,UACRC,SAAU,iBACTX,OAAO,IAAIY,KAAKzD,KAAKb,MAAMM,YAAYE,aAX9C,QAaE,gCAAU8C,KAAKC,MAAqC,GAA/B1C,KAAKb,MAAMM,YAAYC,OAAc,GAA1D,SACA,wCAEE,IAAIsD,KAAKC,eAAe,QAAS,CAC/BC,KAAM,UACNC,MAAO,OACPC,IAAK,UACLC,KAAM,UACNC,OAAQ,UACRC,OAAQ,UACRC,SAAU,iBACTX,OAAO,IAAIY,KAAKzD,KAAKb,MAAMS,SAASD,aAxB3C,QA0BE,gCAASK,KAAKb,MAAMS,SAASF,MAA7B,QAIN,kBAAC6B,EAAA,EAAD,CAAWC,GAAG,kBAAkBQ,OAAK,GAEjChC,KAAKb,MAAME,KAAKE,OAAOmE,MAAM,EAAG,GAAGC,KAAI,SAACC,EAAOC,GAAR,OACrC,kBAACtC,EAAA,EAAD,CAAWuC,IAAKD,GACd,4BAAKD,EAAMG,OACX,kBAACtC,EAAA,EAAD,CAAKG,UAAU,uDAEbgC,EAAMvE,KAAKsE,KAAI,SAACK,EAAWC,GAAZ,OACb,kBAAC5B,EAAA,EAAD,CAAKC,GAAK,GAAKsB,EAAMvE,KAAK6E,OAASJ,IAAKG,GACtC,kBAACvC,EAAA,EAAD,CAAOC,IAAKqC,EAAUG,QACtB,2BAAIH,EAAUI,gBAS5B,kBAAC7C,EAAA,EAAD,CAAWC,GAAG,qBAAqBQ,OAAK,GACtC,kBAACT,EAAA,EAAD,KACE,kBAACE,EAAA,EAAD,CAAKG,UAAU,uDAEX5B,KAAKb,MAAME,KAAKE,OAAOmE,MAAM,EAAG,GAAGC,KAAI,SAACC,EAAOC,GAAR,OACrC,kBAACxB,EAAA,EAAD,CAAKC,GAAI,EAAGwB,IAAKD,GACf,4BAAKD,EAAMG,OAETH,EAAMvE,KAAKsE,KAAI,SAACK,EAAWC,GAAZ,OACb,uBAAGH,IAAKG,GACLD,MAIP,kBAAC,gBAAD,CAAeK,GAAI,SACjB,kBAACC,EAAA,EAAD,CAAQxB,KAAK,MAAb,oBAUd,kBAACvB,EAAA,EAAD,CAAWC,GAAG,kBACZ,gDAGA,kBAACC,EAAA,EAAD,CAAKG,UAAU,uDAEX5B,KAAKb,MAAME,KAAKG,MAAMkE,MAAM,EAAG,GAAGC,KAAI,SAACY,EAAMC,GAAP,OACpC,kBAACnC,EAAA,EAAD,CAAKyB,IAAKU,GACV,kBAACC,EAAA,EAAD,CAAM7C,UAAU,SACd,kBAAC6C,EAAA,EAAKC,OAAN,KACGH,EAAKR,OAER,yBAAK9B,MAAO,CAACc,OAAQ,QAAS4B,gBAAiB,OAAS7F,EAAW0F,GAAa,MAC9E,kBAAC9C,EAAA,EAAD,CAAOC,IAAK5C,EAAUyF,GAAYI,IAAKL,EAAKJ,MAAMS,IAAK3C,MAAO,CAAC4C,UAAW,WAE5E,kBAACJ,EAAA,EAAKK,KAAN,KACE,kBAACL,EAAA,EAAKM,MAAN,KACGR,EAAKS,YAAYC,KAAK,MAEzB,6BACA,wBAAIhD,MAAO,CAACiD,QAAS,EAAGC,QAAS,IAE7BZ,EAAKa,SAASzB,KAAI,SAAC0B,EAASC,GAAV,OAChB,wBAAIxB,IAAKwB,EAAcrD,MAAO,CAACsD,cAAe,OAAQC,WAAY,IAAKC,OAAQ,EAAGN,QAAS,IACxFE,EAAQjB,KACT,wBAAInC,MAAO,CAACiD,QAAS,EAAGC,QAAS,IAE7BE,EAAQK,QAAQ/B,KAAI,SAACgC,EAAQC,GAAT,OAClB,wBAAI9B,IAAK8B,EAAa3D,MAAO,CAACsD,cAAe,OAAQC,WAAY,SAAUC,OAAQ,EAAGN,QAAS,IAC5FQ,aAUnB,kBAAClB,EAAA,EAAKoB,OAAN,KACE,kBAAC,gBAAD,CAAexB,GAAIE,EAAKuB,OAAOC,MAC7B,kBAACzB,EAAA,EAAD,CAAQxB,KAAK,MACVyB,EAAKuB,OAAO1B,eAU7B,kBAAC7C,EAAA,EAAD,CAAWC,GAAG,qBAAqBQ,OAAK,GAEpChC,KAAKb,MAAME,KAAKE,OAAOmE,MAAM,EAAG,GAAGC,KAAI,SAACC,EAAOC,GAAR,OACrC,kBAACtC,EAAA,EAAD,CAAWuC,IAAKD,GACd,4BAAKD,EAAMG,OACX,kBAACtC,EAAA,EAAD,CAAKG,UAAU,uDACb,kBAACS,EAAA,EAAD,CAAKC,GAAI,GACP,2BAAIsB,EAAMvE,KAAK,MAGnB,gCAAYuC,UAAU,cACpB,2BAAIgC,EAAMvE,KAAK,UAMzB,kBAACkC,EAAA,EAAD,CAAWC,GAAG,iBAAiBQ,OAAK,GAEhChC,KAAKb,MAAME,KAAKE,OAAOmE,MAAM,EAAG,GAAGC,KAAI,SAACC,EAAOC,GAAR,OACrC,kBAACtC,EAAA,EAAD,CAAWuC,IAAKD,GACd,4BAAKD,EAAMG,OACX,kBAACtC,EAAA,EAAD,CAAKG,UAAU,uDACb,kBAACS,EAAA,EAAD,CAAKC,GAAI,GACP,2BAAIsB,EAAMvE,KAAK,UAMzB,kBAACkC,EAAA,EAAD,KACE,kBAACE,EAAA,EAAD,CAAKG,UAAU,uDAEX5B,KAAKb,MAAME,KAAKG,MAAMkE,MAAM,EAAG,GAAGC,KAAI,SAACY,EAAMC,GAAP,OACpC,kBAACnC,EAAA,EAAD,CAAKyB,IAAKU,GACV,kBAACC,EAAA,EAAD,CAAM7C,UAAU,SACd,kBAAC6C,EAAA,EAAKC,OAAN,KACGH,EAAKR,OAER,yBAAK9B,MAAO,CAACc,OAAQ,QAAS4B,gBAAiB,OAAS3F,EAAWwF,GAAa,MAC9E,kBAAC9C,EAAA,EAAD,CAAOC,IAAK1C,EAAUuF,GAAYI,IAAKL,EAAKJ,MAAMS,IAAK3C,MAAO,CAAC4C,UAAW,WAE5E,kBAACJ,EAAA,EAAKK,KAAN,KACE,kBAACL,EAAA,EAAKM,MAAN,KACGR,EAAKS,YAAYC,KAAK,MAEzB,6BACA,wBAAIhD,MAAO,CAACiD,QAAS,EAAGC,QAAS,IAE7BZ,EAAKa,SAASzB,KAAI,SAAC0B,EAASC,GAAV,OAChB,wBAAIxB,IAAKwB,EAAcrD,MAAO,CAACuD,WAAY,IAAKC,OAAQ,EAAGN,QAAS,IACjEE,EAAQjB,KACT,wBAAInC,MAAO,CAACwD,OAAQ,EAAGN,QAAS,IAE5BE,EAAQK,QAAQ/B,KAAI,SAACgC,EAAQC,GAAT,OAClB,wBAAI9B,IAAK8B,EAAa3D,MAAO,CAACsD,cAAe,OAAQC,WAAY,SAAUC,OAAQ,EAAGN,QAAS,IAC5FQ,aAUnB,kBAAClB,EAAA,EAAKoB,OAAN,KACE,kBAAC,gBAAD,CAAexB,GAAIE,EAAKuB,OAAOC,MAC7B,kBAACzB,EAAA,EAAD,CAAQxB,KAAK,MACVyB,EAAKuB,OAAO1B,gBAW/B,kBAAC7C,EAAA,EAAD,CAAWC,GAAG,qBAAqBQ,OAAK,GAEpChC,KAAKb,MAAME,KAAKE,OAAOmE,MAAM,EAAG,GAAGC,KAAI,SAACC,EAAOC,GAAR,OACrC,kBAACtC,EAAA,EAAD,CAAWuC,IAAKD,GACd,4BAAKD,EAAMG,OACX,kBAACtC,EAAA,EAAD,CAAKG,UAAU,uDAEbgC,EAAMvE,KAAKsE,KAAI,SAACK,EAAWC,GAAZ,OACb,kBAAC5B,EAAA,EAAD,CAAKC,GAAK,GAAKsB,EAAMvE,KAAK6E,OAASJ,IAAKG,GACtC,kBAACvC,EAAA,EAAD,CAAOC,IAAKqC,EAAUG,QACtB,2BAAIH,EAAUI,WAKpB,kBAAC3C,EAAA,EAAD,CAAKG,UAAU,uDACb,kBAACS,EAAA,EAAD,CAAKC,GAAG,OAAOC,GAAG,QAChB,kBAAC,gBAAD,CAAe8B,GAAI,SACjB,kBAACC,EAAA,EAAD,CAAQxB,KAAK,MAAb,oBAUd,kBAACvB,EAAA,EAAD,CAAWC,GAAG,gBAAgBQ,OAAK,GACjC,yBAAKC,MAAO,CAAEc,OAAQ,QAASiD,MAAO,SACpC,kBAAC,IAAD,CACEC,iBAAkB,CAAEnC,IAAK,2CACzBoC,cAAe,CAAEC,IAAK,UAAWC,IAAK,WACtCC,YAAc,GACdC,kBAAmB,YAAkB,IAAhB3C,EAAe,EAAfA,IAAK4C,EAAU,EAAVA,KACpBC,EAAS,IAAID,EAAKE,OAAO,CAC3BC,SAAU,CAAEP,IAAK,UAAWC,IAAK,WACjCzC,MACAI,MAAO,sBACPiB,YAAa,iEACbe,KAAM,CACJY,IAAK,8IACLvC,KAAM,iCAGNwC,EAAa,IAAIL,EAAKM,WAAW,CACnCC,QAAS,wFAA0FN,EAAOzC,MAAQ,WAAayC,EAAOxB,YAAc,kBAAoBwB,EAAOT,KAAKY,IAAM,KAAOH,EAAOT,KAAK3B,KAAO,aAEtNwC,EAAWG,KAAKpD,EAAK6C,GACrBA,EAAOQ,YAAY,SAAS,WAC1BrD,EAAIsD,QAAQ,IACZtD,EAAIuD,UAAUV,EAAOW,eACrBP,EAAWG,KAAKpD,EAAK6C,WAK/B,kBAACjF,EAAA,EAAD,CAAWC,GAAG,mBAAmBQ,OAAK,GACpC,kBAACT,EAAA,EAAD,KACE,kBAACE,EAAA,EAAD,CAAKG,UAAU,uDACb,kBAACS,EAAA,EAAD,CAAKC,GAAI,GACP,uBAAGP,KAAK,kCAAR,2BACA,6BAFF,sE,GA7WMqF,a,gBCnBZ9I,EAAcC,QAASC,OAAOC,SAASC,QACvCC,EAAU,IAAIC,IAEdC,EAAY,CAAC,KAAM,KAAM,MA6DhBwI,E,kDA1Db,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDnI,MAAQ,CACXC,SAAU,KACVC,KAAM,CACJ0E,MAAO,GACPwD,SAAU,GACV1I,UAAW,KAPE,E,gEAYE,IAAD,OACdO,EAAWP,EAAUgB,SAASvB,EAAYwB,MAC1CxB,EAAYwB,KACZjB,EAAUgB,SAASlB,EAAQoB,IAAI,SAC7BpB,EAAQoB,IAAI,QACZC,KAAKb,MAAMC,SACjBY,KAAKC,UAAS,SAAAC,GAAS,MAAK,CAC1Bd,SAAUA,EACVC,KAAMa,EAAUb,SAElBV,EAAQwB,IAAI,OAAQf,EAAU,CAAEgB,KAAM,MACtCC,MAAMC,4EAAgBlB,EAAW,aAChCmB,MAAK,SAAAC,GAAe,OAAIA,EAAgBC,UACxCF,MAAK,SAAClB,GACL,EAAKY,UAAS,SAAAC,GAAS,MAAK,CAC1Bd,SAAUc,EAAUd,SACpBC,KAAMA,SAGTqB,MAAMC,QAAQC,O,+BAGf,OACE,4BAAQgB,UAAU,uBAChB,kBAAC,gBAAD,CAAeyC,GAAG,KAChB,6BACE,yBAAK1C,IAAI,oBAAoBiD,IAAI,mBAAmB3C,MAAO,CAACuF,YAAa,OAAQ5F,UAAU,8BAC3F,wBAAIA,UAAU,cAAc5B,KAAKb,MAAME,KAAK0E,SAGhD,wBAAInC,UAAU,yBAAyB5B,KAAKb,MAAME,KAAKkI,UACvD,kBAAC,gBAAD,CAAelD,GAAG,SAChB,kBAACC,EAAA,EAAD,CAAQ1C,UAAU,eAAlB,SAEF,0BAAMA,UAAU,0BAEZ5B,KAAKb,MAAME,KAAKR,UAAU8E,KAAI,SAAA7D,GAAI,OAChC,uBAAGgE,IAAKhE,EAAMiC,KAAM,SAAWjC,EAAM8B,UAAU,cAAc9B,Y,GAlDzDsH,a,sFCAZK,E,kDACJ,WAAYH,GAAQ,IAAD,8BACjB,cAAMA,IACDI,OAAS,EAAKA,OAAOC,KAAZ,gBAFG,E,4FAKNC,G,2LAKX,OACE,yBAAKhG,UAAU,YACb,iGACA,kBAAC,cAAD,MACA,6BACA,kBAAC0C,EAAA,EAAD,CAAQuD,QAAQ,UAAUC,QAAS9H,KAAK0H,QAAxC,iB,GAhBmBK,IAAMX,WAwBlBY,yBAAaP,GCdtBnJ,EAAcC,QAASC,OAAOC,SAASC,QACvCC,EAAU,IAAIC,IAEdC,GAAY,CAAC,KAAM,KAAM,MACzBoJ,GAAU,CAAC,QAAS,SAAU,QAAS,UAAW,aAAc,oBAChEC,GAASC,IAAOC,2BAA2B,0BAC3CC,GAAgBH,GAAOI,iBAAiBC,IAAkBC,QAAS,iBAiM1DC,G,kDA7Lb,WAAYnB,EAAOoB,GAAU,IAAD,sBAC1B,cAAMpB,EAAOoB,GACb,IAAItJ,EAAWP,GAAUgB,SAASvB,EAAYwB,MAC1CxB,EAAYwB,KACZjB,GAAUgB,SAASlB,EAAQoB,IAAI,SAC7BpB,EAAQoB,IAAI,QACZ,KACF4I,EAASV,GAAQpI,SAASvB,EAAYqK,QACtCrK,EAAYqK,OACZ,QAEAC,EAAY,IAAInF,KACpBmF,EAAUC,SAAS,GAAG,EAAE,EAAE,GAC1BD,EAAUE,QAAQF,EAAUG,UAAY,GACxC,IAAIC,EAAU,IAAIvF,KAdQ,OAe1BuF,EAAQH,SAAS,GAAG,EAAE,EAAE,GACxBG,EAAQC,SAASL,EAAUM,WAAa,GACxC,EAAK/J,MAAQ,CACXgK,aAAc,GACd/J,SAAUA,EACVgK,YAAa,CACXC,KAAMT,EAAUU,cAChBjF,GAAI2E,EAAQM,cACZC,KAAM,GACNC,MAAO,GACPC,UAAW,GACXd,OAAQA,EACRvJ,SAAUA,GAEZC,KAAM,CACJR,UAAW,KAGf,EAAK6K,aAAe,EAAKA,aAAa/B,KAAlB,gBACpB,EAAKgC,oBAAsB,EAAKA,oBAAoBhC,KAAzB,gBAC3B,EAAKiC,eAAiB,EAAKA,eAAejC,KAApB,gBAnCI,E,yDAqCfkC,GACX,IAAMC,EAASD,EAAMC,OACrB9J,KAAKC,UAAS,SAAAd,GAEZ,OADAA,EAAMiK,YAAYU,EAAOtI,IAAMsI,EAAOpK,MAC/BP,O,0CAGU,IAAD,OAClBkB,MAAMC,4EAAgBN,KAAKb,MAAMC,SAAW,cACzCmB,MAAK,SAAAC,GAAe,OAAIA,EAAgBC,UACxCF,MAAK,SAAClB,GACL,EAAKY,UAAS,SAAAd,GAAK,MAAK,CACtBC,SAAUD,EAAMC,SAChBgK,YAAajK,EAAMiK,YACnB/J,KAAMA,SAGTqB,MAAMC,QAAQC,KACjBZ,KAAK+J,GAAK1B,GAAc0B,GAAG,qBAC3B/J,KAAKgK,8B,4CAGgB,IAAD,OACpBhK,KAAK+J,GACFE,WAAW,gBACXC,KAAK,GAAI,CAAEC,MAAO,MAClBC,UACA7J,MAAK,SAAA4I,GAAkB,EAAKlJ,SAAS,CAACkJ,sB,kDAIzCjB,GAAOmC,KACJC,oBAAoB,IAAIC,KACxBhK,KAAKP,KAAK2J,qBACVjJ,MAAMC,QAAQ6J,S,qCAGJX,GACbA,EAAMY,iBADc,IAEZrB,EAAgBpJ,KAAKb,MAArBiK,YACRpJ,KAAK+J,GACFE,WAAW,gBACXS,UAAU,CACTC,SAAUzC,GAAOmC,KAAKO,KAAKpJ,GAC3B4H,YAAaA,IAEd7I,KAAKP,KAAK2J,qBACVjJ,MAAMC,QAAQ6J,S,+BAGT,IAAD,OACP,OACE,kBAACjJ,EAAA,EAAD,KACE,kBAAC,EAAD,MACA,kBAACE,EAAA,EAAD,CAAKQ,MAAO,CAAE4I,WAAY,SACxB,mDAEF,kBAACpJ,EAAA,EAAD,CAAKQ,MAAO,CAAE4I,WAAY,SAExB,kBAACC,EAAA,EAAD,CAAMC,SAAU/K,KAAK4J,gBACnB,kBAACkB,EAAA,EAAKE,MAAN,CAAYC,UAAU,QACpB,kBAACH,EAAA,EAAKI,MAAN,aACA,kBAACJ,EAAA,EAAKK,QAAN,CACEC,KAAK,OACLC,YAAY,YACZ3L,MAAOM,KAAKb,MAAMiK,YAAYG,KAC9B+B,SAAUtL,KAAK0J,gBAEnB,kBAACoB,EAAA,EAAKE,MAAN,CAAYC,UAAU,SACpB,kBAACH,EAAA,EAAKI,MAAN,cACA,kBAACJ,EAAA,EAAKK,QAAN,CACEC,KAAK,QACLC,YAAY,QACZ3L,MAAOM,KAAKb,MAAMiK,YAAYI,MAC9B8B,SAAUtL,KAAK0J,eACjB,kBAACoB,EAAA,EAAKS,KAAN,CAAW3J,UAAU,cAArB,mDAIF,kBAACkJ,EAAA,EAAKE,MAAN,CAAYC,UAAU,aACpB,kBAACH,EAAA,EAAKI,MAAN,kBACA,kBAACJ,EAAA,EAAKK,QAAN,CACEC,KAAK,OACLC,YAAY,mBACZ3L,MAAOM,KAAKb,MAAMiK,YAAYK,UAC9B6B,SAAUtL,KAAK0J,gBAEnB,kBAACoB,EAAA,EAAKE,MAAN,CAAYC,UAAU,UACpB,kBAACH,EAAA,EAAKI,MAAN,0BACA,6BACA,kBAAC,kBAAD,CACEtC,UAAW4C,IAAOxL,KAAKb,MAAMiK,YAAYC,MACzCoC,YAAY,mBACZzC,QAASwC,IAAOxL,KAAKb,MAAMiK,YAAY/E,IACvCqH,UAAU,iBACVC,cAAe,gBAAG/C,EAAH,EAAGA,UAAWI,EAAd,EAAcA,QAAd,OAA4B,EAAK/I,UAAS,SAAAd,GAA2G,OAAhGA,EAAMiK,YAAYC,KAAOT,EAAUU,cAAenK,EAAMiK,YAAY/E,GAAK2E,EAAQM,cAAsBnK,MAC3KyM,aAAc5L,KAAKb,MAAMyM,aACzBC,cAAe,SAAAD,GAAY,OAAI,EAAK3L,SAAS,CAAE2L,qBAGnD,kBAACd,EAAA,EAAKE,MAAN,CAAYC,UAAU,UACpB,kBAACH,EAAA,EAAKI,MAAN,qCACA,kBAACJ,EAAA,EAAKgB,MAAN,CACEV,KAAK,QACLW,MAAM,oBACNT,SAAU,kBAAM,EAAKrL,UAAS,SAAAd,GAA8C,OAApCA,EAAMiK,YAAYT,OAAS,QAAgBxJ,MACnF6M,QAA2C,UAAlChM,KAAKb,MAAMiK,YAAYT,SAClC,kBAACmC,EAAA,EAAKgB,MAAN,CACEV,KAAK,QACLW,MAAM,qBACNT,SAAU,kBAAM,EAAKrL,UAAS,SAAAd,GAA+C,OAArCA,EAAMiK,YAAYT,OAAS,SAAiBxJ,MACpF6M,QAA2C,WAAlChM,KAAKb,MAAMiK,YAAYT,SAClC,kBAACmC,EAAA,EAAKgB,MAAN,CACEV,KAAK,QACLW,MAAM,oBACNT,SAAU,kBAAM,EAAKrL,UAAS,SAAAd,GAA8C,OAApCA,EAAMiK,YAAYT,OAAS,QAAgBxJ,MACnF6M,QAA2C,UAAlChM,KAAKb,MAAMiK,YAAYT,SAClC,kBAACmC,EAAA,EAAKgB,MAAN,CACEV,KAAK,QACLW,MAAM,gBACNT,SAAU,kBAAM,EAAKrL,UAAS,SAAAd,GAAgD,OAAtCA,EAAMiK,YAAYT,OAAS,UAAkBxJ,MACrF6M,QAA2C,YAAlChM,KAAKb,MAAMiK,YAAYT,SAClC,kBAACmC,EAAA,EAAKgB,MAAN,CACEV,KAAK,QACLW,MAAM,mBACNT,SAAU,kBAAM,EAAKrL,UAAS,SAAAd,GAAmD,OAAzCA,EAAMiK,YAAYT,OAAS,aAAqBxJ,MACxF6M,QAA2C,eAAlChM,KAAKb,MAAMiK,YAAYT,SAClC,kBAACmC,EAAA,EAAKgB,MAAN,CACEV,KAAK,QACLW,MAAM,yBACNT,SAAU,kBAAM,EAAKrL,UAAS,SAAAd,GAAyD,OAA/CA,EAAMiK,YAAYT,OAAS,mBAA2BxJ,MAC9F6M,QAA2C,qBAAlChM,KAAKb,MAAMiK,YAAYT,UAEpC,kBAAC,iBAAD,CAAgBsD,OAAO,8CACrB,kBAAC,WAAD,KACE,kBAAC,EAAD,UAMwB,cAA7BzN,OAAOC,SAASyN,SACjB,kBAACzK,EAAA,EAAD,KACE,6BACGR,KAAKkL,UAAUnM,KAAKb,MAAO,KAAM,KAE7B,U,GAxLA4I,IAAMX,WCtBnBgF,GACJ,kBAAC,IAAMC,WAAP,KACE,kBAAC,gBAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAAClM,KAAK,IAAImM,UAAWrN,IACjC,kBAAC,IAAD,CAAOkB,KAAK,QAAQmM,UAAW9D,QAKvC+D,IAASC,OAAOL,GAASM,SAASC,eAAe,W","file":"static/js/main.bb1ad0fc.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { LinkContainer } from 'react-router-bootstrap'\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport Col from 'react-bootstrap/Col';\nimport Container from 'react-bootstrap/Container';\nimport Image from 'react-bootstrap/Image';\nimport Nav from 'react-bootstrap/Nav';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Row from 'react-bootstrap/Row';\nimport Thermometer from 'react-thermometer-component'\nimport Cookies from 'universal-cookie';\n//import Nav from './Nav';\nimport * as qs from 'query-string';\nimport GoogleMapReact from 'google-map-react';\n\nconst querystring = qs.parse(window.location.search);\nconst cookies = new Cookies();\nconst CopyApi = 'https://raw.githubusercontent.com/bearslairs/bearslairs-data/master/copy';\nconst UbiBotApi = 'https://api.ubibot.io/channels/13604?api_key=609210eb2306427a88d662d48ddb578d';\nconst languages = ['bg', 'en', 'ru'];\nconst lairImages = ['/lair-baby.png', '/lair-mama.png', '/lair-papa.png'];\nconst lairIcons = ['/lair-baby-icon.png', '/lair-mama-icon.png', '/lair-papa-icon.png'];\nconst bikeImages = ['/bike-rack.png', '/bike-small.png', '/bike-large.png'];\nconst bikeIcons = ['/bike-rack-icon.png', '/bike-small-icon.png', '/bike-large-icon.png'];\n\nclass App extends Component {\n  state = {\n    language: 'en',\n    copy: {\n      carousel: [],\n      blurbs: [],\n      cards: []\n    },\n    temperature: {\n      value: 0,\n      created_at: '2020-01-01T00:00:01Z'\n    },\n    humidity: {\n      value: 0,\n      created_at: '2020-01-01T00:00:01Z'\n    }\n  };\n\n  componentDidMount() {\n    let language = languages.includes(querystring.lang) // if the querystring lang is set, use that\n      ? querystring.lang\n      : languages.includes(cookies.get('lang')) // else if the cookies contain a lang, use that\n        ? cookies.get('lang')\n        : this.state.language; // fall back to a default\n    this.setState(prevState => ({ \n      language: language,\n      copy: prevState.copy\n    }));\n    cookies.set('lang', language, { path: '/' });\n    fetch(CopyApi + '/' + language + '/home.json')\n    .then(responseCopyApi => responseCopyApi.json())\n    .then((copy) => {\n      this.setState(prevState => ({\n        language: prevState.language,\n        copy: copy\n      }));\n    })\n    .catch(console.log);\n    fetch(UbiBotApi)\n    .then(responseUbiBotApi => responseUbiBotApi.json())\n    .then((container) => {\n      if (container.result === 'success') {\n        let lastValues = JSON.parse(container.channel.last_values);\n        this.setState(prevState => ({\n          temperature: lastValues.field1,\n          humidity: lastValues.field2\n        }));\n      }\n    })\n    .catch(console.log);\n  }\n\n  render() {\n    return (\n    <>\n      <Container id=\"container-logo\">\n        <Row>\n          <Image src={'/logo.png'} className=\"m-auto\" />\n        </Row>\n      </Container>\n      <Navbar id=\"container-nav\">\n        <Nav className=\"m-auto\">\n          <Nav.Link href=\"#about\">about</Nav.Link>\n          <Nav.Link href=\"#prices\">prices</Nav.Link>\n          <Nav.Link href=\"#location\">location</Nav.Link>\n        </Nav>\n      </Navbar>\n      <Container id=\"container-header\" fluid style={{display: \"flex\", alignItems: \"center\", justifyContent: \"center\"}}>\n        <h2>\n          secure self storage in bansko<br />\n          with access at your convenience\n        </h2>\n      </Container>\n      <Container id=\"container-environment\">\n        <h3>\n          real-time environment monitoring\n        </h3>\n        <p>\n          we monitor temperature, humidity and light within the facility and publish those readings at\n          &nbsp;\n          <a href=\"https://space.ubibot.io/space/user/device/channel-id/13604\">\n            ubibot.io/bearslairs-bansko\n          </a>,\n          <br />\n          so our customers can stay informed of the environmetal conditions of their self-storage.\n          The latest readings taken were:\n        </p>\n        <Row className=\"justify-content-xl-center justify-content-md-center\">\n          <Col xl=\"auto\" md=\"auto\">\n            <Thermometer\n              theme=\"dark\"\n              value={(Math.round(this.state.temperature.value * 10) / 10)}\n              max={(this.state.temperature.value * 1.3)}\n              steps=\"3\"\n              format=\"°C\"\n              size=\"large\"\n              height=\"200\"\n            />\n          </Col>\n          <Col xl=\"auto\" md=\"auto\">\n            <h4>temperature</h4>\n            {\n              new Intl.DateTimeFormat(\"en-GB\", {\n                year: \"numeric\",\n                month: \"long\",\n                day: \"2-digit\",\n                hour: 'numeric',\n                minute: 'numeric',\n                second: 'numeric',\n                timeZone: 'Europe/Sofia'\n              }).format(new Date(this.state.temperature.created_at))\n            }:&nbsp;\n            <strong>{(Math.round(this.state.temperature.value * 10) / 10)}°C</strong>\n            <h4>humidity</h4>\n            {\n              new Intl.DateTimeFormat(\"en-GB\", {\n                year: \"numeric\",\n                month: \"long\",\n                day: \"2-digit\",\n                hour: 'numeric',\n                minute: 'numeric',\n                second: 'numeric',\n                timeZone: 'Europe/Sofia'\n              }).format(new Date(this.state.humidity.created_at))\n            }:&nbsp;\n            <strong>{this.state.humidity.value}%</strong>\n          </Col>\n        </Row>\n      </Container>\n      <Container id=\"container-about\" fluid>\n        {\n          this.state.copy.blurbs.slice(0, 1).map((blurb, blurbIndex) => (\n            <Container key={blurbIndex}>\n              <h3>{blurb.title}</h3>\n              <Row className=\"justify-content-xl-center justify-content-md-center\">\n              {\n                blurb.copy.map((paragraph, paragraphIndex) => (\n                  <Col xl={(12 / blurb.copy.length)} key={paragraphIndex}>\n                    <Image src={paragraph.image} />\n                    <p>{paragraph.text}</p>\n                  </Col>\n                ))\n              }\n              </Row>\n            </Container>\n          ))\n        }\n      </Container>\n      <Container id=\"container-security\" fluid>\n        <Container>\n          <Row className=\"justify-content-xl-center justify-content-md-center\">\n            {\n              this.state.copy.blurbs.slice(1, 2).map((blurb, blurbIndex) => (\n                <Col xl={7} key={blurbIndex}>\n                  <h3>{blurb.title}</h3>\n                  {\n                    blurb.copy.map((paragraph, paragraphIndex) => (\n                      <p key={paragraphIndex}>\n                        {paragraph}\n                      </p>\n                    ))\n                  }\n                  <LinkContainer to={'/book'}>\n                    <Button size=\"sm\">\n                      book now\n                    </Button>\n                  </LinkContainer>\n                </Col>\n              ))\n            }\n          </Row>\n        </Container>\n      </Container>\n      <Container id=\"container-lair\">\n        <h3>\n          choose your lair\n        </h3>\n        <Row className=\"justify-content-xl-center justify-content-md-center\">\n          {\n            this.state.copy.cards.slice(0, 3).map((card, cardIndex) => (\n              <Col key={cardIndex}>\n              <Card className=\"h-100\">\n                <Card.Header>\n                  {card.title}\n                </Card.Header>\n                <div style={{height: '200px', backgroundImage: 'url(' + lairImages[cardIndex] + ')'}}>\n                  <Image src={lairIcons[cardIndex]} alt={card.image.alt} style={{marginTop: '25px'}} />\n                </div>\n                <Card.Body>\n                  <Card.Title>\n                    {card.description.join(' ')}\n                  </Card.Title>\n                  <hr />\n                  <ul style={{lmargin: 0, padding: 0}}>\n                    {\n                      card.features.map((feature, featureIndex) => (\n                        <li key={featureIndex} style={{listStyleType: 'none', fontWeight: 600, margin: 0, padding: 0}}>\n                          {feature.text}\n                          <ul style={{lmargin: 0, padding: 0}}>\n                            {\n                              feature.details.map((detail, detailIndex) => (\n                                <li key={detailIndex} style={{listStyleType: 'none', fontWeight: 'normal', margin: 0, padding: 0}}>\n                                  {detail}\n                                </li>\n                              ))\n                            }\n                          </ul>\n                        </li>\n                      ))\n                    }\n                  </ul>\n                </Card.Body>\n                <Card.Footer>\n                  <LinkContainer to={card.button.link}>\n                    <Button size=\"sm\">\n                      {card.button.text}\n                    </Button>\n                  </LinkContainer>\n                </Card.Footer>\n              </Card>\n              </Col>\n            ))\n          }\n        </Row>\n      </Container>\n      <Container id=\"container-adaptive\" fluid>\n        {\n          this.state.copy.blurbs.slice(2, 3).map((blurb, blurbIndex) => (\n            <Container key={blurbIndex}>\n              <h3>{blurb.title}</h3>\n              <Row className=\"justify-content-xl-center justify-content-md-center\">\n                <Col xl={7}>\n                  <p>{blurb.copy[0]}</p>\n                </Col>\n              </Row>\n              <blockquote className=\"blockquote\">\n                <p>{blurb.copy[1]}</p>\n              </blockquote>\n            </Container>\n          ))\n        }\n      </Container>\n      <Container id=\"container-bike\" fluid>\n        {\n          this.state.copy.blurbs.slice(3, 4).map((blurb, blurbIndex) => (\n            <Container key={blurbIndex}>\n              <h3>{blurb.title}</h3>\n              <Row className=\"justify-content-xl-center justify-content-md-center\">\n                <Col xl={8}>\n                  <p>{blurb.copy[0]}</p>\n                </Col>\n              </Row>\n            </Container>\n          ))\n        }\n        <Container>\n          <Row className=\"justify-content-xl-center justify-content-md-center\">\n            {\n              this.state.copy.cards.slice(3, 6).map((card, cardIndex) => (\n                <Col key={cardIndex}>\n                <Card className=\"h-100\">\n                  <Card.Header>\n                    {card.title}\n                  </Card.Header>\n                  <div style={{height: '200px', backgroundImage: 'url(' + bikeImages[cardIndex] + ')'}}>\n                    <Image src={bikeIcons[cardIndex]} alt={card.image.alt} style={{marginTop: '25px'}} />\n                  </div>\n                  <Card.Body>\n                    <Card.Title>\n                      {card.description.join(' ')}\n                    </Card.Title>\n                    <hr />\n                    <ul style={{lmargin: 0, padding: 0}}>\n                      {\n                        card.features.map((feature, featureIndex) => (\n                          <li key={featureIndex} style={{fontWeight: 600, margin: 0, padding: 0}}>\n                            {feature.text}\n                            <ul style={{margin: 0, padding: 0}}>\n                              {\n                                feature.details.map((detail, detailIndex) => (\n                                  <li key={detailIndex} style={{listStyleType: 'none', fontWeight: 'normal', margin: 0, padding: 0}}>\n                                    {detail}\n                                  </li>\n                                ))\n                              }\n                            </ul>\n                          </li>\n                        ))\n                      }\n                    </ul>\n                  </Card.Body>\n                  <Card.Footer>\n                    <LinkContainer to={card.button.link}>\n                      <Button size=\"sm\">\n                        {card.button.text}\n                      </Button>\n                    </LinkContainer>\n                  </Card.Footer>\n                </Card>\n                </Col>\n              ))\n            }\n          </Row>\n        </Container>\n      </Container>\n      <Container id=\"container-facility\" fluid>\n        {\n          this.state.copy.blurbs.slice(4, 5).map((blurb, blurbIndex) => (\n            <Container key={blurbIndex}>\n              <h3>{blurb.title}</h3>\n              <Row className=\"justify-content-xl-center justify-content-md-center\">\n              {\n                blurb.copy.map((paragraph, paragraphIndex) => (\n                  <Col xl={(12 / blurb.copy.length)} key={paragraphIndex}>\n                    <Image src={paragraph.image} />\n                    <p>{paragraph.text}</p>\n                  </Col>\n                ))\n              }\n              </Row>\n              <Row className=\"justify-content-xl-center justify-content-md-center\">\n                <Col xl=\"auto\" md=\"auto\">\n                  <LinkContainer to={'/book'}>\n                    <Button size=\"sm\">\n                      book now\n                    </Button>\n                  </LinkContainer>\n                </Col>\n              </Row>\n            </Container>\n          ))\n        }\n      </Container>\n      <Container id=\"container-map\" fluid>\n        <div style={{ height: '650px', width: '100%' }}>\n          <GoogleMapReact\n            bootstrapURLKeys={{ key: 'AIzaSyCKw8by28pNI5tlimezyyjgtXz_Nvkq2-Y' }}\n            defaultCenter={{ lat: 41.820582, lng: 23.478257 }}\n            defaultZoom={ 14 }\n            onGoogleApiLoaded={({map, maps}) => {\n              let marker = new maps.Marker({\n                position: { lat: 41.820582, lng: 23.478257 },\n                map,\n                title: 'Bears Lairs, Bansko',\n                description: 'secure, self-storage in bansko with access at your convenience',\n                link: {\n                  url: 'https://www.google.com/maps/place/Bears+Lairs/@41.8223813,23.4681867,15z/data=!4m5!3m4!1s0x0:0xadd4ea4c0b9a3216!8m2!3d41.820631!4d23.478215',\n                  text: 'maps.google.com/Bears+Lairs'\n                }\n              });\n              let infoWindow = new maps.InfoWindow({\n                content: '<h4><img src=\"favicon-32x32.png\" style=\"margin-right: 6px;\" class=\"rounded-circle\" />' + marker.title + '</h4><p>' + marker.description + '<br /><a href=\"' + marker.link.url + '\">' + marker.link.text + '</a></p>'\n              });\n              infoWindow.open(map, marker);\n              marker.addListener('click', () => {\n                map.setZoom(14);\n                map.setCenter(marker.getPosition());\n                infoWindow.open(map, marker);\n              });\n            }} />\n        </div>\n      </Container>\n      <Container id=\"container-footer\" fluid>\n        <Container>\n          <Row className=\"justify-content-xl-center justify-content-md-center\">\n            <Col xl={6}>\n              <a href=\"mailto:enquiries@bearslairs.eu\">enquiries@bearslairs.eu</a>\n              <hr />\n              &copy; 2020, Bears Lairs EOOD, Bulgaria. All rights reserved\n            </Col>\n          </Row>\n        </Container>\n      </Container>\n    </>\n    );\n  }\n}\n\nexport default App;\n","import React, { Component } from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport Button from 'react-bootstrap/Button';\nimport Cookies from 'universal-cookie';\nimport * as qs from 'query-string';\n\n\nconst querystring = qs.parse(window.location.search);\nconst cookies = new Cookies();\nconst CopyApi = 'https://raw.githubusercontent.com/bearslairs/bearslairs-data/master/copy';\nconst languages = ['bg', 'en', 'ru'];\n\nclass Nav extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      language: 'en',\n      copy: {\n        title: '',\n        subtitle: '',\n        languages: []\n      }\n    };\n  }\n\n  componentDidMount() {\n    let language = languages.includes(querystring.lang) // if the querystring lang is set, use that\n      ? querystring.lang\n      : languages.includes(cookies.get('lang')) // else if the cookies contain a lang, use that\n        ? cookies.get('lang')\n        : this.state.language; // fall back to a default\n    this.setState(prevState => ({\n      language: language,\n      copy: prevState.copy\n    }));\n    cookies.set('lang', language, { path: '/' });\n    fetch(CopyApi + '/' + language + '/nav.json')\n    .then(responseCopyApi => responseCopyApi.json())\n    .then((copy) => {\n      this.setState(prevState => ({\n        language: prevState.language,\n        copy: copy\n      }));\n    })\n    .catch(console.log);\n  }\n  render() {\n    return (\n      <header className=\"App-header clearfix\">\n        <LinkContainer to=\"/\">\n          <div>\n            <img src=\"favicon-32x32.png\" alt=\"bears lairs logo\" style={{marginRight: '6px'}} className=\"float-left rounded-circle\" />\n            <h1 className=\"float-left\">{this.state.copy.title}</h1>\n          </div>\n        </LinkContainer>\n        <h2 className=\"float-left text-muted\">{this.state.copy.subtitle}</h2>\n        <LinkContainer to=\"/book\">\n          <Button className=\"float-right\">book</Button>\n        </LinkContainer>\n        <span className=\"float-right text-muted\">\n          {\n            this.state.copy.languages.map(lang => (\n              <a key={lang} href={'?lang=' + lang} className=\"text-muted\">{lang}</a>\n            ))\n          }\n        </span>\n      </header>\n    );\n  }\n}\n\nexport default Nav;","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport {\n  CardElement,\n  injectStripe\n} from 'react-stripe-elements';\n\n/*\n * https://stripe.com/docs/recipes/elements-react\n * https://stripe.com/docs/stripe-js/reference\n * https://stripe.com/docs/payments/accept-a-payment\n */\nclass CheckoutForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.submit = this.submit.bind(this);\n  }\n\n  async submit(ev) {\n    // User clicked submit\n  }\n\n  render() {\n    return (\n      <div className=\"checkout\">\n        <p>enter your payment card details below to complete your reservation</p>\n        <CardElement />\n        <hr />\n        <Button variant=\"primary\" onClick={this.submit}>\n          Purchase\n        </Button>\n      </div>\n    );\n  }\n}\n\nexport default injectStripe(CheckoutForm);\n","import React from 'react'\r\nimport Container from 'react-bootstrap/Container';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Nav from './Nav';\r\nimport Cookies from 'universal-cookie';\r\nimport * as qs from 'query-string';\r\nimport 'react-dates/initialize';\r\nimport { DateRangePicker } from 'react-dates';\r\nimport 'react-dates/lib/css/_datepicker.css';\r\nimport moment from 'moment'\r\nimport {\r\n  Stitch,\r\n  AnonymousCredential,\r\n  RemoteMongoClient\r\n} from 'mongodb-stitch-browser-sdk';\r\nimport {\r\n  Elements,\r\n  StripeProvider\r\n} from 'react-stripe-elements';\r\nimport CheckoutForm from './CheckoutForm';\r\n\r\nconst querystring = qs.parse(window.location.search);\r\nconst cookies = new Cookies();\r\nconst CopyApi = 'https://raw.githubusercontent.com/bearslairs/bearslairs-data/master/copy';\r\nconst languages = ['bg', 'en', 'ru'];\r\nconst lockers = ['small', 'medium', 'large', 'bicycle', 'motorcycle', 'large-motorcycle'];\r\nconst client = Stitch.initializeDefaultAppClient('bearslairsstitch-pkblb');\r\nconst serviceClient = client.getServiceClient(RemoteMongoClient.factory, 'mongodb-atlas');\r\n//const stripe = Stripe('pk_test_kSrcl4f2BEKQTkQCIuDih41I000nfCqc5I');\r\n\r\nclass Book extends React.Component {\r\n  constructor(props, context) {\r\n    super(props, context);\r\n    let language = languages.includes(querystring.lang) // if the querystring lang is set, use that\r\n      ? querystring.lang\r\n      : languages.includes(cookies.get('lang')) // else if the cookies contain a lang, use that\r\n        ? cookies.get('lang')\r\n        : 'en';\r\n    let locker = lockers.includes(querystring.locker) // if the querystring lang is set, use that\r\n      ? querystring.locker\r\n      : 'small';\r\n    // todo: handle timezone\r\n    let startDate = new Date();\r\n    startDate.setHours(14,0,0,0);\r\n    startDate.setDate(startDate.getDate() + 1);\r\n    let endDate = new Date();\r\n    endDate.setHours(12,0,0,0);\r\n    endDate.setMonth(startDate.getMonth() + 3);\r\n    this.state = {\r\n      reservations: [],\r\n      language: language,\r\n      reservation: {\r\n        from: startDate.toISOString(),\r\n        to: endDate.toISOString(),\r\n        name: '',\r\n        email: '',\r\n        telephone: '',\r\n        locker: locker,\r\n        language: language\r\n      },\r\n      copy: {\r\n        languages: []\r\n      }\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.displayReservations = this.displayReservations.bind(this);\r\n    this.addReservation = this.addReservation.bind(this);\r\n  }\r\n  handleChange(event) {\r\n    const target = event.target;\r\n    this.setState(state => {\r\n      state.reservation[target.id] = target.value;\r\n      return state;\r\n    });\r\n  }\r\n  componentDidMount() {\r\n    fetch(CopyApi + '/' + this.state.language + '/book.json')\r\n      .then(responseCopyApi => responseCopyApi.json())\r\n      .then((copy) => {\r\n        this.setState(state => ({\r\n          language: state.language,\r\n          reservation: state.reservation,\r\n          copy: copy\r\n        }));\r\n      })\r\n      .catch(console.log);\r\n    this.db = serviceClient.db('bearslairs-bansko');\r\n    this.displayReservationsOnLoad();\r\n  }\r\n\r\n  displayReservations() {\r\n    this.db\r\n      .collection('reservations')\r\n      .find({}, { limit: 1000 })\r\n      .asArray()\r\n      .then(reservations => { this.setState({reservations}); });\r\n  }\r\n\r\n  displayReservationsOnLoad() {\r\n    client.auth\r\n      .loginWithCredential(new AnonymousCredential())\r\n      .then(this.displayReservations)\r\n      .catch(console.error);\r\n  }\r\n\r\n  addReservation(event) {\r\n    event.preventDefault();\r\n    const { reservation } = this.state;\r\n    this.db\r\n      .collection('reservations')\r\n      .insertOne({\r\n        owner_id: client.auth.user.id,\r\n        reservation: reservation\r\n      })\r\n      .then(this.displayReservations)\r\n      .catch(console.error);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <Nav />\r\n        <Row style={{ paddingTop: '10px' }}>\r\n          <h2>make a reservation</h2>\r\n        </Row>\r\n        <Row style={{ paddingTop: '10px' }}>\r\n\r\n          <Form onSubmit={this.addReservation}>\r\n            <Form.Group controlId=\"name\">\r\n              <Form.Label>name</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"full name\"\r\n                value={this.state.reservation.name}\r\n                onChange={this.handleChange} />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"email\">\r\n              <Form.Label>email</Form.Label>\r\n              <Form.Control\r\n                type=\"email\"\r\n                placeholder=\"email\"\r\n                value={this.state.reservation.email}\r\n                onChange={this.handleChange} />\r\n              <Form.Text className=\"text-muted\">\r\n                we'll never share your email with anyone else.\r\n              </Form.Text>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"telephone\">\r\n              <Form.Label>telephone</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"telephone number\"\r\n                value={this.state.reservation.telephone}\r\n                onChange={this.handleChange} />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"fromto\">\r\n              <Form.Label>reservation dates</Form.Label>\r\n              <br />\r\n              <DateRangePicker\r\n                startDate={moment(this.state.reservation.from)}\r\n                startDateId='reservation_from'\r\n                endDate={moment(this.state.reservation.to)}\r\n                endDateId='reservation_to'\r\n                onDatesChange={({ startDate, endDate }) => this.setState(state => { state.reservation.from = startDate.toISOString(); state.reservation.to = endDate.toISOString(); return state; })}\r\n                focusedInput={this.state.focusedInput}\r\n                onFocusChange={focusedInput => this.setState({ focusedInput })}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"locker\">\r\n              <Form.Label>i would like to book storage</Form.Label>\r\n              <Form.Check\r\n                type=\"radio\"\r\n                label=\"in a small locker\"\r\n                onChange={() => this.setState(state => {state.reservation.locker = 'small'; return state;})}\r\n                checked={this.state.reservation.locker === 'small'} />\r\n              <Form.Check\r\n                type=\"radio\"\r\n                label=\"in a medium locker\"\r\n                onChange={() => this.setState(state => {state.reservation.locker = 'medium'; return state;})}\r\n                checked={this.state.reservation.locker === 'medium'} />\r\n              <Form.Check\r\n                type=\"radio\"\r\n                label=\"in a large locker\"\r\n                onChange={() => this.setState(state => {state.reservation.locker = 'large'; return state;})}\r\n                checked={this.state.reservation.locker === 'large'} />\r\n              <Form.Check\r\n                type=\"radio\"\r\n                label=\"for a bicycle\"\r\n                onChange={() => this.setState(state => {state.reservation.locker = 'bicycle'; return state;})}\r\n                checked={this.state.reservation.locker === 'bicycle'} />\r\n              <Form.Check\r\n                type=\"radio\"\r\n                label=\"for a motorcycle\"\r\n                onChange={() => this.setState(state => {state.reservation.locker = 'motorcycle'; return state;})}\r\n                checked={this.state.reservation.locker === 'motorcycle'} />\r\n              <Form.Check\r\n                type=\"radio\"\r\n                label=\"for a large motorcycle\"\r\n                onChange={() => this.setState(state => {state.reservation.locker = 'large-motorcycle'; return state;})}\r\n                checked={this.state.reservation.locker === 'large-motorcycle'} />\r\n            </Form.Group>\r\n            <StripeProvider apiKey=\"pk_test_kSrcl4f2BEKQTkQCIuDih41I000nfCqc5I\">\r\n              <Elements>\r\n                <CheckoutForm />\r\n              </Elements>\r\n            </StripeProvider>\r\n          </Form>\r\n        </Row>\r\n        {\r\n          (window.location.hostname === 'localhost') ?\r\n          <Row>\r\n            <pre>\r\n              {JSON.stringify(this.state, null, 2)}\r\n            </pre>\r\n          </Row> : null\r\n        }\r\n      </Container>\r\n    );\r\n  }\r\n}\r\nexport default Book;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport 'typeface-roboto';\nimport App from './App';\nimport Book from './Book';\n\nconst routing = (\n  <React.StrictMode>\n    <BrowserRouter>\n      <Switch>\n        <Route exact path=\"/\" component={App} />\n        <Route path=\"/book\" component={Book} />\n      </Switch>\n    </BrowserRouter>\n  </React.StrictMode>\n);\nReactDOM.render(routing, document.getElementById('root'));"],"sourceRoot":""}