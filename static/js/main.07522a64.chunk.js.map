{"version":3,"sources":["Nav.js","App.js","CheckoutForm.js","Book.js","index.js"],"names":["querystring","qs","window","location","search","cookies","Cookies","languages","Nav","props","state","language","copy","title","subtitle","includes","lang","get","this","setState","prevState","set","path","fetch","CopyApi","then","responseCopyApi","json","catch","console","log","className","to","map","key","href","Component","App","carousel","blurbs","cards","style","paddingTop","carouselItem","carouselItemIndex","Item","src","image","url","alt","rounded","Caption","description","slice","blurb","blurbIndex","paragraph","paragraphIndex","card","cardIndex","width","marginRight","Header","as","icon","Img","variant","Body","Title","join","features","feature","featureIndex","text","details","detail","detailIndex","button","link","marginTop","CheckoutForm","submit","bind","ev","onClick","React","injectStripe","lockers","client","Stitch","initializeDefaultAppClient","serviceClient","getServiceClient","RemoteMongoClient","factory","Book","context","locker","startDate","Date","setHours","setDate","getDate","endDate","setMonth","getMonth","reservations","reservation","from","toISOString","name","email","telephone","handleChange","displayReservations","addReservation","event","target","id","value","db","displayReservationsOnLoad","collection","find","limit","asArray","auth","loginWithCredential","AnonymousCredential","error","preventDefault","insertOne","owner_id","user","onSubmit","Group","controlId","Label","Control","type","placeholder","onChange","Text","moment","startDateId","endDateId","onDatesChange","focusedInput","onFocusChange","Check","label","checked","apiKey","hostname","JSON","stringify","routing","exact","component","ReactDOM","render","document","getElementById"],"mappings":"sdAOMA,EAAcC,QAASC,OAAOC,SAASC,QACvCC,EAAU,IAAIC,IAEdC,EAAY,CAAC,KAAM,KAAM,MA0DhBC,E,YAvDb,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KACDC,MAAQ,CACXC,SAAU,KACVC,KAAM,CACJC,MAAO,GACPC,SAAU,GACVP,UAAW,KAPE,E,iFAYE,IAAD,OACdI,EAAWJ,EAAUQ,SAASf,EAAYgB,MAC1ChB,EAAYgB,KACZT,EAAUQ,SAASV,EAAQY,IAAI,SAC7BZ,EAAQY,IAAI,QACZC,KAAKR,MAAMC,SACjBO,KAAKC,UAAS,SAAAC,GAAS,MAAK,CAC1BT,SAAUA,EACVC,KAAMQ,EAAUR,SAElBP,EAAQgB,IAAI,OAAQV,EAAU,CAAEW,KAAM,MACtCC,MAAMC,4EAAgBb,EAAW,aAChCc,MAAK,SAAAC,GAAe,OAAIA,EAAgBC,UACxCF,MAAK,SAACb,GACL,EAAKO,UAAS,SAAAC,GAAS,MAAK,CAC1BT,SAAUS,EAAUT,SACpBC,KAAMA,SAGTgB,MAAMC,QAAQC,O,+BAGf,OACE,4BAAQC,UAAU,uBAChB,kBAAC,gBAAD,CAAeC,GAAG,KAChB,wBAAID,UAAU,cAAcb,KAAKR,MAAME,KAAKC,QAE9C,wBAAIkB,UAAU,yBAAyBb,KAAKR,MAAME,KAAKE,UACvD,kBAAC,gBAAD,CAAekB,GAAG,SAChB,kBAAC,IAAD,CAAQD,UAAU,eAAlB,SAEF,0BAAMA,UAAU,0BAEZb,KAAKR,MAAME,KAAKL,UAAU0B,KAAI,SAAAjB,GAAI,OAChC,uBAAGkB,IAAKlB,EAAMmB,KAAM,SAAWnB,EAAMe,UAAU,cAAcf,Y,GA/CzDoB,aCCZpC,EAAcC,QAASC,OAAOC,SAASC,QACvCC,EAAU,IAAIC,IAEdC,EAAY,CAAC,KAAM,KAAM,MAmLhB8B,E,2MAhLb3B,MAAQ,CACNC,SAAU,KACVC,KAAM,CACJ0B,SAAU,GACVC,OAAQ,GACRC,MAAO,K,mFAIU,IAAD,OACd7B,EAAWJ,EAAUQ,SAASf,EAAYgB,MAC1ChB,EAAYgB,KACZT,EAAUQ,SAASV,EAAQY,IAAI,SAC7BZ,EAAQY,IAAI,QACZC,KAAKR,MAAMC,SACjBO,KAAKC,UAAS,SAAAC,GAAS,MAAK,CAC1BT,SAAUA,EACVC,KAAMQ,EAAUR,SAElBP,EAAQgB,IAAI,OAAQV,EAAU,CAAEW,KAAM,MACtCC,MAAMC,4EAAgBb,EAAW,cAChCc,MAAK,SAAAC,GAAe,OAAIA,EAAgBC,UACxCF,MAAK,SAACb,GACL,EAAKO,UAAS,SAAAC,GAAS,MAAK,CAC1BT,SAAUS,EAAUT,SACpBC,KAAMA,SAGTgB,MAAMC,QAAQC,O,+BAGf,OACE,kBAAC,IAAD,KACE,kBAAC,EAAD,MACA,kBAAC,IAAD,CAAKW,MAAO,CAAEC,WAAY,SACxB,kBAAC,IAAD,KAEIxB,KAAKR,MAAME,KAAK0B,SAASL,KAAI,SAACU,EAAcC,GAAf,OAC3B,kBAAC,IAASC,KAAV,CAAeX,IAAKU,GAClB,kBAAC,IAAD,CAAOE,IAAKH,EAAaI,MAAMC,IAAKC,IAAKN,EAAaI,MAAME,IAAKC,QAAQ,SACzE,kBAAC,IAASC,QAAV,KACE,4BAAKR,EAAa9B,OAClB,2BAAI8B,EAAaS,oBAO7B,kBAAC,IAAD,CAAKX,MAAO,CAAEC,WAAY,SAEtBxB,KAAKR,MAAME,KAAK2B,OAAOc,MAAM,EAAG,GAAGpB,KAAI,SAACqB,EAAOC,GAAR,OACrC,yBAAKrB,IAAKqB,GACR,4BAAKD,EAAMzC,OAETyC,EAAM1C,KAAKqB,KAAI,SAACuB,EAAWC,GAAZ,OACb,uBAAGvB,IAAKuB,GAAiBD,WAOrC,kBAAC,IAAD,CAAKf,MAAO,CAAEC,WAAY,SAEtBxB,KAAKR,MAAME,KAAK4B,MAAMa,MAAM,EAAG,GAAGpB,KAAI,SAACyB,EAAMC,GAAP,OACpC,kBAAC,IAAD,CAAMlB,MAAO,CAAEmB,MAAO,MAAOC,YAAa,QAAU3B,IAAKyB,GACvD,kBAAC,IAAKG,OAAN,CAAaC,GAAG,MACbL,EAAK7C,MACN,kBAAC,IAAD,CAAOiC,IAAKY,EAAKM,KAAKhB,IAAKC,IAAKS,EAAKM,KAAKf,IAAKC,QAAQ,OAAOT,MAAO,CAAEoB,YAAa,QAAU9B,UAAU,iBAE1G,kBAAC,IAAKkC,IAAN,CAAUC,QAAQ,MAAMpB,IAAKY,EAAKX,MAAMC,IAAKC,IAAKS,EAAKX,MAAME,IAAKC,QAAQ,SAC1E,kBAAC,IAAKiB,KAAN,KACE,kBAAC,IAAKC,MAAN,KACGV,EAAKN,YAAYiB,KAAK,MAEzB,6BAEA,4BAEIX,EAAKY,SAASrC,KAAI,SAACsC,EAASC,GAAV,OAChB,wBAAItC,IAAKsC,GACND,EAAQE,KACT,4BAEIF,EAAQG,QAAQzC,KAAI,SAAC0C,EAAQC,GAAT,OAClB,wBAAI1C,IAAK0C,GACND,YASjB,kBAAC,gBAAD,CAAe3C,GAAI0B,EAAKmB,OAAOC,MAC7B,kBAAC,IAAD,CAAQZ,QAAQ,UAAUnC,UAAU,eACjC2B,EAAKmB,OAAOJ,aAQ3B,kBAAC,IAAD,CAAKhC,MAAO,CAAEC,WAAY,SAEtBxB,KAAKR,MAAME,KAAK2B,OAAOc,MAAM,EAAG,GAAGpB,KAAI,SAACqB,EAAOC,GAAR,OACrC,yBAAKrB,IAAKqB,GACR,4BAAKD,EAAMzC,OAETyC,EAAM1C,KAAKqB,KAAI,SAACuB,EAAWC,GAAZ,OACb,uBAAGvB,IAAKuB,GACLD,WAQf,kBAAC,IAAD,CAAKf,MAAO,CAAEC,WAAY,SAEtBxB,KAAKR,MAAME,KAAK4B,MAAMa,MAAM,EAAG,GAAGpB,KAAI,SAACyB,EAAMC,GAAP,OACpC,kBAAC,IAAD,CAAMlB,MAAO,CAAEmB,MAAO,MAAOC,YAAa,QAAU3B,IAAKyB,GACvD,kBAAC,IAAKG,OAAN,CAAaC,GAAG,MACbL,EAAK7C,MACN,kBAAC,IAAD,CAAOiC,IAAKY,EAAKM,KAAKhB,IAAKC,IAAKS,EAAKM,KAAKf,IAAKC,QAAQ,OAAOT,MAAO,CAAEoB,YAAa,QAAU9B,UAAU,iBAE1G,kBAAC,IAAKkC,IAAN,CAAUC,QAAQ,MAAMpB,IAAKY,EAAKX,MAAMC,IAAKC,IAAKS,EAAKX,MAAME,IAAKC,QAAQ,SAC1E,kBAAC,IAAKiB,KAAN,KACE,kBAAC,IAAKC,MAAN,KACGV,EAAKN,YAAYiB,KAAK,MAEzB,6BACA,4BAEIX,EAAKY,SAASrC,KAAI,SAACsC,EAASC,GAAV,OAChB,wBAAItC,IAAKsC,GACND,EAAQE,KACT,4BAEIF,EAAQG,QAAQzC,KAAI,SAAC0C,EAAQC,GAAT,OAClB,wBAAI1C,IAAK0C,GACND,YASjB,kBAAC,gBAAD,CAAe3C,GAAI0B,EAAKmB,OAAOC,MAC7B,kBAAC,IAAD,CAAQZ,QAAQ,UAAUnC,UAAU,eACjC2B,EAAKmB,OAAOJ,aAQ3B,4BAAQ1C,UAAU,WAAWU,MAAO,CAAEsC,UAAW,SAC/C,uBAAGhD,UAAU,0BACX,uBAAGI,KAAM,kEAAoEjB,KAAKR,MAAMC,SAAW,cAAnG,yB,GAvKMyB,a,8GCNZ4C,E,YACJ,WAAYvE,GAAQ,IAAD,8BACjB,4CAAMA,KACDwE,OAAS,EAAKA,OAAOC,KAAZ,gBAFG,E,6GAKNC,G,2LAKX,OACE,yBAAKpD,UAAU,YACb,iGACA,kBAAC,cAAD,MACA,6BACA,kBAAC,IAAD,CAAQmC,QAAQ,UAAUkB,QAASlE,KAAK+D,QAAxC,iB,GAhBmBI,IAAMjD,WAwBlBkD,yBAAaN,GCdtBhF,EAAcC,QAASC,OAAOC,SAASC,QACvCC,EAAU,IAAIC,IAEdC,EAAY,CAAC,KAAM,KAAM,MACzBgF,EAAU,CAAC,QAAS,SAAU,QAAS,UAAW,aAAc,oBAChEC,GAASC,IAAOC,2BAA2B,0BAC3CC,GAAgBH,GAAOI,iBAAiBC,IAAkBC,QAAS,iBAiM1DC,G,YA7Lb,WAAYtF,EAAOuF,GAAU,IAAD,sBAC1B,4CAAMvF,EAAOuF,IACb,IAAIrF,EAAWJ,EAAUQ,SAASf,EAAYgB,MAC1ChB,EAAYgB,KACZT,EAAUQ,SAASV,EAAQY,IAAI,SAC7BZ,EAAQY,IAAI,QACZ,KACFgF,EAASV,EAAQxE,SAASf,EAAYiG,QACtCjG,EAAYiG,OACZ,QAEAC,EAAY,IAAIC,KACpBD,EAAUE,SAAS,GAAG,EAAE,EAAE,GAC1BF,EAAUG,QAAQH,EAAUI,UAAY,GACxC,IAAIC,EAAU,IAAIJ,KAdQ,OAe1BI,EAAQH,SAAS,GAAG,EAAE,EAAE,GACxBG,EAAQC,SAASN,EAAUO,WAAa,GACxC,EAAK/F,MAAQ,CACXgG,aAAc,GACd/F,SAAUA,EACVgG,YAAa,CACXC,KAAMV,EAAUW,cAChB7E,GAAIuE,EAAQM,cACZC,KAAM,GACNC,MAAO,GACPC,UAAW,GACXf,OAAQA,EACRtF,SAAUA,GAEZC,KAAM,CACJL,UAAW,KAGf,EAAK0G,aAAe,EAAKA,aAAa/B,KAAlB,gBACpB,EAAKgC,oBAAsB,EAAKA,oBAAoBhC,KAAzB,gBAC3B,EAAKiC,eAAiB,EAAKA,eAAejC,KAApB,gBAnCI,E,0EAqCfkC,GACX,IAAMC,EAASD,EAAMC,OACrBnG,KAAKC,UAAS,SAAAT,GAEZ,OADAA,EAAMiG,YAAYU,EAAOC,IAAMD,EAAOE,MAC/B7G,O,0CAGU,IAAD,OAClBa,MAAMC,4EAAgBN,KAAKR,MAAMC,SAAW,cACzCc,MAAK,SAAAC,GAAe,OAAIA,EAAgBC,UACxCF,MAAK,SAACb,GACL,EAAKO,UAAS,SAAAT,GAAK,MAAK,CACtBC,SAAUD,EAAMC,SAChBgG,YAAajG,EAAMiG,YACnB/F,KAAMA,SAGTgB,MAAMC,QAAQC,KACjBZ,KAAKsG,GAAK7B,GAAc6B,GAAG,qBAC3BtG,KAAKuG,8B,4CAGgB,IAAD,OACpBvG,KAAKsG,GACFE,WAAW,gBACXC,KAAK,GAAI,CAAEC,MAAO,MAClBC,UACApG,MAAK,SAAAiF,GAAkB,EAAKvF,SAAS,CAACuF,sB,kDAIzClB,GAAOsC,KACJC,oBAAoB,IAAIC,KACxBvG,KAAKP,KAAKgG,qBACVtF,MAAMC,QAAQoG,S,qCAGJb,GACbA,EAAMc,iBADc,IAEZvB,EAAgBzF,KAAKR,MAArBiG,YACRzF,KAAKsG,GACFE,WAAW,gBACXS,UAAU,CACTC,SAAU5C,GAAOsC,KAAKO,KAAKf,GAC3BX,YAAaA,IAEdlF,KAAKP,KAAKgG,qBACVtF,MAAMC,QAAQoG,S,+BAGT,IAAD,OACP,OACE,kBAAC,IAAD,KACE,kBAAC,EAAD,MACA,kBAAC,IAAD,CAAKxF,MAAO,CAAEC,WAAY,SACxB,mDAEF,kBAAC,IAAD,CAAKD,MAAO,CAAEC,WAAY,SAExB,kBAAC,IAAD,CAAM4F,SAAUpH,KAAKiG,gBACnB,kBAAC,IAAKoB,MAAN,CAAYC,UAAU,QACpB,kBAAC,IAAKC,MAAN,aACA,kBAAC,IAAKC,QAAN,CACEC,KAAK,OACLC,YAAY,YACZrB,MAAOrG,KAAKR,MAAMiG,YAAYG,KAC9B+B,SAAU3H,KAAK+F,gBAEnB,kBAAC,IAAKsB,MAAN,CAAYC,UAAU,SACpB,kBAAC,IAAKC,MAAN,cACA,kBAAC,IAAKC,QAAN,CACEC,KAAK,QACLC,YAAY,QACZrB,MAAOrG,KAAKR,MAAMiG,YAAYI,MAC9B8B,SAAU3H,KAAK+F,eACjB,kBAAC,IAAK6B,KAAN,CAAW/G,UAAU,cAArB,mDAIF,kBAAC,IAAKwG,MAAN,CAAYC,UAAU,aACpB,kBAAC,IAAKC,MAAN,kBACA,kBAAC,IAAKC,QAAN,CACEC,KAAK,OACLC,YAAY,mBACZrB,MAAOrG,KAAKR,MAAMiG,YAAYK,UAC9B6B,SAAU3H,KAAK+F,gBAEnB,kBAAC,IAAKsB,MAAN,CAAYC,UAAU,UACpB,kBAAC,IAAKC,MAAN,0BACA,6BACA,kBAAC,kBAAD,CACEvC,UAAW6C,IAAO7H,KAAKR,MAAMiG,YAAYC,MACzCoC,YAAY,mBACZzC,QAASwC,IAAO7H,KAAKR,MAAMiG,YAAY3E,IACvCiH,UAAU,iBACVC,cAAe,gBAAGhD,EAAH,EAAGA,UAAWK,EAAd,EAAcA,QAAd,OAA4B,EAAKpF,UAAS,SAAAT,GAA2G,OAAhGA,EAAMiG,YAAYC,KAAOV,EAAUW,cAAenG,EAAMiG,YAAY3E,GAAKuE,EAAQM,cAAsBnG,MAC3KyI,aAAcjI,KAAKR,MAAMyI,aACzBC,cAAe,SAAAD,GAAY,OAAI,EAAKhI,SAAS,CAAEgI,qBAGnD,kBAAC,IAAKZ,MAAN,CAAYC,UAAU,UACpB,kBAAC,IAAKC,MAAN,qCACA,kBAAC,IAAKY,MAAN,CACEV,KAAK,QACLW,MAAM,oBACNT,SAAU,kBAAM,EAAK1H,UAAS,SAAAT,GAA8C,OAApCA,EAAMiG,YAAYV,OAAS,QAAgBvF,MACnF6I,QAA2C,UAAlCrI,KAAKR,MAAMiG,YAAYV,SAClC,kBAAC,IAAKoD,MAAN,CACEV,KAAK,QACLW,MAAM,qBACNT,SAAU,kBAAM,EAAK1H,UAAS,SAAAT,GAA+C,OAArCA,EAAMiG,YAAYV,OAAS,SAAiBvF,MACpF6I,QAA2C,WAAlCrI,KAAKR,MAAMiG,YAAYV,SAClC,kBAAC,IAAKoD,MAAN,CACEV,KAAK,QACLW,MAAM,oBACNT,SAAU,kBAAM,EAAK1H,UAAS,SAAAT,GAA8C,OAApCA,EAAMiG,YAAYV,OAAS,QAAgBvF,MACnF6I,QAA2C,UAAlCrI,KAAKR,MAAMiG,YAAYV,SAClC,kBAAC,IAAKoD,MAAN,CACEV,KAAK,QACLW,MAAM,gBACNT,SAAU,kBAAM,EAAK1H,UAAS,SAAAT,GAAgD,OAAtCA,EAAMiG,YAAYV,OAAS,UAAkBvF,MACrF6I,QAA2C,YAAlCrI,KAAKR,MAAMiG,YAAYV,SAClC,kBAAC,IAAKoD,MAAN,CACEV,KAAK,QACLW,MAAM,mBACNT,SAAU,kBAAM,EAAK1H,UAAS,SAAAT,GAAmD,OAAzCA,EAAMiG,YAAYV,OAAS,aAAqBvF,MACxF6I,QAA2C,eAAlCrI,KAAKR,MAAMiG,YAAYV,SAClC,kBAAC,IAAKoD,MAAN,CACEV,KAAK,QACLW,MAAM,yBACNT,SAAU,kBAAM,EAAK1H,UAAS,SAAAT,GAAyD,OAA/CA,EAAMiG,YAAYV,OAAS,mBAA2BvF,MAC9F6I,QAA2C,qBAAlCrI,KAAKR,MAAMiG,YAAYV,UAEpC,kBAAC,iBAAD,CAAgBuD,OAAO,8CACrB,kBAAC,WAAD,KACE,kBAAC,EAAD,UAMwB,cAA7BtJ,OAAOC,SAASsJ,SACjB,kBAAC,IAAD,KACE,6BACGC,KAAKC,UAAUzI,KAAKR,MAAO,KAAM,KAE7B,U,GAxLA2E,IAAMjD,WCxBnBwH,GACJ,kBAAC,gBAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACvI,KAAK,IAAIwI,UAAWzH,IACjC,kBAAC,IAAD,CAAOf,KAAK,QAAQwI,UAAW/D,OAIrCgE,IAASC,OAAOJ,GAASK,SAASC,eAAe,W","file":"static/js/main.07522a64.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport Button from 'react-bootstrap/Button';\r\nimport Cookies from 'universal-cookie';\r\nimport * as qs from 'query-string';\r\n\r\n\r\nconst querystring = qs.parse(window.location.search);\r\nconst cookies = new Cookies();\r\nconst CopyApi = 'https://raw.githubusercontent.com/bearslairs/bearslairs-data/master/copy';\r\nconst languages = ['bg', 'en', 'ru'];\r\n\r\nclass Nav extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      language: 'en',\r\n      copy: {\r\n        title: '',\r\n        subtitle: '',\r\n        languages: []\r\n      }\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    let language = languages.includes(querystring.lang) // if the querystring lang is set, use that\r\n      ? querystring.lang\r\n      : languages.includes(cookies.get('lang')) // else if the cookies contain a lang, use that\r\n        ? cookies.get('lang')\r\n        : this.state.language; // fall back to a default\r\n    this.setState(prevState => ({ \r\n      language: language,\r\n      copy: prevState.copy\r\n    }));\r\n    cookies.set('lang', language, { path: '/' });\r\n    fetch(CopyApi + '/' + language + '/nav.json')\r\n    .then(responseCopyApi => responseCopyApi.json())\r\n    .then((copy) => {\r\n      this.setState(prevState => ({\r\n        language: prevState.language,\r\n        copy: copy\r\n      }));\r\n    })\r\n    .catch(console.log);\r\n  }\r\n  render() {\r\n    return (\r\n      <header className=\"App-header clearfix\">\r\n        <LinkContainer to=\"/\">\r\n          <h1 className=\"float-left\">{this.state.copy.title}</h1>\r\n        </LinkContainer>\r\n        <h2 className=\"float-left text-muted\">{this.state.copy.subtitle}</h2>\r\n        <LinkContainer to=\"/book\">\r\n          <Button className=\"float-right\">book</Button>\r\n        </LinkContainer>\r\n        <span className=\"float-right text-muted\">\r\n          {\r\n            this.state.copy.languages.map(lang => (\r\n              <a key={lang} href={'?lang=' + lang} className=\"text-muted\">{lang}</a>\r\n            ))\r\n          }\r\n        </span>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Nav;","import React, { Component } from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Card from 'react-bootstrap/Card';\nimport Image from 'react-bootstrap/Image';\nimport Button from 'react-bootstrap/Button';\nimport Carousel from 'react-bootstrap/Carousel';\nimport './App.css';\nimport Cookies from 'universal-cookie';\nimport Nav from './Nav';\nimport * as qs from 'query-string';\n\nconst querystring = qs.parse(window.location.search);\nconst cookies = new Cookies();\nconst CopyApi = 'https://raw.githubusercontent.com/bearslairs/bearslairs-data/master/copy';\nconst languages = ['bg', 'en', 'ru'];\n\nclass App extends Component {\n  state = {\n    language: 'en',\n    copy: {\n      carousel: [],\n      blurbs: [],\n      cards: []\n    }\n  };\n\n  componentDidMount() {\n    let language = languages.includes(querystring.lang) // if the querystring lang is set, use that\n      ? querystring.lang\n      : languages.includes(cookies.get('lang')) // else if the cookies contain a lang, use that\n        ? cookies.get('lang')\n        : this.state.language; // fall back to a default\n    this.setState(prevState => ({ \n      language: language,\n      copy: prevState.copy\n    }));\n    cookies.set('lang', language, { path: '/' });\n    fetch(CopyApi + '/' + language + '/home.json')\n    .then(responseCopyApi => responseCopyApi.json())\n    .then((copy) => {\n      this.setState(prevState => ({\n        language: prevState.language,\n        copy: copy\n      }));\n    })\n    .catch(console.log);\n  }\n  render() {\n    return (\n      <Container>\n        <Nav />\n        <Row style={{ paddingTop: '10px' }}>\n          <Carousel>\n            {\n              this.state.copy.carousel.map((carouselItem, carouselItemIndex) => (\n                <Carousel.Item key={carouselItemIndex}>\n                  <Image src={carouselItem.image.url} alt={carouselItem.image.alt} rounded=\"true\" />\n                  <Carousel.Caption>\n                    <h3>{carouselItem.title}</h3>\n                    <p>{carouselItem.description}</p>\n                  </Carousel.Caption>\n                </Carousel.Item>\n              ))\n            }\n          </Carousel>\n        </Row>\n        <Row style={{ paddingTop: '10px' }}>\n          {\n            this.state.copy.blurbs.slice(0, 2).map((blurb, blurbIndex) => (\n              <div key={blurbIndex}>\n                <h4>{blurb.title}</h4>\n                {\n                  blurb.copy.map((paragraph, paragraphIndex) => (\n                    <p key={paragraphIndex}>{paragraph}</p>\n                  ))\n                }\n              </div>\n            ))\n          }\n        </Row>\n        <Row style={{ paddingTop: '10px' }}>\n          {\n            this.state.copy.cards.slice(0, 3).map((card, cardIndex) => (\n              <Card style={{ width: '30%', marginRight: '10px' }} key={cardIndex}>\n                <Card.Header as=\"h3\">\n                  {card.title}\n                  <Image src={card.icon.url} alt={card.icon.alt} rounded=\"true\" style={{ marginRight: '10px' }} className=\"float-right\" />\n                </Card.Header>\n                <Card.Img variant=\"top\" src={card.image.url} alt={card.image.alt} rounded=\"true\" />\n                <Card.Body>\n                  <Card.Title>\n                    {card.description.join(' ')}\n                  </Card.Title>\n                  <hr />\n\n                  <ul>\n                    {\n                      card.features.map((feature, featureIndex) => (\n                        <li key={featureIndex}>\n                          {feature.text}\n                          <ul>\n                            {\n                              feature.details.map((detail, detailIndex) => (\n                                <li key={detailIndex}>\n                                  {detail}\n                                </li>\n                              ))\n                            }\n                          </ul>\n                        </li>\n                      ))\n                    }\n                  </ul>\n                  <LinkContainer to={card.button.link}>\n                    <Button variant=\"primary\" className=\"float-right\">\n                      {card.button.text}\n                    </Button>\n                  </LinkContainer>\n                </Card.Body>\n              </Card>\n            ))\n          }\n        </Row>\n        <Row style={{ paddingTop: '10px' }}>\n          {\n            this.state.copy.blurbs.slice(2, 4).map((blurb, blurbIndex) => (\n              <div key={blurbIndex}>\n                <h4>{blurb.title}</h4>\n                {\n                  blurb.copy.map((paragraph, paragraphIndex) => (\n                    <p key={paragraphIndex}>\n                      {paragraph}\n                    </p>\n                  ))\n                }\n              </div>\n            ))\n          }\n        </Row>\n        <Row style={{ paddingTop: '10px' }}>\n          {\n            this.state.copy.cards.slice(3, 6).map((card, cardIndex) => (\n              <Card style={{ width: '30%', marginRight: '10px' }} key={cardIndex}>\n                <Card.Header as=\"h3\">\n                  {card.title}\n                  <Image src={card.icon.url} alt={card.icon.alt} rounded=\"true\" style={{ marginRight: '10px' }} className=\"float-right\" />\n                </Card.Header>\n                <Card.Img variant=\"top\" src={card.image.url} alt={card.image.alt} rounded=\"true\" />\n                <Card.Body>\n                  <Card.Title>\n                    {card.description.join(' ')}\n                  </Card.Title>\n                  <hr />\n                  <ul>\n                    {\n                      card.features.map((feature, featureIndex) => (\n                        <li key={featureIndex}>\n                          {feature.text}\n                          <ul>\n                            {\n                              feature.details.map((detail, detailIndex) => (\n                                <li key={detailIndex}>\n                                  {detail}\n                                </li>\n                              ))\n                            }\n                          </ul>\n                        </li>\n                      ))\n                    }\n                  </ul>\n                  <LinkContainer to={card.button.link}>\n                    <Button variant=\"primary\" className=\"float-right\">\n                      {card.button.text}\n                    </Button>\n                  </LinkContainer>\n                </Card.Body>\n              </Card>\n            ))\n          }\n        </Row>\n        <footer className=\"clearfix\" style={{ marginTop: '20px' }}>\n          <p className=\"text-center text-muted\">\n            <a href={'https://github.com/bearslairs/bearslairs-data/edit/master/copy/' + this.state.language + '/home.json'}>\n              edit this page\n            </a>\n          </p>\n        </footer>\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport {\n  CardElement,\n  injectStripe\n} from 'react-stripe-elements';\n\n/*\n * https://stripe.com/docs/recipes/elements-react\n * https://stripe.com/docs/stripe-js/reference\n * https://stripe.com/docs/payments/accept-a-payment\n */\nclass CheckoutForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.submit = this.submit.bind(this);\n  }\n\n  async submit(ev) {\n    // User clicked submit\n  }\n\n  render() {\n    return (\n      <div className=\"checkout\">\n        <p>enter your payment card details below to complete your reservation</p>\n        <CardElement />\n        <hr />\n        <Button variant=\"primary\" onClick={this.submit}>\n          Purchase\n        </Button>\n      </div>\n    );\n  }\n}\n\nexport default injectStripe(CheckoutForm);\n","import React from 'react'\r\nimport Container from 'react-bootstrap/Container';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Nav from './Nav';\r\nimport Cookies from 'universal-cookie';\r\nimport * as qs from 'query-string';\r\nimport 'react-dates/initialize';\r\nimport { DateRangePicker } from 'react-dates';\r\nimport 'react-dates/lib/css/_datepicker.css';\r\nimport moment from 'moment'\r\nimport {\r\n  Stitch,\r\n  AnonymousCredential,\r\n  RemoteMongoClient\r\n} from 'mongodb-stitch-browser-sdk';\r\nimport {\r\n  Elements,\r\n  StripeProvider\r\n} from 'react-stripe-elements';\r\nimport CheckoutForm from './CheckoutForm';\r\n\r\nconst querystring = qs.parse(window.location.search);\r\nconst cookies = new Cookies();\r\nconst CopyApi = 'https://raw.githubusercontent.com/bearslairs/bearslairs-data/master/copy';\r\nconst languages = ['bg', 'en', 'ru'];\r\nconst lockers = ['small', 'medium', 'large', 'bicycle', 'motorcycle', 'large-motorcycle'];\r\nconst client = Stitch.initializeDefaultAppClient('bearslairsstitch-pkblb');\r\nconst serviceClient = client.getServiceClient(RemoteMongoClient.factory, 'mongodb-atlas');\r\n//const stripe = Stripe('pk_test_kSrcl4f2BEKQTkQCIuDih41I000nfCqc5I');\r\n\r\nclass Book extends React.Component {\r\n  constructor(props, context) {\r\n    super(props, context);\r\n    let language = languages.includes(querystring.lang) // if the querystring lang is set, use that\r\n      ? querystring.lang\r\n      : languages.includes(cookies.get('lang')) // else if the cookies contain a lang, use that\r\n        ? cookies.get('lang')\r\n        : 'en';\r\n    let locker = lockers.includes(querystring.locker) // if the querystring lang is set, use that\r\n      ? querystring.locker\r\n      : 'small';\r\n    // todo: handle timezone\r\n    let startDate = new Date();\r\n    startDate.setHours(14,0,0,0);\r\n    startDate.setDate(startDate.getDate() + 1);\r\n    let endDate = new Date();\r\n    endDate.setHours(12,0,0,0);\r\n    endDate.setMonth(startDate.getMonth() + 3);\r\n    this.state = {\r\n      reservations: [],\r\n      language: language,\r\n      reservation: {\r\n        from: startDate.toISOString(),\r\n        to: endDate.toISOString(),\r\n        name: '',\r\n        email: '',\r\n        telephone: '',\r\n        locker: locker,\r\n        language: language\r\n      },\r\n      copy: {\r\n        languages: []\r\n      }\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.displayReservations = this.displayReservations.bind(this);\r\n    this.addReservation = this.addReservation.bind(this);\r\n  }\r\n  handleChange(event) {\r\n    const target = event.target;\r\n    this.setState(state => {\r\n      state.reservation[target.id] = target.value;\r\n      return state;\r\n    });\r\n  }\r\n  componentDidMount() {\r\n    fetch(CopyApi + '/' + this.state.language + '/book.json')\r\n      .then(responseCopyApi => responseCopyApi.json())\r\n      .then((copy) => {\r\n        this.setState(state => ({\r\n          language: state.language,\r\n          reservation: state.reservation,\r\n          copy: copy\r\n        }));\r\n      })\r\n      .catch(console.log);\r\n    this.db = serviceClient.db('bearslairs-bansko');\r\n    this.displayReservationsOnLoad();\r\n  }\r\n\r\n  displayReservations() {\r\n    this.db\r\n      .collection('reservations')\r\n      .find({}, { limit: 1000 })\r\n      .asArray()\r\n      .then(reservations => { this.setState({reservations}); });\r\n  }\r\n\r\n  displayReservationsOnLoad() {\r\n    client.auth\r\n      .loginWithCredential(new AnonymousCredential())\r\n      .then(this.displayReservations)\r\n      .catch(console.error);\r\n  }\r\n\r\n  addReservation(event) {\r\n    event.preventDefault();\r\n    const { reservation } = this.state;\r\n    this.db\r\n      .collection('reservations')\r\n      .insertOne({\r\n        owner_id: client.auth.user.id,\r\n        reservation: reservation\r\n      })\r\n      .then(this.displayReservations)\r\n      .catch(console.error);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <Nav />\r\n        <Row style={{ paddingTop: '10px' }}>\r\n          <h2>make a reservation</h2>\r\n        </Row>\r\n        <Row style={{ paddingTop: '10px' }}>\r\n\r\n          <Form onSubmit={this.addReservation}>\r\n            <Form.Group controlId=\"name\">\r\n              <Form.Label>name</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"full name\"\r\n                value={this.state.reservation.name}\r\n                onChange={this.handleChange} />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"email\">\r\n              <Form.Label>email</Form.Label>\r\n              <Form.Control\r\n                type=\"email\"\r\n                placeholder=\"email\"\r\n                value={this.state.reservation.email}\r\n                onChange={this.handleChange} />\r\n              <Form.Text className=\"text-muted\">\r\n                we'll never share your email with anyone else.\r\n              </Form.Text>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"telephone\">\r\n              <Form.Label>telephone</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"telephone number\"\r\n                value={this.state.reservation.telephone}\r\n                onChange={this.handleChange} />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"fromto\">\r\n              <Form.Label>reservation dates</Form.Label>\r\n              <br />\r\n              <DateRangePicker\r\n                startDate={moment(this.state.reservation.from)}\r\n                startDateId='reservation_from'\r\n                endDate={moment(this.state.reservation.to)}\r\n                endDateId='reservation_to'\r\n                onDatesChange={({ startDate, endDate }) => this.setState(state => { state.reservation.from = startDate.toISOString(); state.reservation.to = endDate.toISOString(); return state; })}\r\n                focusedInput={this.state.focusedInput}\r\n                onFocusChange={focusedInput => this.setState({ focusedInput })}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"locker\">\r\n              <Form.Label>i would like to book storage</Form.Label>\r\n              <Form.Check\r\n                type=\"radio\"\r\n                label=\"in a small locker\"\r\n                onChange={() => this.setState(state => {state.reservation.locker = 'small'; return state;})}\r\n                checked={this.state.reservation.locker === 'small'} />\r\n              <Form.Check\r\n                type=\"radio\"\r\n                label=\"in a medium locker\"\r\n                onChange={() => this.setState(state => {state.reservation.locker = 'medium'; return state;})}\r\n                checked={this.state.reservation.locker === 'medium'} />\r\n              <Form.Check\r\n                type=\"radio\"\r\n                label=\"in a large locker\"\r\n                onChange={() => this.setState(state => {state.reservation.locker = 'large'; return state;})}\r\n                checked={this.state.reservation.locker === 'large'} />\r\n              <Form.Check\r\n                type=\"radio\"\r\n                label=\"for a bicycle\"\r\n                onChange={() => this.setState(state => {state.reservation.locker = 'bicycle'; return state;})}\r\n                checked={this.state.reservation.locker === 'bicycle'} />\r\n              <Form.Check\r\n                type=\"radio\"\r\n                label=\"for a motorcycle\"\r\n                onChange={() => this.setState(state => {state.reservation.locker = 'motorcycle'; return state;})}\r\n                checked={this.state.reservation.locker === 'motorcycle'} />\r\n              <Form.Check\r\n                type=\"radio\"\r\n                label=\"for a large motorcycle\"\r\n                onChange={() => this.setState(state => {state.reservation.locker = 'large-motorcycle'; return state;})}\r\n                checked={this.state.reservation.locker === 'large-motorcycle'} />\r\n            </Form.Group>\r\n            <StripeProvider apiKey=\"pk_test_kSrcl4f2BEKQTkQCIuDih41I000nfCqc5I\">\r\n              <Elements>\r\n                <CheckoutForm />\r\n              </Elements>\r\n            </StripeProvider>\r\n          </Form>\r\n        </Row>\r\n        {\r\n          (window.location.hostname === 'localhost') ?\r\n          <Row>\r\n            <pre>\r\n              {JSON.stringify(this.state, null, 2)}\r\n            </pre>\r\n          </Row> : null\r\n        }\r\n      </Container>\r\n    );\r\n  }\r\n}\r\nexport default Book;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\nimport './index.css';\nimport App from './App';\nimport Book from './Book';\n\nconst routing = (\n  <BrowserRouter>\n    <Switch>\n      <Route exact path=\"/\" component={App} />\n      <Route path=\"/book\" component={Book} />\n    </Switch>\n  </BrowserRouter>\n);\nReactDOM.render(routing, document.getElementById('root'));\n"],"sourceRoot":""}