{"version":3,"sources":["privacy.md","terms.md","libs/contextLib.js","components/AuthenticatedRoute.js","components/UnauthenticatedRoute.js","containers/Home.js","containers/Privacy.js","containers/Terms.js","components/LoaderButton.js","libs/hooksLib.js","libs/errorLib.js","containers/Login.js","containers/Settings.js","containers/ChangeEmail.js","containers/ResetPassword.js","containers/ChangePassword.js","containers/Signup.js","containers/CreateBooking.js","containers/BookingList.js","containers/NotFound.js","Routes.js","App.js","config.js","serviceWorker.js","index.js"],"names":["module","exports","AppContext","createContext","useAppContext","useContext","AuthenticatedRoute","children","rest","useLocation","pathname","search","isAuthenticated","to","UnauthenticatedRoute","redirect","name","url","window","location","href","replace","regex","RegExp","results","exec","decodeURIComponent","querystring","Home","lairImages","lairIcons","bikeImages","bikeIcons","useState","language","copy","carousel","blurbs","cards","content","setContent","temperature","created_at","Date","now","value","humidity","climate","setClimate","useEffect","fetch","CopyApi","then","responseCopyApi","json","catch","console","log","responseUbiBotApi","container","result","lastValues","JSON","parse","channel","last_values","field1","field2","Container","id","fluid","Row","className","Col","xl","md","theme","Math","round","max","steps","format","size","height","Intl","DateTimeFormat","year","month","day","hour","minute","second","timeZone","slice","map","blurb","blurbIndex","key","title","paragraph","paragraphIndex","length","Image","src","image","text","Button","card","cardIndex","Card","Header","style","backgroundImage","alt","marginTop","Body","Title","description","join","lmargin","padding","features","feature","featureIndex","listStyleType","fontWeight","margin","details","detail","detailIndex","Footer","button","link","width","hostname","bootstrapURLKeys","defaultCenter","lat","lng","defaultZoom","onGoogleApiLoaded","maps","marker","Marker","position","infoWindow","InfoWindow","open","addListener","setZoom","setCenter","getPosition","Privacy","undefined","markdownContent","setMarkdownContent","markdownFile","reader","source","Terms","LoaderButton","isLoading","disabled","props","Spinner","animation","marginRight","useFormFields","initialState","fields","setValues","event","target","onError","error","message","toString","Error","alert","providerId","facilityId","Login","history","useHistory","userHasAuthenticated","setIsLoading","email","password","handleFieldChange","a","preventDefault","Auth","signIn","currentAuthenticatedUser","user","attributes","API","put","body","response","status","customer","updateUserAttributes","push","Form","onSubmit","Group","controlId","Label","Control","autoFocus","type","onChange","block","Settings","ChangeEmail","codeSent","setCodeSent","code","isConfirming","setIsConfirming","isSendingCode","setIsSendingCode","handleUpdateClick","handleConfirmClick","verifyCurrentUserAttributeSubmit","Text","ResetPassword","confirmPassword","confirmed","setConfirmed","handleSendCodeClick","forgotPassword","forgotPasswordSubmit","icon","ChangePassword","oldPassword","isChanging","setIsChanging","currentUser","changePassword","Signup","confirmationCode","newUser","setNewUser","handleSubmit","signUp","username","handleConfirmationSubmit","confirmSignUp","post","data","err","CreateBooking","stripe","useStripe","elements","useElements","setUser","units","price","yearly","bgn","priceId","defaultTaxRates","quarterly","monthly","corona","available","from","dimensions","depth","door","startDate","setHours","setDate","getDate","endDate","setMonth","getMonth","vat_number","telephone","address","toISOString","months","unit","Object","keys","find","u","paymentFrequency","coupon","termsAccepted","isVatNumberLookupRunning","setIsVatNumberLookupRunning","touched","setTouched","focusedDate","setFocusedDate","showVatInput","setShowVatInput","validationErrors","setValidationErrors","validationSuccesses","setValidationSuccesses","countryCode","vatNumber","vatEntity","setVatEntity","customMessage","customValidator","validatorRef","useRef","SimpleReactValidator","messages","validators","useValidator","validator","valid","invalid","discount","percent","amount","setCoupon","c","percent_off","amount_off","blankPrice","currency","base","subtotal","total","vat","setPrice","currencySymbol","getUnit","split","category","handleCardSelect","f","handleVatNumberChange","vatNumberFormatValidators","AT","BE","BG","CY","CZ","DE","DK","EE","EL","ES","FI","FR","GB","HU","IE","IT","LT","LU","LV","MT","NL","PL","PT","SE","SI","SK","match","validationErrorsWithVatNumberErrorsRemoved","entity","validationSuccessesWithVatNumberSuccessesRemoved","createSubscription","cancelAt","customerId","paymentMethodId","reservation","unitId","items","subscription","handlePaymentThatRequiresCustomerAction","handleRequiresPaymentMethod","onSubscriptionComplete","invoice","isRetry","paymentIntent","payment_intent","latest_invoice","confirmCardPayment","client_secret","payment_method","localStorage","setItem","retryInvoiceWithNewPaymentMethod","invoiceId","parseStripeAddress","viesAddress","line1","city","state","postal_code","country","createCustomerResponse","phone_number","phone","taxId","cardElement","getElement","CardElement","latestInvoicePaymentIntentStatus","getItem","createPaymentMethod","paymentMethod","validationSuccessesWithCardSuccessesRemoved","validationErrorsWithCardErrorsRemoved","moment","couponCode","e","t","noValidate","Check","label","checked","as","placeholder","isValid","isInvalid","marginLeft","color","current","fieldValid","showMessageFor","required","rows","startsWith","Input","cursor","onClick","displayFormat","date","onDateChange","add","focused","onFocusChange","min","floor","maxTenancyInMonths","parseInt","Number","parseFloat","toFixed","Table","colSpan","options","fontFamily","fontSmoothing","fontSize","iconColor","allValid","Tabs","activeKey","onSelect","handleTabSelect","Tab","eventKey","CardDeck","Img","variant","opacity","prop","BookingList","subscriptions","setSubscriptions","get","total_count","start_date","canceled_at","subscriptionItem","nickname","unit_amount","recurring","interval","stringify","NotFound","Routes","exact","path","App","textMessage","encodeURI","coordinates","latitude","longitude","waypoints","whatsappLink","isMobile","isAndroid","isFirefox","isSafari","viberLink","mapsLink","wp","isAuthenticating","setIsAuthenticating","currentSession","signOut","onLoad","Navbar","collapseOnSelect","expand","Toggle","aria-controls","Collapse","Nav","NavItem","OverlayTrigger","placement","delay","show","hide","overlay","backgroundColor","rel","NavDropdown","drop","Item","Divider","Provider","REGION","BUCKET","URL","USER_POOL_ID","APP_CLIENT_ID","IDENTITY_POOL_ID","Boolean","library","faPhone","faFacebook","faWhatsappSquare","faViber","faMapMarkedAlt","farUser","fasUser","stripePromise","loadStripe","Amplify","configure","mandatorySignIn","region","config","userPoolId","identityPoolId","userPoolWebClientId","Storage","bucket","endpoints","endpoint","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ed7e7c83.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/privacy.bf6275f6.md\";","module.exports = __webpack_public_path__ + \"static/media/terms.a65f2484.md\";","import { useContext, createContext } from 'react';\n\nexport const AppContext = createContext(null);\n\nexport function useAppContext() {\n  return useContext(AppContext);\n}\n","import React from 'react';\nimport { Route, Redirect, useLocation } from 'react-router-dom';\nimport { useAppContext } from '../libs/contextLib';\n\nexport default function AuthenticatedRoute({ children, ...rest }) {\n  const { pathname, search } = useLocation();\n  const { isAuthenticated } = useAppContext();\n  return (\n    <Route {...rest}>\n      {isAuthenticated ? (\n        children\n      ) : (\n        <Redirect to={\n          `/login?redirect=${pathname}${search}`\n        } />\n      )}\n    </Route>\n  );\n}\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { useAppContext } from '../libs/contextLib';\n\nfunction querystring(name, url = window.location.href) {\n  name = name.replace(/[[]]/g, \"\\\\$&\");\n\n  const regex = new RegExp(\"[?&]\" + name + \"(=([^&#]*)|&|#|$)\", \"i\");\n  const results = regex.exec(url);\n\n  if (!results) {\n    return null;\n  }\n  if (!results[2]) {\n    return \"\";\n  }\n\n  return decodeURIComponent(results[2].replace(/\\+/g, \" \"));\n}\n\nexport default function UnauthenticatedRoute({ children, ...rest }) {\n  const { isAuthenticated } = useAppContext();\n  const redirect = querystring(\"redirect\");\n  return (\n    <Route {...rest}>\n      {!isAuthenticated ? (\n        children\n      ) : (\n        <Redirect to={redirect === \"\" || redirect === null ? \"/\" : redirect} />\n      )}\n    </Route>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Image from 'react-bootstrap/Image';\nimport GoogleMapReact from 'google-map-react';\nimport Thermometer from 'react-thermometer-component';\n\nexport default function Home() {\n  const lairImages = ['/lair-baby.png', '/lair-mama.png', '/lair-papa.png'];\n  const lairIcons = ['/lair-baby-icon.png', '/lair-mama-icon.png', '/lair-papa-icon.png'];\n  const bikeImages = ['/bike-rack.png', '/bike-small.png', '/bike-large.png'];\n  const bikeIcons = ['/bike-rack-icon.png', '/bike-small-icon.png', '/bike-large-icon.png'];\n\n  const CopyApi = 'https://raw.githubusercontent.com/bearslairs/bearslairs-data/master/copy';\n  const UbiBotApi = 'https://api.ubibot.io/channels/13604?api_key=609210eb2306427a88d662d48ddb578d';\n  const [content, setContent] = useState({ language: 'en', copy: { carousel: [], blurbs: [], cards: []}});\n  const [climate, setClimate] = useState({ temperature: { created_at: Date.now(), value: 0 }, humidity: { created_at: Date.now(), value: 0 }});\n\n  useEffect(() => {\n    fetch(CopyApi + '/' + content.language + '/home.json')\n      .then(responseCopyApi => responseCopyApi.json())\n      .then((copy) => {\n        setContent({\n          language: content.language,\n          copy: copy\n        });\n      })\n      .catch(console.log);\n  }, [content]);\n  useEffect(() => {\n    fetch(UbiBotApi)\n      .then(responseUbiBotApi => responseUbiBotApi.json())\n      .then((container) => {\n        if (container.result === 'success') {\n          let lastValues = JSON.parse(container.channel.last_values);\n          setClimate({\n            temperature: lastValues.field1,\n            humidity: lastValues.field2\n          });\n        }\n      })\n      .catch(console.log);\n  }, [climate]);\n\n  return (\n    <>\n      <Container id=\"header\" fluid>\n        <h2>\n          secure self storage in bansko<br />\n          with access at your convenience\n        </h2>\n      </Container>\n      <Container id=\"environment\">\n        <h3>\n          real-time environment monitoring\n        </h3>\n        <p>\n          we monitor temperature, humidity and light within the facility and publish those readings at\n          &nbsp;\n          <a href=\"https://space.ubibot.io/space/user/device/channel-id/13604\">\n            ubibot.io/bearslairs-bansko\n          </a>,\n          <br />\n          so our customers can stay informed of the environmetal conditions of their self-storage.\n          The latest readings taken were:\n        </p>\n        <Row className=\"justify-content-xl-center justify-content-md-center\">\n          <Col xl=\"auto\" md=\"auto\">\n            <Thermometer\n              theme=\"dark\"\n              value={(Math.round(climate.temperature.value * 10) / 10)}\n              max={(climate.temperature.value * 1.3)}\n              steps=\"3\"\n              format=\"°C\"\n              size=\"large\"\n              height=\"200\"\n            />\n          </Col>\n          <Col xl=\"auto\" md=\"auto\">\n            <h4>temperature</h4>\n            {\n              new Intl.DateTimeFormat(\"en-GB\", {\n                year: \"numeric\",\n                month: \"long\",\n                day: \"2-digit\",\n                hour: 'numeric',\n                minute: 'numeric',\n                second: 'numeric',\n                timeZone: 'Europe/Sofia'\n              }).format(new Date(climate.temperature.created_at))\n            }:&nbsp;\n            <strong>{(Math.round(climate.temperature.value * 10) / 10)}°C</strong>\n            <h4>humidity</h4>\n            {\n              new Intl.DateTimeFormat(\"en-GB\", {\n                year: \"numeric\",\n                month: \"long\",\n                day: \"2-digit\",\n                hour: 'numeric',\n                minute: 'numeric',\n                second: 'numeric',\n                timeZone: 'Europe/Sofia'\n              }).format(new Date(climate.humidity.created_at))\n            }:&nbsp;\n            <strong>{climate.humidity.value}%</strong>\n          </Col>\n        </Row>\n      </Container>\n      <Container id=\"about\" fluid>\n        {\n          content.copy.blurbs.slice(0, 1).map((blurb, blurbIndex) => (\n            <Container key={blurbIndex}>\n              <h3>{blurb.title}</h3>\n              <Row className=\"justify-content-xl-center justify-content-md-center\">\n              {\n                blurb.copy.map((paragraph, paragraphIndex) => (\n                  <Col xl={(12 / blurb.copy.length)} key={paragraphIndex}>\n                    <Image src={paragraph.image} />\n                    <p>{paragraph.text}</p>\n                  </Col>\n                ))\n              }\n              </Row>\n            </Container>\n          ))\n        }\n      </Container>\n      <Container id=\"security\" fluid>\n        <Container>\n          <Row className=\"justify-content-xl-center justify-content-md-center\">\n            {\n              content.copy.blurbs.slice(1, 2).map((blurb, blurbIndex) => (\n                <Col xl={7} key={blurbIndex}>\n                  <h3>{blurb.title}</h3>\n                  {\n                    blurb.copy.map((paragraph, paragraphIndex) => (\n                      <p key={paragraphIndex}>\n                        {paragraph}\n                      </p>\n                    ))\n                  }\n                  <LinkContainer to=\"/booking/new\">\n                    <Button>book now</Button>\n                  </LinkContainer>\n                </Col>\n              ))\n            }\n          </Row>\n        </Container>\n      </Container>\n      <Container id=\"lair\">\n        <h3>\n          choose your lair\n        </h3>\n        <Row className=\"justify-content-xl-center justify-content-md-center\">\n          {\n            content.copy.cards.slice(0, 3).map((card, cardIndex) => (\n              <Col key={cardIndex}>\n              <Card className=\"h-100\">\n                <Card.Header>\n                  {card.title}\n                </Card.Header>\n                <div style={{height: '200px', backgroundImage: 'url(' + lairImages[cardIndex] + ')'}}>\n                  <Image src={lairIcons[cardIndex]} alt={card.image.alt} style={{marginTop: '25px'}} />\n                </div>\n                <Card.Body>\n                  <Card.Title>\n                    {card.description.join(' ')}\n                  </Card.Title>\n                  <hr />\n                  <ul style={{lmargin: 0, padding: 0}}>\n                    {\n                      card.features.map((feature, featureIndex) => (\n                        <li key={featureIndex} style={{listStyleType: 'none', fontWeight: 600, margin: 0, padding: 0}}>\n                          {feature.text}\n                          <ul style={{lmargin: 0, padding: 0}}>\n                            {\n                              feature.details.map((detail, detailIndex) => (\n                                <li key={detailIndex} style={{listStyleType: 'none', fontWeight: 'normal', margin: 0, padding: 0}}>\n                                  {detail}\n                                </li>\n                              ))\n                            }\n                          </ul>\n                        </li>\n                      ))\n                    }\n                  </ul>\n                </Card.Body>\n                <Card.Footer>\n                  <LinkContainer to={card.button.link}>\n                    <Button>{card.button.text}</Button>\n                  </LinkContainer>\n                </Card.Footer>\n              </Card>\n              </Col>\n            ))\n          }\n        </Row>\n      </Container>\n      <Container id=\"adaptive\" fluid>\n        {\n          content.copy.blurbs.slice(2, 3).map((blurb, blurbIndex) => (\n            <Container key={blurbIndex}>\n              <h3>{blurb.title}</h3>\n              <Row className=\"justify-content-xl-center justify-content-md-center\">\n                <Col xl={7}>\n                  <p>{blurb.copy[0]}</p>\n                </Col>\n              </Row>\n              <blockquote className=\"blockquote\">\n                <p>{blurb.copy[1]}</p>\n              </blockquote>\n            </Container>\n          ))\n        }\n      </Container>\n      <Container id=\"bike\" fluid>\n        {\n          content.copy.blurbs.slice(3, 4).map((blurb, blurbIndex) => (\n            <Container key={blurbIndex}>\n              <h3>{blurb.title}</h3>\n              <Row className=\"justify-content-xl-center justify-content-md-center\">\n                <Col xl={8}>\n                  <p>{blurb.copy[0]}</p>\n                </Col>\n              </Row>\n            </Container>\n          ))\n        }\n        <Container>\n          <Row>\n            {\n              content.copy.cards.slice(3, 6).map((card, cardIndex) => (\n                <Col key={cardIndex}>\n                  <Card className=\"h-100\">\n                    <Card.Header>\n                      {card.title}\n                    </Card.Header>\n                    <div style={{height: '200px', backgroundImage: 'url(' + bikeImages[cardIndex] + ')'}}>\n                      <Image src={bikeIcons[cardIndex]} alt={card.image.alt} style={{marginTop: '25px'}} />\n                    </div>\n                    <Card.Body>\n                      <Card.Title>\n                        {card.description.join(' ')}\n                      </Card.Title>\n                      <hr />\n                      <ul style={{lmargin: 0, padding: 0}}>\n                        {\n                          card.features.map((feature, featureIndex) => (\n                            <li key={featureIndex} style={{listStyleType: 'none', fontWeight: 600, margin: 0, padding: 0}}>\n                              {feature.text}\n                              <ul style={{margin: 0, padding: 0}}>\n                                {\n                                  feature.details.map((detail, detailIndex) => (\n                                    <li key={detailIndex} style={{listStyleType: 'none', fontWeight: 'normal', margin: 0, padding: 0}}>\n                                      {detail}\n                                    </li>\n                                  ))\n                                }\n                              </ul>\n                            </li>\n                          ))\n                        }\n                      </ul>\n                    </Card.Body>\n                    <Card.Footer>\n                      <LinkContainer to={card.button.link}>\n                        <Button>{card.button.text}</Button>\n                      </LinkContainer>\n                    </Card.Footer>\n                  </Card>\n                </Col>\n              ))\n            }\n          </Row>\n        </Container>\n      </Container>\n      <Container id=\"facility\" fluid>\n        {\n          content.copy.blurbs.slice(4, 5).map((blurb, blurbIndex) => (\n            <Container key={blurbIndex}>\n              <h3>{blurb.title}</h3>\n              <Row className=\"justify-content-xl-center justify-content-md-center\">\n              {\n                blurb.copy.map((paragraph, paragraphIndex) => (\n                  <Col xl={(12 / blurb.copy.length)} key={paragraphIndex}>\n                    <Image src={paragraph.image} />\n                    <p>{paragraph.text}</p>\n                  </Col>\n                ))\n              }\n              </Row>\n              <Row className=\"justify-content-xl-center justify-content-md-center\">\n                <Col xl=\"auto\" md=\"auto\">\n                  <LinkContainer to=\"/booking/new\">\n                    <Button>book now</Button>\n                  </LinkContainer>\n                </Col>\n              </Row>\n            </Container>\n          ))\n        }\n      </Container>\n      <Container id=\"map\" fluid>\n        <div style={{ height: '650px', width: '100%' }}>\n          {\n            (window.location.hostname === 'localhost')\n              ? null\n              : (\n                  <GoogleMapReact\n                    bootstrapURLKeys={{ key: 'AIzaSyCKw8by28pNI5tlimezyyjgtXz_Nvkq2-Y' }}\n                    defaultCenter={{ lat: 41.820582, lng: 23.478257 }}\n                    defaultZoom={ 14 }\n                    onGoogleApiLoaded={({map, maps}) => {\n                      let marker = new maps.Marker({\n                        position: { lat: 41.820582, lng: 23.478257 },\n                        map,\n                        title: 'Bears Lairs, Bansko',\n                        description: 'secure, self-storage in bansko with access at your convenience',\n                        link: {\n                          url: 'https://www.google.com/maps/place/Bears+Lairs/@41.8223813,23.4681867,15z/data=!4m5!3m4!1s0x0:0xadd4ea4c0b9a3216!8m2!3d41.820631!4d23.478215',\n                          text: 'maps.google.com/Bears+Lairs'\n                        }\n                      });\n                      let infoWindow = new maps.InfoWindow({\n                        content: '<h4><img src=\"favicon-32x32.png\" style=\"margin-right: 6px;\" class=\"rounded-circle\" />' + marker.title + '</h4><p>' + marker.description + '<br /><a href=\"' + marker.link.url + '\">' + marker.link.text + '</a></p>'\n                      });\n                      infoWindow.open(map, marker);\n                      marker.addListener('click', () => {\n                        map.setZoom(14);\n                        map.setCenter(marker.getPosition());\n                        infoWindow.open(map, marker);\n                      });\n                    }} />\n                )\n          }\n        </div>\n      </Container>\n    </>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport Container from 'react-bootstrap/Container';\nimport markdownFile from '../privacy.md';\n\nexport default function Privacy() {\n  const [markdownContent, setMarkdownContent] = useState(undefined);\n  useEffect(() => { fetch(markdownFile).then(reader => reader.text()).then(setMarkdownContent); }, []);\n  return (\n    <Container id=\"policy\">\n      <ReactMarkdown source={markdownContent} />\n    </Container>\n  );\n}","import React, { useState, useEffect } from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport Container from 'react-bootstrap/Container';\nimport markdownFile from '../terms.md';\n\nexport default function Terms() {\n  const [markdownContent, setMarkdownContent] = useState(undefined);\n  useEffect(() => { fetch(markdownFile).then(reader => reader.text()).then(setMarkdownContent); }, []);\n  return (\n    <Container id=\"policy\">\n      <ReactMarkdown source={markdownContent} />\n    </Container>\n  );\n}","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Spinner from 'react-bootstrap/Spinner';\n\nexport default function LoaderButton({\n  isLoading,\n  disabled = false,\n  ...props\n}) {\n  return (\n    <Button disabled={disabled || isLoading} {...props}>\n      {isLoading && <Spinner animation=\"border\" size=\"sm\" style={{marginRight: '0.7em'}} />}\n      {props.children}\n    </Button>\n  );\n}\n","import { useState } from 'react';\n\nexport function useFormFields(initialState) {\n  const [fields, setValues] = useState(initialState);\n\n  return [\n    fields,\n    function(event) {\n      setValues({\n        ...fields,\n        [event.target.id]: event.target.value\n      });\n    }\n  ];\n}\n","export function onError(error) {\n  let message = error.toString();\n\n  // Auth errors\n  if (!(error instanceof Error) && error.message) {\n    message = error.message;\n  }\n\n  alert(message);\n}\n","import React, { useState } from 'react';\nimport { API, Auth } from 'aws-amplify';\nimport { Link, useHistory } from 'react-router-dom';\nimport Container from 'react-bootstrap/Container';\nimport Form from 'react-bootstrap/Form';\nimport LoaderButton from '../components/LoaderButton';\nimport { useAppContext } from '../libs/contextLib';\nimport { useFormFields } from '../libs/hooksLib';\nimport { onError } from '../libs/errorLib';\n\n\nconst providerId = 'e986bca0-ff41-11ea-8196-af25e422bd08';\nconst facilityId = 'ff1694c0-ffa8-11ea-bfbc-4f270cb046f3';\n\n\nexport default function Login() {\n  const history = useHistory();\n  const { userHasAuthenticated } = useAppContext();\n  const [isLoading, setIsLoading] = useState(false);\n  const [fields, handleFieldChange] = useFormFields({ email: '', password: '' });\n\n  function validateForm() {\n    return fields.email.length > 0 && fields.password.length > 0;\n  }\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n    setIsLoading(true);\n    try {\n      await Auth.signIn(fields.email, fields.password);\n      userHasAuthenticated(true);\n\n      // create and associate a stripe customer id if user doesn't have one\n      let user = await Auth.currentAuthenticatedUser();\n      let { attributes } = user;\n      if (!('custom:stripe_customer_id' in attributes)) {\n        API.put('limelockers', `/${providerId}/${facilityId}/customer`, { body: { email: fields.email } })\n          .then(async(response) => {\n            if (response.status && response.customer && response.customer.id) {\n              await Auth.updateUserAttributes(user, { 'custom:stripe_customer_id': response.customer.id });\n            } else if (response.error) {\n              console.log(response.error);\n            }\n          });\n      }\n\n      history.push('/');\n    } catch (e) {\n      onError(e);\n      setIsLoading(false);\n    }\n  }\n\n\n  return (\n    <Container id=\"login\">\n      <h2>log in</h2>\n      <Form onSubmit={handleSubmit}>\n        <Form.Group controlId=\"email\">\n          <Form.Label>Email</Form.Label>\n          <Form.Control\n            autoFocus\n            type=\"email\"\n            value={fields.email}\n            onChange={handleFieldChange} />\n        </Form.Group>\n        <Form.Group controlId=\"password\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            value={fields.password}\n            onChange={handleFieldChange} />\n        </Form.Group>\n        <LoaderButton\n          block\n          type=\"submit\"\n          isLoading={isLoading}\n          disabled={!validateForm()}>\n          log-in\n        </LoaderButton>\n        <Link to=\"/login/reset\">forgot password?</Link>\n        <Link to=\"/signup\">sign-up</Link>\n      </Form>\n    </Container>\n  );\n}\n","import React from 'react';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport LoaderButton from '../components/LoaderButton';\n\nexport default function Settings() {\n  return (\n    <div className=\"Settings\">\n      <LinkContainer to=\"/settings/password\">\n        <LoaderButton block>\n          Change Password\n        </LoaderButton>\n      </LinkContainer>\n    </div>\n  );\n}","import React, { useState } from 'react';\nimport { Auth } from 'aws-amplify';\nimport { useHistory } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport LoaderButton from '../components/LoaderButton';\nimport { useFormFields } from '../libs/hooksLib';\nimport { onError } from '../libs/errorLib';\n\nexport default function ChangeEmail() {\n  const history = useHistory();\n  const [codeSent, setCodeSent] = useState(false);\n  const [fields, handleFieldChange] = useFormFields({\n    code: '',\n    email: '',\n  });\n  const [isConfirming, setIsConfirming] = useState(false);\n  const [isSendingCode, setIsSendingCode] = useState(false);\n\n  function validateEmailForm() {\n    return fields.email.length > 0;\n  }\n\n  function validateConfirmForm() {\n    return fields.code.length > 0;\n  }\n\n  async function handleUpdateClick(event) {\n    event.preventDefault();\n    setIsSendingCode(true);\n    try {\n      const user = await Auth.currentAuthenticatedUser();\n      await Auth.updateUserAttributes(user, { email: fields.email });\n      setCodeSent(true);\n    } catch (error) {\n      onError(error);\n      setIsSendingCode(false);\n    }\n  }\n\n  async function handleConfirmClick(event) {\n    event.preventDefault();\n    setIsConfirming(true);\n    try {\n      await Auth.verifyCurrentUserAttributeSubmit('email', fields.code);\n      history.push('/settings');\n    } catch (error) {\n      onError(error);\n      setIsConfirming(false);\n    }\n  }\n\n  function renderUpdateForm() {\n    return (\n      <Form onSubmit={handleUpdateClick}>\n        <Form.Group controlId=\"email\">\n          <Form.Label>Email</Form.Label>\n          <Form.Control\n            autoFocus\n            type=\"email\"\n            value={fields.email}\n            onChange={handleFieldChange} />\n        </Form.Group>\n        <LoaderButton\n          block\n          type=\"submit\"\n          isLoading={isSendingCode}\n          disabled={!validateEmailForm()}>\n          Update Email\n        </LoaderButton>\n      </Form>\n    );\n  }\n\n  function renderConfirmationForm() {\n    return (\n      <Form onSubmit={handleConfirmClick}>\n        <Form.Group controlId=\"code\">\n          <Form.Label>Confirmation Code</Form.Label>\n          <Form.Control\n            autoFocus\n            type=\"tel\"\n            value={fields.code}\n            onChange={handleFieldChange} />\n          <Form.Text>\n            Please check your email ({fields.email}) for the confirmation code.\n          </Form.Text>\n        </Form.Group>\n        <LoaderButton\n          block\n          type=\"submit\"\n          isLoading={isConfirming}\n          disabled={!validateConfirmForm()}>\n          Confirm\n        </LoaderButton>\n      </Form>\n    );\n  }\n\n  return (\n    <div>\n      {!codeSent ? renderUpdateForm() : renderConfirmationForm()}\n    </div>\n  );\n}","import React, { useState } from 'react';\nimport { Auth } from 'aws-amplify';\nimport { Link } from 'react-router-dom';\nimport Container from 'react-bootstrap/Container';\nimport Form from 'react-bootstrap/Form';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n//import { faOk } from '@fortawesome/free-solid-svg-icons'\nimport LoaderButton from '../components/LoaderButton';\nimport { useFormFields } from '../libs/hooksLib';\nimport { onError } from '../libs/errorLib';\n\nexport default function ResetPassword() {\n  const [fields, handleFieldChange] = useFormFields({\n    code: '',\n    email: '',\n    password: '',\n    confirmPassword: '',\n  });\n  const [codeSent, setCodeSent] = useState(false);\n  const [confirmed, setConfirmed] = useState(false);\n  const [isConfirming, setIsConfirming] = useState(false);\n  const [isSendingCode, setIsSendingCode] = useState(false);\n\n  function validateCodeForm() {\n    return fields.email.length > 0;\n  }\n\n  function validateResetForm() {\n    return (\n      fields.code.length > 0 &&\n      fields.password.length > 0 &&\n      fields.password === fields.confirmPassword\n    );\n  }\n\n  async function handleSendCodeClick(event) {\n    event.preventDefault();\n\n    setIsSendingCode(true);\n\n    try {\n      await Auth.forgotPassword(fields.email);\n      setCodeSent(true);\n    } catch (error) {\n      onError(error);\n      setIsSendingCode(false);\n    }\n  }\n\n  async function handleConfirmClick(event) {\n    event.preventDefault();\n\n    setIsConfirming(true);\n\n    try {\n      await Auth.forgotPasswordSubmit(\n        fields.email,\n        fields.code,\n        fields.password\n      );\n      setConfirmed(true);\n    } catch (error) {\n      onError(error);\n      setIsConfirming(false);\n    }\n  }\n\n  function renderRequestCodeForm() {\n    return (\n      <form onSubmit={handleSendCodeClick}>\n        <Form.Group controlId=\"email\">\n          <Form.Label>Email</Form.Label>\n          <Form.Control\n            autoFocus\n            type=\"email\"\n            value={fields.email}\n            onChange={handleFieldChange} />\n        </Form.Group>\n        <LoaderButton\n          block\n          type=\"submit\"\n          isLoading={isSendingCode}\n          disabled={!validateCodeForm()}>\n          Send Confirmation\n        </LoaderButton>\n      </form>\n    );\n  }\n\n  function renderConfirmationForm() {\n    return (\n      <form onSubmit={handleConfirmClick}>\n        <Form.Group controlId=\"code\">\n          <Form.Label>Confirmation Code</Form.Label>\n          <Form.Control\n            autoFocus\n            type=\"tel\"\n            value={fields.code}\n            onChange={handleFieldChange} />\n          <Form.Text>\n            Please check your email ({fields.email}) for the confirmation code.\n          </Form.Text>\n        </Form.Group>\n        <hr />\n        <Form.Group controlId=\"password\">\n          <Form.Label>New Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            value={fields.password}\n            onChange={handleFieldChange} />\n        </Form.Group>\n        <Form.Group controlId=\"confirmPassword\">\n          <Form.Label>Confirm Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            value={fields.confirmPassword}\n            onChange={handleFieldChange} />\n        </Form.Group>\n        <LoaderButton\n          block\n          type=\"submit\"\n          isLoading={isConfirming}\n          disabled={!validateResetForm()}>\n          Confirm\n        </LoaderButton>\n      </form>\n    );\n  }\n\n  function renderSuccessMessage() {\n    return (\n      <div className=\"success\">\n        <FontAwesomeIcon icon=\"ok\" />\n        <p>Your password has been reset.</p>\n        <p>\n          <Link to=\"/login\">\n            Click here to login with your new credentials.\n          </Link>\n        </p>\n      </div>\n    );\n  }\n\n  return (\n    <Container id=\"password\">\n      <h2>password reset</h2>\n      {!codeSent\n        ? renderRequestCodeForm()\n        : !confirmed\n        ? renderConfirmationForm()\n        : renderSuccessMessage()}\n    </Container>\n  );\n}","import React, { useState } from 'react';\nimport { Auth } from 'aws-amplify';\nimport { useHistory } from 'react-router-dom';\nimport Container from 'react-bootstrap/Container';\nimport Form from 'react-bootstrap/Form';\nimport LoaderButton from '../components/LoaderButton';\nimport { useFormFields } from '../libs/hooksLib';\nimport { onError } from '../libs/errorLib';\n\nexport default function ChangePassword() {\n  const history = useHistory();\n  const [fields, handleFieldChange] = useFormFields({\n    password: '',\n    oldPassword: '',\n    confirmPassword: '',\n  });\n  const [isChanging, setIsChanging] = useState(false);\n\n  function validateForm() {\n    return (\n      fields.oldPassword.length > 0 &&\n      fields.password.length > 0 &&\n      fields.password === fields.confirmPassword\n    );\n  }\n\n  async function handleChangeClick(event) {\n    event.preventDefault();\n    setIsChanging(true);\n    try {\n      const currentUser = await Auth.currentAuthenticatedUser();\n      await Auth.changePassword(\n        currentUser,\n        fields.oldPassword,\n        fields.password\n      );\n\n      history.push('/settings');\n    } catch (error) {\n      onError(error);\n      setIsChanging(false);\n    }\n  }\n\n  return (\n    <Container id=\"password\">\n      <Form onSubmit={handleChangeClick}>\n        <Form.Group controlId=\"oldPassword\">\n          <Form.Label>Old Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            onChange={handleFieldChange}\n            value={fields.oldPassword} />\n        </Form.Group>\n        <hr />\n        <Form.Group controlId=\"password\">\n          <Form.Label>New Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            onChange={handleFieldChange}\n            value={fields.password} />\n        </Form.Group>\n        <Form.Group controlId=\"confirmPassword\">\n          <Form.Label>Confirm Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            onChange={handleFieldChange}\n            value={fields.confirmPassword} />\n        </Form.Group>\n        <LoaderButton\n          block\n          type=\"submit\"\n          disabled={!validateForm()}\n          isLoading={isChanging}>\n          Change Password\n        </LoaderButton>\n      </Form>\n    </Container>\n  );\n}","import React, { useState } from 'react';\nimport { API, Auth } from 'aws-amplify';\nimport { useHistory } from 'react-router-dom';\nimport Container from 'react-bootstrap/Container';\nimport Form from 'react-bootstrap/Form';\nimport LoaderButton from '../components/LoaderButton';\nimport { useAppContext } from '../libs/contextLib';\nimport { useFormFields } from '../libs/hooksLib';\nimport { onError } from '../libs/errorLib';\n\nexport default function Signup() {\n  const [fields, handleFieldChange] = useFormFields({\n    email: '',\n    password: '',\n    confirmPassword: '',\n    confirmationCode: '',\n  });\n  const history = useHistory();\n  const [newUser, setNewUser] = useState(null);\n  const { userHasAuthenticated } = useAppContext();\n  const [isLoading, setIsLoading] = useState(false);\n\n  function validateForm() {\n    return (\n      fields.email.length > 0 &&\n      fields.password.length > 0 &&\n      fields.password === fields.confirmPassword\n    );\n  }\n\n  function validateConfirmationForm() {\n    return fields.confirmationCode.length > 0;\n  }\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n    setIsLoading(true);\n    try {\n      const newUser = await Auth.signUp({\n        username: fields.email,\n        password: fields.password\n      });\n      setIsLoading(false);\n      setNewUser(newUser);\n    } catch (e) {\n      onError(e);\n      setIsLoading(false);\n    }\n  }\n\n  async function handleConfirmationSubmit(event) {\n    event.preventDefault();\n    setIsLoading(true);\n    try {\n      await Auth.confirmSignUp(fields.email, fields.confirmationCode);\n      await Auth.signIn(fields.email, fields.password);\n      userHasAuthenticated(true);\n      API.post('billing/customer/create', '/billing/customer/create', { body: { email: fields.email, facilityId: '7edad966-198d-4ee2-8802-02f188e8f62c' } })\n        .then(async(response) => {\n          if (response.status && response.customer && response.customer.id) {\n            Auth.currentAuthenticatedUser()\n              .then(user => Auth.updateUserAttributes(user, { 'custom:stripe_customer_id': response.customer.id }))\n              .then(data => console.log(data))\n              .catch(err => console.log(err));\n          } else if (response.error) {\n            console.log(response.error);\n          }\n        });\n      history.push(\"/\");\n    } catch (e) {\n      onError(e);\n      setIsLoading(false);\n    }\n  }\n\n  function renderConfirmationForm() {\n    return (\n      <form onSubmit={handleConfirmationSubmit}>\n        <Form.Group controlId=\"confirmationCode\">\n          <Form.Label>Confirmation Code</Form.Label>\n          <Form.Control\n            autoFocus\n            type=\"tel\"\n            onChange={handleFieldChange}\n            value={fields.confirmationCode} />\n          <Form.Text>Please check your email for the code.</Form.Text>\n        </Form.Group>\n        <LoaderButton\n          block\n          type=\"submit\"\n          isLoading={isLoading}\n          disabled={!validateConfirmationForm()}>\n          verify\n        </LoaderButton>\n      </form>\n    );\n  }\n\n  function renderForm() {\n    return (\n    <Container id=\"signup\">\n      <h2>sign up</h2>\n      <Form onSubmit={handleSubmit}>\n        <Form.Group controlId=\"email\">\n          <Form.Label>Email</Form.Label>\n          <Form.Control\n            autoFocus\n            type=\"email\"\n            value={fields.email}\n            onChange={handleFieldChange}\n          />\n        </Form.Group>\n        <Form.Group controlId=\"password\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            value={fields.password}\n            onChange={handleFieldChange}\n          />\n        </Form.Group>\n        <Form.Group controlId=\"confirmPassword\">\n          <Form.Label>Confirm Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            onChange={handleFieldChange}\n            value={fields.confirmPassword}\n          />\n        </Form.Group>\n        <LoaderButton\n          block\n          type=\"submit\"\n          isLoading={isLoading}\n          disabled={!validateForm()}>\n          sign-up\n        </LoaderButton>\n      </Form>\n    </Container>\n    );\n  }\n\n  return (\n    <div className=\"Signup\">\n      {newUser === null ? renderForm() : renderConfirmationForm()}\n    </div>\n  );\n}\n","import React, { useEffect, useRef, useState } from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport Form from 'react-bootstrap/Form';\nimport Table from 'react-bootstrap/Table';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport Card from 'react-bootstrap/Card';\nimport CardDeck from 'react-bootstrap/CardDeck';\nimport Spinner from 'react-bootstrap/Spinner';\nimport LoaderButton from '../components/LoaderButton';\nimport 'react-dates/initialize';\nimport { SingleDatePicker } from 'react-dates';\nimport 'react-dates/lib/css/_datepicker.css';\nimport moment from 'moment';\nimport { API, Auth } from 'aws-amplify';\nimport SimpleReactValidator from 'simple-react-validator';\nimport { useStripe, useElements, CardElement } from '@stripe/react-stripe-js';\n\n\nconst providerId = 'e986bca0-ff41-11ea-8196-af25e422bd08';\nconst facilityId = 'ff1694c0-ffa8-11ea-bfbc-4f270cb046f3';\n\n\nexport default function CreateBooking() {\n  const stripe = useStripe();\n  const elements = useElements();\n\n  const [user, setUser] = useState(undefined);\n  const maxTenancyInMonths = 36;\n  const units = {\n    'enclosed lockers': {\n      'baby bear (tiny)': {\n        price: {\n          yearly: {\n            bgn: 165,\n            stripe: {\n              priceId: 'price_1HUQPyLWkJbcmCTlhflpj73Z',\n              defaultTaxRates: [\n                'txr_1HVCMiLWkJbcmCTlGDokfTh3'\n              ]\n            }\n          },\n          quarterly: {\n            bgn: 75\n          },\n          monthly: {\n            bgn: 30,\n            stripe: {\n              priceId: 'price_1HUQJuLWkJbcmCTl107bvSmv',\n              defaultTaxRates: [\n                'txr_1HVCMiLWkJbcmCTlGDokfTh3'\n              ]\n            }\n          },\n          corona: {\n            bgn: 15,\n            stripe: {\n              priceId: 'price_1HUQJuLWkJbcmCTl45YXBzw8',\n              defaultTaxRates: [\n                'txr_1HVCMiLWkJbcmCTlGDokfTh3'\n              ]\n            }\n          }\n        },\n        available: {\n          from: new Date('2021-01-01'),\n          units: 0\n        },\n        dimensions: {\n          width: 50,\n          height: 200,\n          depth: 50\n        },\n        door: {\n          width: 50,\n          height: 200\n        },\n        description: 'a safe place for snowboards, skis, winter gear and boots',\n        image: '/locker-50w-230h-50d.png'\n      },\n      'mama bear (small)': {\n        price: {\n          yearly: {\n            bgn: 550,\n            stripe: {\n              priceId: 'price_1HUQPyLWkJbcmCTlHMdvpMU3',\n              defaultTaxRates: [\n                'txr_1HVCMiLWkJbcmCTlGDokfTh3'\n              ]\n            }\n          },\n          quarterly: {\n            bgn: 250\n          },\n          monthly: {\n            bgn: 100,\n            stripe: {\n              priceId: 'price_1HP5T4LWkJbcmCTlj7FbHXD0',\n              defaultTaxRates: [\n                'txr_1HVCMiLWkJbcmCTlGDokfTh3'\n              ]\n            }\n          },\n          corona: {\n            bgn: 50,\n            stripe: {\n              priceId: 'price_1HP5T4LWkJbcmCTlxM869xeq',\n              defaultTaxRates: [\n                'txr_1HVCMiLWkJbcmCTlGDokfTh3'\n              ]\n            }\n          }\n        },\n        available: {\n          from: new Date('2020-08-01'),\n          units: 3\n        },\n        dimensions: {\n          width: 100,\n          height: 230,\n          depth: 250\n        },\n        door: {\n          width: 100,\n          height: 200\n        },\n        description: 'space for bicycles, boxes and luggage',\n        image: '/locker-100w-230h-250d.png'\n      },\n      'mama bear (medium)': {\n        price: {\n          yearly: {\n            bgn: 1100,\n            stripe: {\n              priceId: 'price_1HUQPyLWkJbcmCTlZkpN5H4E',\n              defaultTaxRates: [\n                'txr_1HVCMiLWkJbcmCTlGDokfTh3'\n              ]\n            }\n          },\n          quarterly: {\n            bgn: 500\n          },\n          monthly: {\n            bgn: 200,\n            stripe: {\n              priceId: 'price_1HP5T4LWkJbcmCTlHGJfSw7g',\n              defaultTaxRates: [\n                'txr_1HVCMiLWkJbcmCTlGDokfTh3'\n              ]\n            }\n          },\n          corona: {\n            bgn: 100,\n            stripe: {\n              priceId: 'price_1HP5T4LWkJbcmCTljPMcyGlp',\n              defaultTaxRates: [\n                'txr_1HVCMiLWkJbcmCTlGDokfTh3'\n              ]\n            }\n          }\n        },\n        available: {\n          from: new Date('2020-08-01'),\n          units: 3\n        },\n        dimensions: {\n          width: 200,\n          height: 230,\n          depth: 250\n        },\n        door: {\n          width: 200,\n          height: 200\n        },\n        description: 'space for bicycles, boxes, small furniture and luggage',\n        image: '/locker-200w-230h-250d.png'\n      },\n      'papa bear (large)': {\n        price: {\n          yearly: {\n            bgn: 1320,\n            stripe: {\n              priceId: 'price_1HUQPyLWkJbcmCTlVOqTLc7P',\n              defaultTaxRates: [\n                'txr_1HVCMiLWkJbcmCTlGDokfTh3'\n              ]\n            }\n          },\n          quarterly: {\n            bgn: 600\n          },\n          monthly: {\n            bgn: 240,\n            stripe: {\n              priceId: 'price_1HPR7rLWkJbcmCTlJSPWVGa9',\n              defaultTaxRates: [\n                'txr_1HVCMiLWkJbcmCTlGDokfTh3'\n              ]\n            }\n          },\n          corona: {\n            bgn: 120,\n            stripe: {\n              priceId: 'price_1HPR7rLWkJbcmCTljV8rxWUo',\n              defaultTaxRates: [\n                'txr_1HVCMiLWkJbcmCTlGDokfTh3'\n              ]\n            }\n          }\n        },\n        available: {\n          from: new Date('2020-08-01'),\n          units: 2\n        },\n        dimensions: {\n          width: 270,\n          height: 230,\n          depth: 250\n        },\n        door: {\n          width: 140,\n          height: 200\n        },\n        description: 'our largest locker. big enough for a quad bike and tool shop',\n        image: '/locker-270w-230h-250d.png'\n      }\n    },\n    'bike racks & parking': {\n      'bicycle': {\n        price: {\n          yearly: {\n            bgn: 110,\n            stripe: {\n              priceId: 'price_1HUQPyLWkJbcmCTlvtUKumM4',\n              defaultTaxRates: [\n                'txr_1HVCMiLWkJbcmCTlGDokfTh3'\n              ]\n            }\n          },\n          quarterly: {\n            bgn: 51\n          },\n          monthly: {\n            bgn: 20,\n            stripe: {\n              priceId: 'price_1HP5TILWkJbcmCTlcVsJBVg5',\n              defaultTaxRates: [\n                'txr_1HVCMiLWkJbcmCTlGDokfTh3'\n              ]\n            }\n          },\n          corona: {\n            bgn: 10,\n            stripe: {\n              priceId: 'price_1HP5KKLWkJbcmCTlkSlNJzNb',\n              defaultTaxRates: [\n                'txr_1HVCMiLWkJbcmCTlGDokfTh3'\n              ]\n            }\n          }\n        },\n        available: {\n          from: new Date('2021-03-01'),\n          units: 0\n        },\n        description: 'dry storage on the rack for bikes with easy access to the pirin national park',\n        image: '/bike-small.png'\n      },\n      'motorcycle (small)': {\n        price: {\n          yearly: {\n            bgn: 330,\n            stripe: {\n              priceId: 'price_1HUQPyLWkJbcmCTlijwpfJHk',\n              defaultTaxRates: [\n                'txr_1HVCMiLWkJbcmCTlGDokfTh3'\n              ]\n            }\n          },\n          quarterly: {\n            bgn: 150\n          },\n          monthly: {\n            bgn: 60,\n            stripe: {\n              priceId: 'price_1HP5KKLWkJbcmCTlPQWNBBzV',\n              defaultTaxRates: [\n                'txr_1HVCMiLWkJbcmCTlGDokfTh3'\n              ]\n            }\n          },\n          corona: {\n            bgn: 30,\n            stripe: {\n              priceId: 'price_1HP5KKLWkJbcmCTl9BZlKKi8',\n              defaultTaxRates: [\n                'txr_1HVCMiLWkJbcmCTlGDokfTh3'\n              ]\n            }\n          }\n        },\n        available: {\n          from: new Date('2020-08-01'),\n          units: 4\n        },\n        description: 'indoor parking for small to medium scooters and enduro bikes up to 500cc',\n        image: '/bike-medium.png'\n      },\n      'motorcycle (large)': {\n        price: {\n          yearly: {\n            bgn: 440,\n            stripe: {\n              priceId: 'price_1HUQPyLWkJbcmCTlzMiJvvBa',\n              defaultTaxRates: [\n                'txr_1HVCMiLWkJbcmCTlGDokfTh3'\n              ]\n            }\n          },\n          quarterly: {\n            bgn: 200\n          },\n          monthly: {\n            bgn: 80,\n            stripe: {\n              priceId: 'price_1HP5KKLWkJbcmCTliyir2cGp',\n              defaultTaxRates: [\n                'txr_1HVCMiLWkJbcmCTlGDokfTh3'\n              ]\n            }\n          },\n          corona: {\n            bgn: 40,\n            stripe: {\n              priceId: 'price_1HP5KKLWkJbcmCTlsrJrz7hh',\n              defaultTaxRates: [\n                'txr_1HVCMiLWkJbcmCTlGDokfTh3'\n              ]\n            }\n          }\n        },\n        available: {\n          from: new Date('2020-08-01'),\n          units: 4\n        },\n        description: 'indoor parking for large motorcycles',\n        image: '/bike-large.png'\n      }\n    }\n  };\n  let startDate = new Date();\n  startDate.setHours(14,0,0,0);\n  startDate.setDate(startDate.getDate() + 1);\n  let endDate = new Date();\n  endDate.setHours(12,0,0,0);\n  endDate.setMonth(startDate.getMonth() + 12);\n  const [fields, handleFieldChange] = useState({\n    name: '',\n    vat_number: '',\n    email: '',\n    telephone: '',\n    address: '',\n    from: startDate.toISOString(),\n    months: 12,\n    to: endDate.toISOString(),\n    unit: `${Object.keys(units)[0]}/${Object.keys(units[Object.keys(units)[0]]).find(u => units[Object.keys(units)[0]][u].available.units > 0)}`,\n    paymentFrequency: 'corona',\n    coupon: '',\n    termsAccepted: false\n  });\n  const [isLoading, setIsLoading] = useState(false);\n  const [isVatNumberLookupRunning, setIsVatNumberLookupRunning] = useState(false);\n  const [touched, setTouched] = useState({});\n  const [focusedDate, setFocusedDate] = useState(false);\n  const [showVatInput, setShowVatInput] = useState(false);\n  const [validationErrors, setValidationErrors] = useState({});\n  const [validationSuccesses, setValidationSuccesses] = useState({});\n  const [vatEntity, setVatEntity] = useState({countryCode: 'BG', vatNumber: '', name: '', address: ''});\n  const useValidator = (customMessage = {}, customValidator = {}): [SimpleReactValidator/*, Function*/] => {\n    const validatorRef = useRef(new SimpleReactValidator({\n      messages: customMessage, \n      validators: customValidator,\n    }));\n    return [validatorRef];\n  };\n  const [validator] = useValidator();\n\n  const [coupon, setCoupon] = useState({ code: undefined, valid: undefined, invalid: undefined, message: undefined, discount: { percent: 0, amount: 0 } });\n  useEffect(() => {\n    if (!!fields.coupon && fields.coupon.length > 9) {\n      API.post('limelockers', '/validation/coupon', { body: { coupon: fields.coupon } })\n        .then(response => {\n          console.log(response);\n          if (!!response.error && (response.error.code === 'resource_missing')) {\n            setCoupon(c => ({ ...c, invalid: true, valid: false, message: `Unrecognised discount code: ${fields.coupon}` }));\n          } else if (!!response.coupon && response.coupon.valid) {\n            setCoupon(c => ({\n              ...c,\n              discount: {\n                percent: response.coupon.percent_off || 0,\n                amount: response.coupon.amount_off || 0\n              },\n              invalid: false,\n              valid: true,\n              message: `Discount code applied: ${response.coupon.name}`\n            }));\n          }\n        })\n        .catch(console.log);\n    }\n  }, [fields.coupon]);\n\n  const blankPrice = {\n    id: undefined,\n    currency: 'bgn',\n    amount: {\n      base: 0,\n      subtotal: 0,\n      total: 0\n    },\n    discount: {\n      percent: 0,\n      amount: 0\n    },\n    vat: {\n      percent: 20,\n      amount: 0\n    }\n  };\n  const [price, setPrice] = useState(blankPrice);\n  const vatPercent = 20;\n  const currency = 'bgn';\n  const currencySymbol = {\n    bgn: 'лв'\n  };\n  useEffect(() => {\n    const unit = getUnit();\n    const base = unit.price[fields.paymentFrequency][currency];\n    const discount = (!!coupon.discount.percent)\n      ? {\n          percent: coupon.discount.percent,\n          amount: (base * (coupon.discount.percent / 100))\n        }\n      : coupon.discount;\n    const vat = (unit.price[fields.paymentFrequency].stripe.defaultTaxRates.length)\n      ? {\n          percent: vatPercent,\n          amount: ((base - discount.amount) * (vatPercent / 100))\n        }\n      : {\n          percent: 0,\n          amount: 0\n        };\n    const subtotal = (base - discount.amount);\n    const total = (subtotal + vat.amount);\n    setPrice({\n      id: unit.price[fields.paymentFrequency].stripe.priceId,\n      currency: currency,\n      amount: {\n        base,\n        subtotal,\n        total\n      },\n      discount,\n      vat\n    });\n  }, [coupon.discount, fields.paymentFrequency, fields.unit]);\n\n  useEffect(() => {\n    if (!user) {\n      Auth.currentAuthenticatedUser()\n        .then(u => {\n          setUser(u);\n        })\n        .catch(console.log);\n    }\n  });\n  useEffect(() => {\n    if (user && user.attributes) {\n      handleFieldChange(f => ({\n        ...f,\n        name: (user.attributes.name) ? user.attributes.name : f.name,\n        email: (user.attributes.email) ? user.attributes.name : f.email,\n        address: (user.attributes.address) ? user.attributes.address : f.address,\n        telephone: (user.attributes.phone_number) ? user.attributes.phone_number : f.telephone,\n        vat_number: ('custom:vat_number' in user.attributes) ? user.attributes['custom:vat_number'] : f.vat_number,\n      }));\n      if ('custom:vat_number' in user.attributes) {\n        // todo: rerun vat vies validation here.\n        setShowVatInput(true);\n        setVatEntity(e => ({\n          countryCode: user.attributes['custom:vat_number'].slice(0, 2),\n          vatNumber: user.attributes['custom:vat_number'].slice(2),\n          valid: true,\n          name: user.attributes.name,\n          address: user.attributes.address\n        }));\n      }\n    }\n  }, [user]);\n  useEffect(() => {\n    setTouched(t => ({\n      ...t,\n      vat_number: true,\n      name: true,\n      address: true\n    }));\n  }, [vatEntity]);\n\n  function validateForm() {\n    return (\n      (Object.keys(validationErrors).length === 0)\n      && (validator.current.allValid())\n      && (stripe && elements)\n      && fields.termsAccepted\n    );\n  }\n\n  function getUnit() {\n    let [category, unit] = fields.unit.split('/');\n    return units[category][unit];\n  }\n\n  function handleTabSelect(category) {\n    if (!fields.unit.startsWith(category)) {\n      handleCardSelect(category, Object.keys(units[category]).find(u => units[category][u].available.units > 0));\n    }\n  }\n\n  function handleCardSelect(category, unit) {\n    if ((fields.unit !== `${category}/${unit}`) && (units[category][unit].available.units > 0)) {\n      handleFieldChange(f => ({...f, unit: `${category}/${unit}`}));\n    }\n  }\n\n  async function handleVatNumberChange(event) {\n    //let tidiedVatNumber = (event.target.value || '').trim().replace(/ /g, '').toUpperCase();\n    const { id, value } = event.target;\n    const countryCode = (id === 'countryCode') ? value : vatEntity.countryCode;\n    const vatNumber = (id === 'vatNumber') ? value : vatEntity.vatNumber;\n    setVatEntity({ countryCode, vatNumber });\n    const vatNumberFormatValidators = {\n      AT: /^ATU[A-Z0-9]{9,9}$/,\n      BE: /^BE[0-9]{10,10}$/,\n      BG: /^BG[0-9]{9,10}$/,\n      CY: /^CY[A-Z0-9]{9,9}$/,\n      CZ: /^CZ[0-9]{8,10}$/,\n      DE: /^DE[0-9]{9,9}$/,\n      DK: /^DK[0-9]{8,8}$/,\n      EE: /^EE[0-9]{9,9}$/,\n      EL: /^EL[0-9]{9,9}$/,\n      ES: /^ES[A-Z0-9]{9,9}$/,\n      FI: /^FI[0-9]{8,8}$/,\n      FR: /^FR[A-Z0-9]{2,2}[0-9]{9,9}$/,\n      GB: /^GB[0-9]{9,9}$|^GB[0-9]{12,12}$|^GBGD[0-9]{3,3}$|^GBHA[0-9]{3,3}$/,\n      HU: /^HU[0-9]{8,8}$/,\n      IE: /^IE[A-Z0-9]{8,8}$/,\n      IT: /^IT[0-9]{11,11}$/,\n      LT: /^LT[0-9]{9,9}$|^LT[0-9]{12,12}$/,\n      LU: /^LU[0-9]{8,8}$/,\n      LV: /^LV[0-9]{11,11}$/,\n      MT: /^MT[0-9]{8,8}$/,\n      NL: /^NL[A-Z0-9]{12,12}$/,\n      PL: /^PL[0-9]{10,10}$/,\n      PT: /^PT[0-9]{9,9}$/,\n      SE: /^SE[0-9]{12,12}$/,\n      SI: /^SI[0-9]{8,8}$/,\n      SK: /^SK[0-9]{10,10}$/\n    };\n    if (`${countryCode}${vatNumber}`.match(vatNumberFormatValidators[countryCode])) {\n      setValidationSuccesses({\n        ...validationSuccesses,\n        vat_number: `${countryCode}${vatNumber} matches a known ${countryCode} VAT number format.`\n      });\n      if ('vat_number' in validationErrors) {\n        let {vat_number, ...validationErrorsWithVatNumberErrorsRemoved} = validationErrors;\n        setValidationErrors(validationErrorsWithVatNumberErrorsRemoved);\n      }\n      setIsVatNumberLookupRunning(true);\n      API.post('limelockers', '/validation/vat', { body: { countryCode, vatNumber } })\n        .then(response => {\n          setIsVatNumberLookupRunning(false);\n          if (response.status && response.entity && response.entity.valid) {\n            setValidationSuccesses({\n              ...validationSuccesses,\n              vat_number: `${countryCode}${vatNumber} is registered with VIES.`\n            });\n            if ('vat_number' in validationErrors) {\n              let {vat_number, ...validationErrorsWithVatNumberErrorsRemoved} = validationErrors;\n              setValidationErrors(validationErrorsWithVatNumberErrorsRemoved);\n            }\n            setVatEntity({\n              valid: response.entity.valid,\n              name: response.entity.name,\n              address: response.entity.address,\n              countryCode: response.entity.countryCode,\n              vatNumber: response.entity.vatNumber\n            });\n          } else if (response.entity && !response.entity.valid) {\n            setValidationErrors({\n              ...validationErrors,\n              vat_number: `${countryCode}${vatNumber} is not registered with VIES.`\n            });\n            if ('vat_number' in validationSuccesses) {\n              let {vat_number, ...validationSuccessesWithVatNumberSuccessesRemoved} = validationSuccesses;\n              setValidationSuccesses(validationSuccessesWithVatNumberSuccessesRemoved);\n            }\n          }\n          else {\n            console.log((response.error) ? response.error : response);\n          }\n        })\n        .catch (error => {\n          console.log(error);\n        });\n    } else {\n      setValidationErrors({\n        ...validationErrors,\n        vat_number: `${countryCode}${vatNumber} does not match a known ${countryCode} VAT number format.`\n      });\n      if ('vat_number' in validationSuccesses) {\n        let {vat_number, ...validationSuccessesWithVatNumberSuccessesRemoved} = validationSuccesses;\n        setValidationSuccesses(validationSuccessesWithVatNumberSuccessesRemoved);\n      }\n    }\n  }\n\n  function createSubscription({ cancelAt, customerId, paymentMethodId, reservation, defaultTaxRates, coupon }) {\n    const { priceId, unitId, from, to } = reservation;\n    const items = [\n      {\n        priceId,\n        unitId\n      }\n    ];\n    return (\n      API.put('limelockers', `/${providerId}/${facilityId}/subscription`, { body: { cancelAt, customerId, items, paymentMethodId, reservation: { from, to }, defaultTaxRates, coupon } })\n        // If the card is declined, display an error to the user.\n        .then((response) => {\n          if (!response.status && response.error) {\n            throw response.error; // error associating payment method with customer\n          }\n          console.log(`[API.put (/${providerId}/${facilityId}/subscription) response]`, response);\n          return response;\n        })\n        .then((response) => {\n          return {\n            paymentMethodId,\n            reservation,\n            defaultTaxRates,\n            subscription: response.subscription\n          };\n        })\n        // Some payment methods require a customer to be on session\n        // to complete the payment process. Check the status of the\n        // payment intent to handle these actions.\n        .then(handlePaymentThatRequiresCustomerAction)\n        // If attaching this card to a Customer object succeeds,\n        // but attempts to charge the customer fail, you\n        // get a requires_payment_method error.\n        .then(handleRequiresPaymentMethod)\n        // No more actions required. Provision your service for the user.\n        .then(onSubscriptionComplete)\n        .catch((error) => {\n          // An error has happened. Display the failure to the user here.\n          // We utilize the HTML element we created.\n\n          // todo: implement error ui\n          //showCardError(error);\n          console.log(`[API.put (/${providerId}/${facilityId}/subscription) error]`, error)\n        })\n    );\n  }\n\n  function handlePaymentThatRequiresCustomerAction({ subscription, invoice, reservation, defaultTaxRates, paymentMethodId, isRetry }) {\n    if (subscription && subscription.status === 'active') {\n      // subscription is active, no customer actions required.\n      return {\n        subscription,\n        reservation,\n        defaultTaxRates,\n        paymentMethodId\n      };\n    }\n\n    // if it's a first payment attempt, the payment intent is on the subscription latest invoice.\n    // if it's a retry, the payment intent will be on the invoice itself.\n    let paymentIntent = invoice\n      ? invoice.payment_intent\n      : subscription.latest_invoice.payment_intent;\n\n    if (\n      paymentIntent.status === 'requires_action' ||\n      (isRetry === true && paymentIntent.status === 'requires_payment_method')\n    ) {\n      return stripe\n        .confirmCardPayment(paymentIntent.client_secret, { payment_method: paymentMethodId })\n        .then((result) => {\n          if (result.error) {\n            // start code flow to handle updating the payment details.\n            // display error message in your UI.\n            // the card was declined (i.e. insufficient funds, card has expired, etc).\n            throw result;\n          } else {\n            if (result.paymentIntent.status === 'succeeded') {\n              // show a success message to customer.\n              // there's a risk of the customer closing the window before the callback. watch webhook endpoints to mitigate.\n              return {\n                subscription,\n                reservation,\n                defaultTaxRates,\n                paymentMethodId,\n                invoice\n              };\n            }\n          }\n        })\n        .catch((error) => {\n          \n          // todo: implement error ui\n          // displayError(error);\n          console.log(error);\n        });\n    } else {\n      // no customer action needed.\n      return {\n        subscription,\n        reservation,\n        defaultTaxRates,\n        paymentMethodId\n      };\n    }\n  }\n\n  function onSubscriptionComplete(result) {\n    // Payment was successful.\n    if (result.subscription.status === 'active') {\n      // Change your UI to show a success message to your customer.\n      // Call your backend to grant access to your service based on\n      // `result.subscription.items.data[0].price.product` the customer subscribed to.\n    }\n  }\n\n  function handleRequiresPaymentMethod({ subscription, paymentMethodId, reservation, defaultTaxRates }) {\n    if (subscription.status === 'active') {\n      // subscription is active, no customer actions required.\n      return { subscription, paymentMethodId, reservation, defaultTaxRates };\n    } else if (\n      subscription.latest_invoice.payment_intent.status ===\n      'requires_payment_method'\n    ) {\n      // Using localStorage to manage the state of the retry here,\n      // feel free to replace with what you prefer.\n      // Store the latest invoice ID and status.\n      localStorage.setItem('latestInvoiceId', subscription.latest_invoice.id);\n      localStorage.setItem(\n        'latestInvoicePaymentIntentStatus',\n        subscription.latest_invoice.payment_intent.status\n      );\n      throw { error: { message: 'Your card was declined.' } };\n    } else {\n      return { subscription, paymentMethodId, reservation, defaultTaxRates };\n    }\n  }\n\n  function retryInvoiceWithNewPaymentMethod({ customerId, invoiceId, paymentMethodId }) {\n    return (\n      API.post('limelockers', `/${providerId}/${facilityId}/invoice`, { body: { customerId, invoiceId, paymentMethodId } })\n        // If the card is declined, display an error to the user.\n        .then((result) => {\n          if (result.error) {\n            // The card had an error when trying to attach it to a customer.\n            throw result;\n          }\n          return result;\n        })\n        // Normalize the result to contain the object returned by Stripe.\n        // Add the additional details we need.\n        .then((result) => {\n          return {\n            // Use the Stripe 'object' property on the\n            // returned result to understand what object is returned.\n            invoice: result,\n            paymentMethodId: paymentMethodId,\n            isRetry: true,\n          };\n        })\n        // Some payment methods require a customer to be on session\n        // to complete the payment process. Check the status of the\n        // payment intent to handle these actions.\n        .then(handlePaymentThatRequiresCustomerAction)\n        // No more actions required. Provision your service for the user.\n        .then(onSubscriptionComplete)\n        .catch((error) => {\n          // An error has happened. Display the failure to the user here.\n          // We utilize the HTML element we created.\n\n          // todo: implement error ui\n          // displayError(error);\n          console.log(error);\n        })\n    );\n  }\n\n  function parseStripeAddress(countryCode, viesAddress) {\n    switch (countryCode) {\n      case 'BG':\n        return {\n          line1: viesAddress.match(/^(.*)\\sобл\\./i)[1],\n          city: viesAddress.match(/гр\\.(.*)\\s[0-9]+$/i)[1],\n          state: viesAddress.match(/обл\\.(.*),/i)[1],\n          postal_code: viesAddress.match(/\\s([0-9]*)$/i)[1],\n          country: countryCode\n        };\n      default:\n        return {\n          line1: viesAddress,\n          country: countryCode\n        };\n    }\n  }\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n    setIsLoading(true);\n\n    // associate name, address, telephone, vat number with cognito user\n    Auth.currentAuthenticatedUser().then(async(user) => {\n      let { attributes } = user;\n      if (!('custom:stripe_customer_id' in attributes)) {\n        // todo: check for an existing customer, using email address\n        const createCustomerResponse = await API.put('limelockers', `/${providerId}/${facilityId}/customer`, { body: { email: attributes.email } });\n        if (createCustomerResponse.status && createCustomerResponse.customer && createCustomerResponse.customer.id) {\n          await Auth.updateUserAttributes(user, { 'custom:stripe_customer_id': createCustomerResponse.customer.id });\n          user.attributes['custom:stripe_customer_id'] = createCustomerResponse.customer.id;\n        } else if (createCustomerResponse.error) {\n          console.log(createCustomerResponse.error);\n        }\n      }\n      Auth.updateUserAttributes(user,\n        {\n          name: (vatEntity.name || fields.name),\n          phone_number: fields.telephone,\n          address: (vatEntity.address || fields.address),\n          'custom:vat_number': (vatEntity.valid) ? `${vatEntity.countryCode}${vatEntity.vatNumber}` : null\n        })\n        .then(response => console.log('[Auth.updateUserAttributes response]', response))\n        .catch(error => console.log('[Auth.updateUserAttributes error]', error));\n      /*\n      todo:\n      - generate invoice\n      - create stripe subscription\n      - trigger stripe payment method collection\n      - confirm booking\n        - show confirmation\n        - send email confirmation\n      */\n\n      // associate name, address, telephone, vat number with stripe customer\n      API.post('limelockers', `/${providerId}/${facilityId}/customer`,\n        {\n          body: {\n            customerId: user.attributes['custom:stripe_customer_id'],\n            ...((vatEntity.valid && vatEntity.name) || fields.name) && { name: (vatEntity.name || fields.name) },\n            ...((vatEntity.valid && vatEntity.address) || fields.address) && { address: parseStripeAddress(vatEntity.countryCode, vatEntity.address) },\n            ...(fields.telephone) && { phone: fields.telephone },\n            ...(vatEntity.valid) && { taxId: { type: 'eu_vat', value: `${vatEntity.countryCode}${vatEntity.vatNumber}` } }\n          }\n        })\n        .then(response => {\n          console.log(`[API.post (/${providerId}/${facilityId}/customer) response]`, response);\n          if (!response.status || !!response.error) {\n            console.log(`[user]`, user);\n          }\n        })\n        .catch(error => console.log(`[API.post (/${providerId}/${facilityId}/customer) error]`, error));\n\n      // begin stripe subscription specific processing\n      if (!stripe || !elements) {\n        return;\n      }\n      const cardElement = elements.getElement(CardElement);\n      const latestInvoicePaymentIntentStatus = localStorage.getItem(\n        'latestInvoicePaymentIntentStatus'\n      );\n      const { error, paymentMethod } = await stripe.createPaymentMethod({\n        type: 'card',\n        card: cardElement,\n      });\n      if (error) {\n        console.log('[stripe.createPaymentMethod error]', error);\n        switch (error.type) {\n          case 'validation_error':\n            if ('card' in validationSuccesses) {\n              let {card, ...validationSuccessesWithCardSuccessesRemoved} = validationSuccesses;\n              setValidationSuccesses(validationSuccessesWithCardSuccessesRemoved);\n            }\n            setValidationErrors({\n              ...validationErrors,\n              card: error.message\n            });\n            setIsLoading(false);\n            break;\n          default:\n            break;\n        }\n      } else {\n        console.log('[stripe.PaymentMethod created]', paymentMethod);\n\n        setValidationSuccesses({ ...validationSuccesses, card: true });\n        if ('card' in validationErrors) {\n          let {card, ...validationErrorsWithCardErrorsRemoved} = validationErrors;\n          setValidationErrors(validationErrorsWithCardErrorsRemoved);\n        }\n\n        const paymentMethodId = paymentMethod.id;\n        const customerId = user.attributes['custom:stripe_customer_id'];\n        const defaultTaxRates = getUnit().price[fields.paymentFrequency].stripe.defaultTaxRates;\n        const cancelAt = moment(fields.to).format('X');\n        const couponCode = (coupon.valid) ? coupon.code : undefined;\n        const reservation = {\n          priceId: getUnit().price[fields.paymentFrequency].stripe.priceId,\n          unitId: '8e908e30-0792-11eb-a373-e5eab6bc390e',\n          from: moment(fields.from).format(),\n          to: moment(fields.to).format()\n        };\n        if (latestInvoicePaymentIntentStatus === 'requires_payment_method') {\n          // Update the payment method and retry invoice payment\n          const invoiceId = localStorage.getItem('latestInvoiceId');\n          retryInvoiceWithNewPaymentMethod({ customerId, invoiceId, paymentMethodId });\n        } else {\n          // Create the subscription\n          createSubscription({ cancelAt, customerId, paymentMethodId, reservation, defaultTaxRates, coupon: couponCode })\n            .then(response => {\n              setIsLoading(false);\n              //response.subscription.id\n            })\n            .catch(error => console.log('[createSubscription error]', error));\n        }\n      }\n      // end stripe subscription specific processing\n\n    })\n    .catch(error => console.log('[Auth.currentAuthenticatedUser error]', error));\n  }\n\n  return (\n    <>\n      <Container id=\"book-form\">\n        <Form onSubmit={handleSubmit} className=\"clearfix\" noValidate>\n          <Row>\n            <Col>\n              <Form.Group>\n                <Form.Check\n                  type=\"checkbox\"\n                  label=\"Do you require a VAT invoice?\"\n                  checked={showVatInput}\n                  onChange={() => {setShowVatInput(!showVatInput)}} />\n              </Form.Group>\n              {\n                showVatInput\n                  ? (\n                      <>\n                        <Form.Label>VAT Number:</Form.Label>\n                        <Form.Group className=\"form-inline\">\n                          <Form.Control\n                            style={{ marginRight: '10px' }}\n                            id=\"countryCode\"\n                            as=\"select\"\n                            value={vatEntity.countryCode}\n                            onChange={handleVatNumberChange}>\n                            {\n                              ['AT', 'BE', 'BG', 'CY', 'CZ', 'DE', 'DK', 'EE', 'EL',  'ES', 'FI', 'FR', 'GB', 'HU', 'IE', 'IT', 'LT', 'LU', 'LV', 'MT', 'NL', 'PL', 'PT', 'SE', 'SI', 'SK'].map(countryCode => (\n                                <option key={countryCode}>\n                                  {countryCode}\n                                </option>\n                              ))\n                            }\n                          </Form.Control>\n                          <Form.Control\n                            style={{ marginRight: '10px' }}\n                            id=\"vatNumber\"\n                            type=\"text\"\n                            placeholder=\"9999999\"\n                            value={vatEntity.vatNumber}\n                            onChange={handleVatNumberChange}\n                            isValid={vatEntity.valid || !showVatInput}\n                            isInvalid={((!isVatNumberLookupRunning) && ('vat_number' in validationErrors))} />\n                          {\n                            isVatNumberLookupRunning\n                            ? <Spinner style={{ marginLeft: '10px' }} animation=\"border\" size=\"sm\" />\n                            : null\n                          }\n                          <Form.Text className=\"text-muted\">\n                            VAT numbers are validated with the <a href=\"https://ec.europa.eu/taxation_customs/vies\">European Commission VIES VAT number validator</a>. On verification, your invoice will be addressed to the company name and address registered with VIES.\n                          </Form.Text>\n                          <Form.Text style={{color: 'rgb(123, 179, 44)'}}>\n                            {validationSuccesses.vat_number}\n                          </Form.Text>\n                          <Form.Text className=\"text-danger\">\n                            {validationErrors.vat_number}\n                          </Form.Text>\n                        </Form.Group>\n                      </>\n                    )\n                  : null\n              }\n              <Form.Group controlId=\"name\">\n                <Form.Label>Name:</Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"individual or company name\"\n                  value={(vatEntity.name || fields.name)}\n                  isValid={validator.current.fieldValid('name')}\n                  isInvalid={(('name' in touched) && (!validator.current.fieldValid('name')))}\n                  onChange={e => { const {id, value} = e.target; handleFieldChange(f => ({...f, [id]: value})); setTouched({...touched, name: true}); validator.current.showMessageFor('name'); }}\n                  disabled={((vatEntity.name !== '') && (vatEntity.valid))}\n                />\n                <Form.Text className=\"text-muted\">\n                  This name will appear on your invoice. Use your own name or if your company will claim a VAT rebate, check the VAT invoice box above and we'll use the company name associated with your EU registered, VAT number.\n                </Form.Text>\n                <Form.Text>\n                  {\n                    ('name' in touched)\n                      ? validator.current.message(\n                          'name',\n                          (vatEntity.name || fields.name),\n                          'required',\n                          {\n                            className: 'text-danger',\n                            messages: {\n                              required: 'Please enter a name.'\n                            }\n                          }\n                        )\n                      : null\n                  }\n                </Form.Text>\n              </Form.Group>\n              <Form.Group controlId=\"telephone\">\n                <Form.Label>Telephone:</Form.Label>\n                <Form.Control\n                  type=\"phone\"\n                  placeholder=\"+359 555 123 456\"\n                  value={fields.telephone}\n                  isValid={validator.current.fieldValid('telephone')}\n                  isInvalid={(('telephone' in touched) && (!validator.current.fieldValid('telephone')))}\n                  onChange={e => { const {id, value} = e.target; handleFieldChange(f => ({...f, [id]: value})); setTouched({...touched, telephone: true}); validator.current.showMessageFor('telephone'); }}\n                />\n                <Form.Text className=\"text-muted\">\n                  This number will receive communications about your self-storage and related billing only.\n                </Form.Text>\n                <Form.Text>\n                  {\n                    ('telephone' in touched)\n                      ? validator.current.message(\n                          'telephone',\n                          fields.telephone,\n                          'required|phone',\n                          {\n                            className: 'text-danger',\n                            messages: {\n                              required: 'Please enter a telephone number.'\n                            }\n                          }\n                        )\n                      : null\n                  }\n                </Form.Text>\n              </Form.Group>\n              <Form.Group controlId=\"address\">\n                <Form.Label>Address</Form.Label>\n                <Form.Control\n                  as=\"textarea\"\n                  rows={3}\n                  value={(vatEntity.address || fields.address)}\n                  isValid={((vatEntity.valid || !showVatInput) && !!fields.address)}\n                  onChange={e => { const {id, value} = e.target; handleFieldChange(f => ({...f, [id]: value})); }}\n                  disabled={((vatEntity.address !== '') && (vatEntity.valid))}\n                />\n                <Form.Text className=\"text-muted\">\n                  This address will appear on invoices only. We do not send postal mail of any kind.\n                </Form.Text>\n              </Form.Group>\n            </Col>\n            <Col>\n              <Form.Group controlId=\"unit\">\n                <Form.Label>Unit Type:</Form.Label>\n                <ul>\n                  {\n                    Object.keys(units).map(category => (\n                      <li\n                        key={category}\n                        className={fields.unit.startsWith(category) ? '' : 'text-muted'}>\n                        <span>{category}:</span>\n                        {\n                          Object.keys(units[category]).map(size => (\n                            <Form.Check key={size}>\n                              <Form.Check.Input\n                                style={{cursor: 'pointer'}}\n                                type=\"radio\"\n                                disabled={(units[category][size].available.units === 0)}\n                                checked={fields.unit === `${category}/${size}`}\n                                onChange={() => {handleCardSelect(category, size);}} />\n                              <Form.Check.Label\n                                style={{ cursor: (units[category][size].available.units === 0) ? 'not-allowed' : 'pointer' }}\n                                className={(fields.unit === `${category}/${size}`) ? 'active' : 'text-muted'}\n                                onClick={() => {handleCardSelect(category, size);}}>\n                                {`${size}${(units[category][size].available.units === 0) ? ' - not available' : ''}`}\n                              </Form.Check.Label>\n                            </Form.Check>\n                          ))\n                        }\n                      </li>\n                    ))\n                  }\n                </ul>\n              </Form.Group>\n              <Form.Group>\n                <Row>\n                  <Col>\n                    <Form.Label>Start Date:</Form.Label>\n                    <br />\n                    <SingleDatePicker\n                      displayFormat=\"MMM DD YYYY\"\n                      date={moment(fields.from)}\n                      onDateChange={e => { handleFieldChange(f => ({ ...f, from: e.toISOString(), to: e.add(fields.months, 'M').toISOString() }));}}\n                      focused={focusedDate}\n                      onFocusChange={({ focused }) => setFocusedDate(focused)}\n                      id=\"from\"\n                    />\n                  </Col>\n                  <Col>\n                    <Form.Label>{(fields.paymentFrequency === 'yearly') ? 'Years' : 'Months'} Required:</Form.Label>\n                    <br />\n                    <Form.Control\n                      id=\"months\"\n                      type=\"number\"\n                      min={1}\n                      max={(fields.paymentFrequency === 'yearly') ? Math.floor(maxTenancyInMonths/12) : maxTenancyInMonths}\n                      value={(fields.paymentFrequency === 'yearly') ? Math.floor(fields.months/12) : fields.months}\n                      onChange={\n                        e => {\n                          const months = (fields.paymentFrequency === 'yearly') ? (Math.max(Math.min(parseInt(e.target.value), Math.floor(maxTenancyInMonths / 12)), 1) * 12) : Math.max(Math.min(parseInt(e.target.value), maxTenancyInMonths), 1);\n                          handleFieldChange(\n                            f => (\n                              {\n                                ...f,\n                                months,\n                                to: moment(fields.from).add(months, 'M').toISOString()\n                              }\n                            )\n                          );\n                        }\n                      }\n                    />\n                  </Col>\n                  <Col>\n                    <Form.Label>\n                      End Date:\n                    </Form.Label>\n                    <br />\n                    {Intl.DateTimeFormat(undefined, { year: 'numeric', month: 'short', day: 'numeric' }).format(new Date(fields.to))}\n                    {\n                      (fields.paymentFrequency === 'yearly')\n                        ? (\n                            <Form.Text className=\"active\">\n                              {`${Math.floor(fields.months / 12)} month${(Math.floor(fields.months / 12) > 1) ? 's' : ''} free!`}\n                            </Form.Text>\n                          )\n                        : null\n                    }\n                  </Col>\n                </Row>\n                <Form.Text className=\"text-muted\">\n                  Self-storage may be reserved for between 1 and {maxTenancyInMonths} months ({(Math.floor(maxTenancyInMonths / 12) * 13)} months for annual payment customers). Subject to availability, you may amend your booking to change to an earlier or later end date at any time.\n                </Form.Text>\n              </Form.Group>\n              <Form.Group controlId=\"coupon\">\n                <Form.Label>discount code:</Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  value={fields.coupon}\n                  isValid={!!coupon.valid}\n                  isInvalid={!!coupon.invalid}\n                  disabled={!!coupon.valid}\n                  onChange={\n                    e => {\n                      const {id, value} = e.target;\n                      handleFieldChange(f => ({...f, [id]: value}));\n                    }\n                  }\n                />\n                <Form.Text className={(!!coupon.message) ? ((!!coupon.invalid) ? 'text-danger' : 'text-success') : 'text-muted'}>\n                  {\n                    (!!coupon.message)\n                      ? coupon.message\n                      : 'If you have a discount code, enter it here.'\n                  }\n                </Form.Text>\n              </Form.Group>\n              <Form.Group>\n                <Form.Check>\n                  <Form.Check.Input\n                    style={{cursor: 'pointer'}}\n                    type=\"radio\"\n                    disabled={false}\n                    checked={fields.paymentFrequency !== 'yearly'}\n                    onChange={e => { handleFieldChange(f => ({ ...f, paymentFrequency: 'corona' })); }} />\n                  <Form.Check.Label\n                    style={{ cursor: (getUnit().available.units === 0) ? 'not-allowed' : 'pointer' }}\n                    className={(fields.paymentFrequency !== 'yearly') ? 'active' : 'text-muted'}\n                    onClick={e => { handleFieldChange(f => ({ ...f, paymentFrequency: 'corona' })); }}>\n                    monthly payment: <span>лв{Number.parseFloat(getUnit().price.corona.bgn * 1.2).toFixed(2)} bgn</span> per month\n                  </Form.Check.Label>\n                </Form.Check>\n                <Form.Check>\n                  <Form.Check.Input\n                    style={{cursor: 'pointer'}}\n                    type=\"radio\"\n                    disabled={false}\n                    checked={fields.paymentFrequency === 'yearly'}\n                    onChange={e => { handleFieldChange(f => ({ ...f, paymentFrequency: 'yearly' })); }} />\n                  <Form.Check.Label\n                    style={{ cursor: (getUnit().available.units === 0) ? 'not-allowed' : 'pointer' }}\n                    className={(fields.paymentFrequency === 'yearly') ? 'active' : 'text-muted'}\n                    onClick={e => { handleFieldChange(f => ({ ...f, paymentFrequency: 'yearly' })); }}>\n                    annual payment: <span>лв{Number.parseFloat(getUnit().price.yearly.bgn * 1.2).toFixed(2)} bgn</span> per year\n                  </Form.Check.Label>\n                </Form.Check>\n                <Form.Text className=\"text-muted\">\n                  Customers choosing the annual payment option will receive 12 months for the price of 11.\n                  <br />\n                  - A saving of <span>лв{Number.parseFloat(getUnit().price.corona.bgn * 1.2).toFixed(2)} bgn</span> per year.\n                </Form.Text>\n              </Form.Group>\n              <hr />\n              <Table size=\"sm\">\n                <thead>\n                  <tr>\n                    <th className=\"text-muted\">\n                      description\n                    </th>\n                    <th className=\"text-muted text-right\">\n                      qty\n                    </th>\n                    <th className=\"text-muted text-right\">\n                      unit price\n                    </th>\n                    <th className=\"text-muted text-right\">\n                      amount\n                    </th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr>\n                    <td colSpan=\"4\" className=\"text-muted\">\n                      {moment(fields.from).format('MMM D, YYYY')}\n                      &nbsp;-&nbsp;\n                      {moment(fields.from).add(1, (fields.paymentFrequency === 'yearly') ? 'Y' : 'M').format('MMM D, YYYY')}\n                    </td>\n                  </tr>\n                  <tr>\n                    <td>\n                      {fields.unit}\n                    </td>\n                    <td className=\"text-right\">\n                      1\n                    </td>\n                    <td className=\"text-right\">\n                      {currencySymbol[currency]}\n                      {Number.parseFloat(price.amount.base).toFixed(2)}\n                    </td>\n                    <td className=\"text-right\">\n                      {currencySymbol[currency]}\n                      {Number.parseFloat(price.amount.base).toFixed(2)}\n                    </td>\n                  </tr>\n                  {\n                    (price.discount.amount)\n                      ? (\n                          <tr>\n                            <td colSpan=\"3\" className=\"text-right\">\n                              discount ({price.discount.percent}%)\n                            </td>\n                            <td className=\"text-right\">\n                              {currencySymbol[currency]}\n                              {Number.parseFloat(price.discount.amount).toFixed(2)}\n                            </td>\n                          </tr>\n                        )\n                      : null\n                  }\n                  <tr>\n                    <td colSpan=\"3\" className=\"text-right\">\n                      subtotal\n                    </td>\n                    <td className=\"text-right\">\n                      {currencySymbol[currency]}\n                      {Number.parseFloat(price.amount.subtotal).toFixed(2)}\n                    </td>\n                  </tr>\n                  {\n                    (price.vat.amount)\n                      ? (\n                          <tr>\n                            <td colSpan=\"3\" className=\"text-muted text-right\">\n                              VAT - Bulgaria ({price.vat.percent}%)\n                            </td>\n                            <td className=\"text-right\">\n                              {currencySymbol[currency]}\n                              {Number.parseFloat(price.vat.amount).toFixed(2)}\n                            </td>\n                          </tr>\n                        )\n                      : null\n                  }\n                  <tr>\n                    <td colSpan=\"3\" className=\"text-right\">\n                      total\n                    </td>\n                    <td className=\"text-right\">\n                      {currencySymbol[currency]}\n                      {Number.parseFloat(price.amount.total).toFixed(2)}\n                    </td>\n                  </tr>\n                </tbody>\n              </Table>\n              <hr />\n              <Form.Group>\n                <Form.Label>Payment Card:</Form.Label>\n                <CardElement\n                  id=\"stripe-payment-method\"\n                  onChange={() => {\n                    if ('card' in validationErrors) {\n                      let {card, ...validationErrorsWithCardErrorsRemoved} = validationErrors;\n                      setValidationErrors(validationErrorsWithCardErrorsRemoved);\n                    }\n                  }}\n                  options={{\n                    style: {\n                      base: {\n                        color: 'rgb(48, 11, 11)',\n                        fontFamily: 'Roboto, sans-serif',\n                        fontSmoothing: 'antialiased',\n                        fontSize: \"16px\",\n                        '::placeholder': {\n                          color: '#aab7c4',\n                        },\n                        iconColor: '#ff3399',\n                      },\n                      invalid: {\n                        color: \"#fa755a\",\n                        iconColor: \"#fa755a\",\n                      },\n                    },\n                  }} />\n                <Form.Text className=\"text-danger\">\n                  {validationErrors.card}\n                </Form.Text>\n                <Form.Text className=\"text-muted\">\n                  You have requested use of self-storage space for a period of {(fields.months/((fields.paymentFrequency === 'yearly') ? 12 : 1))} {(fields.paymentFrequency === 'yearly') ? 'years' : 'months'}.<br />\n                  {\n                    ((fields.months/((fields.paymentFrequency === 'yearly') ? 12 : 1)) > 1)\n                      ? (\n                          <span>Subscription payments will be debited from your chosen payment method today and will repeat each {(fields.paymentFrequency === 'yearly') ? 'year' : 'month'}.</span>\n                        )\n                      : (\n                          <span>One payment will be debited from your chosen payment method, when you submit this form.</span>\n                        )\n                  }\n                </Form.Text>\n              </Form.Group>\n              <Form.Group>\n                <Form.Check\n                  type=\"checkbox\"\n                  label={(\n                    <span>I have read and accepted the <a href=\"/terms\" target=\"_blank\">terms and conditions</a>.</span>\n                    )}\n                  checked={fields.termsAccepted}\n                  onChange={() => {handleFieldChange(f => ({...f, termsAccepted: !f.termsAccepted}))}} />\n              </Form.Group>\n            </Col>\n          </Row>\n          <LoaderButton\n            type=\"submit\"\n            className=\"float-right\"\n            isLoading={isLoading}\n            disabled={!validateForm()}>\n            reserve and pay\n          </LoaderButton>\n        </Form>\n      </Container>\n      <Container id=\"book-units\">\n        <Tabs activeKey={fields.unit.split('/')[0]} onSelect={(category) => handleTabSelect(category)}>\n          {\n            Object.keys(units).map(category => (\n              <Tab key={category} eventKey={category} title={category}>\n                <CardDeck>\n                {\n                  Object.keys(units[category]).map(size => (\n                    <Card\n                      key={size}\n                      className={(fields.unit === `${category}/${size}`) ? 'active' : 'text-muted'}\n                      onClick={() => handleCardSelect(category,  size)}>\n                      <Card.Header\n                        style={{cursor: 'pointer'}}\n                        as=\"div\">\n                        <span className={`float-right availability-${(units[category][size].available.units < 1) ? 'zero' : (units[category][size].available.units < 3) ? 'low' : 'high'}`}>\n                          available: <strong>{units[category][size].available.units}</strong>\n                        </span>\n                      </Card.Header>\n                      <Card.Img\n                        variant=\"top\"\n                        src={units[category][size].image}\n                        className=\"mx-auto\"\n                        style={{cursor: 'pointer', width: '100%', opacity: (fields.unit === `${category}/${size}`) ? 1 : 0.2}} />\n                      <Card.Body>\n                        <Card.Title>\n                          {size}\n                        </Card.Title>\n                        <Card.Text>\n                          {units[category][size].description}\n                        </Card.Text>\n                        <Card.Text as=\"div\">\n                          <strong>unit price:</strong>\n                          <ul>\n                            <li className=\"price inactive\">лв{Number.parseFloat(units[category][size].price.monthly.bgn * 1.2).toFixed(2)} bgn monthly</li>\n                            <li className=\"price inactive\">лв{Number.parseFloat(units[category][size].price.quarterly.bgn * 1.2).toFixed(2)} bgn quarterly</li>\n                            <li className=\"price active\">\n                              <span>лв{Number.parseFloat(units[category][size].price.yearly.bgn * 1.2).toFixed(2)} bgn</span> yearly\n                            </li>\n                            <li className=\"price active\">\n                              <span>лв{Number.parseFloat(units[category][size].price.corona.bgn * 1.2).toFixed(2)} bgn</span> monthly\n                            </li>\n                          </ul>\n                        </Card.Text>\n                        {\n                          units[category][size].dimensions &&\n                          <Card.Text as=\"div\">\n                            <strong>locker size</strong>\n                            <ul>\n                              {\n                                Object.keys(units[category][size].dimensions).map(prop => (\n                                  <li key={prop}>{prop}: {units[category][size].dimensions[prop]/100} meter</li>\n                                ))\n                              }\n                              <li>\n                                area: {\n                                  ((units[category][size].dimensions.width / 100) * (units[category][size].dimensions.depth / 100)).toFixed(1)\n                                } m<sup>2</sup>\n                              </li>\n                              <li>\n                                volume: {\n                                  ((units[category][size].dimensions.width / 100) * (units[category][size].dimensions.height / 100) * (units[category][size].dimensions.depth / 100)).toFixed(1)\n                                } m<sup>3</sup>\n                              </li>\n                            </ul>\n                            <strong>door size</strong>\n                            <ul>\n                              {\n                                Object.keys(units[category][size].door).map(prop => (\n                                  <li key={prop}>{prop}: {units[category][size].door[prop]/100} meter</li>\n                                ))\n                              }\n                            </ul>\n                          </Card.Text>\n                        }\n                      </Card.Body>\n                    </Card>\n                  ))\n                }\n                </CardDeck>\n              </Tab>\n            ))\n          }\n        </Tabs>\n        <ul>\n          <li className=\"price active\">\n            <span>opening special</span>: 50% off monthly prices!\n          </li>\n          <li className=\"price active\">\n            <span>annual prepayment</span>: Twelve months for the price of eleven!\n          </li>\n        </ul>\n      </Container>\n    </>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport Container from 'react-bootstrap/Container';\nimport moment from 'moment';\nimport { API } from 'aws-amplify';\n\nconst providerId = 'e986bca0-ff41-11ea-8196-af25e422bd08';\nconst facilityId = 'ff1694c0-ffa8-11ea-bfbc-4f270cb046f3';\n\nexport default function BookingList() {\n  const [subscriptions, setSubscriptions] = useState(undefined);\n\n  useEffect(() => {\n    if (!subscriptions) {\n      API.get('limelockers', `/${providerId}/${facilityId}/subscriptions`)\n        .then(response => {\n          if (response.status && response.subscriptions) {\n            setSubscriptions(response.subscriptions);\n          }\n        })\n        .catch(console.log)\n      API.get('limelockers', `/${providerId}/${facilityId}/catalog`)\n        .then(console.log)\n        .catch(console.log)\n    }\n  });\n  \n  return (\n    <Container id=\"bookings\">\n      {\n        (subscriptions && subscriptions.total_count)\n          ? (\n              <>\n                <ul>\n                  {\n                    subscriptions.data.map(subscription => (\n                      <li key={subscription.id}>\n                        subscription: {subscription.id}<br />\n                        {moment(subscription.start_date * 1000).format()}\n                        &nbsp;-&nbsp;\n                        {moment(subscription.canceled_at * 1000).format()}\n                        <ul>\n                          {\n                            subscription.items.data.map(subscriptionItem => (\n                              <li key={subscriptionItem.id}>\n                                {subscriptionItem.price.nickname.replace('corona ', '')}<br />\n                                {Number.parseFloat(subscriptionItem.price.unit_amount / 100).toFixed(2)} {subscriptionItem.price.currency} / {subscriptionItem.price.recurring.interval}<br />\n                              </li>\n                            ))\n                          }\n                        </ul>\n                      </li>\n                    ))\n                  }\n                </ul>\n              </>\n            )\n          : null\n      }\n      <pre>\n        {JSON.stringify(subscriptions, null, 2)}\n      </pre>\n    </Container>\n  );\n}\n\n\n","import React from 'react';\n\nexport default function NotFound() {\n  return (\n    <div className=\"NotFound\">\n      <h3>Sorry, page not found!</h3>\n    </div>\n  );\n}\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport AuthenticatedRoute from './components/AuthenticatedRoute';\nimport UnauthenticatedRoute from './components/UnauthenticatedRoute';\nimport Home from './containers/Home';\nimport Privacy from './containers/Privacy';\nimport Terms from './containers/Terms';\nimport Login from './containers/Login';\nimport Settings from './containers/Settings';\nimport ChangeEmail from './containers/ChangeEmail';\nimport ResetPassword from './containers/ResetPassword';\nimport ChangePassword from './containers/ChangePassword';\nimport Signup from './containers/Signup';\nimport CreateBooking from './containers/CreateBooking';\nimport BookingList from './containers/BookingList';\nimport NotFound from './containers/NotFound';\n\nexport default function Routes() {\n  return (\n    <Switch>\n      <Route exact path=\"/\">\n        <Home />\n      </Route>\n      <Route exact path=\"/privacy\">\n        <Privacy />\n      </Route>\n      <Route exact path=\"/terms\">\n        <Terms />\n      </Route>\n      <UnauthenticatedRoute exact path=\"/login\">\n        <Login />\n      </UnauthenticatedRoute>\n      <UnauthenticatedRoute exact path=\"/login/reset\">\n        <ResetPassword />\n      </UnauthenticatedRoute>\n      <UnauthenticatedRoute exact path=\"/signup\">\n        <Signup />\n      </UnauthenticatedRoute>\n      <AuthenticatedRoute exact path=\"/booking/new\">\n        <CreateBooking />\n      </AuthenticatedRoute>\n      <AuthenticatedRoute exact path=\"/booking/list\">\n        <BookingList />\n      </AuthenticatedRoute>\n      <AuthenticatedRoute exact path=\"/settings\">\n        <Settings />\n      </AuthenticatedRoute>\n      <AuthenticatedRoute exact path=\"/settings/email\">\n        <ChangeEmail />\n      </AuthenticatedRoute>\n      <AuthenticatedRoute exact path=\"/settings/password\">\n        <ChangePassword />\n      </AuthenticatedRoute>\n      <Route>\n        <NotFound />\n      </Route>\n    </Switch>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport { Auth } from 'aws-amplify';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport Container from 'react-bootstrap/Container';\nimport Image from 'react-bootstrap/Image';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Nav from 'react-bootstrap/Nav';\nimport Navbar from 'react-bootstrap/Navbar';\nimport NavDropdown from 'react-bootstrap/NavDropdown';\nimport NavItem from 'react-bootstrap/NavItem';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\nimport Routes from './Routes';\nimport { AppContext } from './libs/contextLib';\nimport { onError } from './libs/errorLib';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { isMobile, isAndroid, isFirefox, isSafari } from 'react-device-detect';\n\nfunction App() {\n  const history = useHistory();\n  const location = useLocation();\n\n  const phoneNumber = '+359877804825';\n  const textMessage = encodeURI('I\\'d like to book a locker');\n  const coordinates = {\n    latitude: 41.820626,\n    longitude: 23.478217,\n    address: encodeURI('Bears Lairs, ul. \"Kosherinata\", 2770 кв. Грамадето, Bansko'),\n    waypoints: [\n      {\n        latitude: 41.820112,\n        longitude: 23.474020\n      }\n    ],\n    id: 'ChIJcywcFXevqxQRFjKaC0zq1K0'\n  };\n\n  const whatsappLink = (isMobile)\n    ? (isAndroid)\n      ? `intent://send/${phoneNumber}#Intent;scheme=smsto;package=com.whatsapp;action=android.intent.action.SENDTO;end`\n      : `https://wa.me/${phoneNumber}?text=${textMessage}`\n    : (isFirefox || isSafari)\n      ? `https://web.whatsapp.com/send?phone=${phoneNumber}&text=${textMessage}`\n      : `whatsapp://send?phone=${phoneNumber}&text=${textMessage}`;\n\n  //const viberLink = `viber://pa?chatURI=bearslairsbansko&context=enquiry&text=${textMessage}`;\n  const viberLink = (isAndroid)\n    ? `intent://send/${phoneNumber}#Intent;scheme=smsto;package=com.viber;action=android.intent.action.SENDTO;end`\n    : `viber://chat?number=${phoneNumber}&text=${textMessage}`;\n\n  const mapsLink = (isAndroid)\n    ? `intent://geo:${coordinates.latitude},${coordinates.longitude}?destination=${coordinates.address}/@${coordinates.latitude},${coordinates.longitude}&destination_place_id=${coordinates.id}&waypoints=${coordinates.waypoints.map(wp => (wp.latitude + ',' + wp.longitude)).join('|')}#Intent;scheme=directions;package=com.google.android.apps.maps;action=android.intent.action.ACTION_VIEW;end`\n    : `https://www.google.com/maps/dir/?api=1&destination=${coordinates.address}/@${coordinates.latitude},${coordinates.longitude}&destination_place_id=${coordinates.id}&waypoints=${coordinates.waypoints.map(wp => (wp.latitude + ',' + wp.longitude)).join('|')}`\n\n\n  const [isAuthenticating, setIsAuthenticating] = useState(true);\n  const [isAuthenticated, userHasAuthenticated] = useState(false);\n\n  useEffect(() => { onLoad(); }, []);\n\n  async function onLoad() {\n    try {\n      await Auth.currentSession();\n      userHasAuthenticated(true);\n    }\n    catch(e) {\n      if (e !== 'No current user') {\n        onError(e);\n      }\n    }\n    setIsAuthenticating(false);\n  }\n\n  async function handleLogout() {\n    await Auth.signOut();\n    userHasAuthenticated(false);\n    history.push('/login');\n  }\n\n  return (\n    !isAuthenticating &&\n    <>\n      <Container fluid>\n        <Row>\n          <LinkContainer to=\"/\" style={{cursor: 'pointer'}}>\n            <Image src={'/logo.png'} className=\"m-auto\" />\n          </LinkContainer>\n        </Row>\n        <Navbar collapseOnSelect expand=\"lg\">\n          <Navbar.Toggle aria-controls=\"site-nav\" />\n          <Navbar.Collapse id=\"site-nav\">\n            <Nav className=\"mr-auto\">\n              {\n                (location.pathname !== '/booking/new')\n                  ? (\n                      <LinkContainer to=\"/booking/new\">\n                        <NavItem className=\"btn\">book now</NavItem>\n                      </LinkContainer>\n                    )\n                  : null\n              }\n            </Nav>\n          </Navbar.Collapse>\n          <span>\n            <FontAwesomeIcon className=\"fa-sm fa-flip-horizontal\" icon=\"phone\" />\n            &nbsp;\n            <span className=\"text-muted\">+359</span> <strong>(0) 877 804 825</strong>\n            &nbsp;\n            <OverlayTrigger\n              placement=\"top\"\n              delay={{ show: 250, hide: 400 }}\n              overlay={\n                <div className=\"rounded-pill\" style={{fontSize: '2em', backgroundColor: '#fff', padding: '20px'}}>\n                  <FontAwesomeIcon icon={['fab', 'viber']} color=\"#665ca7\" />\n                  &nbsp;\n                  Send us a Viber message\n                </div>\n              }>\n              <a href={viberLink}>\n                <FontAwesomeIcon icon={['fab', 'viber']} color=\"#665ca7\" />\n              </a>\n            </OverlayTrigger>\n            &nbsp;\n            &nbsp;\n            <OverlayTrigger\n              placement=\"top\"\n              delay={{ show: 250, hide: 400 }}\n              overlay={\n                <div className=\"rounded-pill\" style={{fontSize: '2em', backgroundColor: '#fff', padding: '20px'}}>\n                  <FontAwesomeIcon icon={['fab', 'whatsapp-square']} color=\"#0dc143\" />\n                  &nbsp;\n                  Send us a WhatsApp message\n                </div>\n              }>\n              <a href={whatsappLink} target=\"_blank\" rel=\"noopener noreferrer\">\n                <FontAwesomeIcon icon={['fab', 'whatsapp-square']} color=\"#0dc143\" />\n              </a>\n            </OverlayTrigger>\n            &nbsp;\n            &nbsp;\n            <OverlayTrigger\n              placement=\"top\"\n              delay={{ show: 250, hide: 400 }}\n              overlay={\n                <div className=\"rounded-pill\" style={{fontSize: '2em', backgroundColor: '#fff', padding: '20px'}}>\n                  <FontAwesomeIcon icon={['fab', 'facebook']} color=\"#4862a3\" />\n                  &nbsp;\n                  Find us on Facebook\n                </div>\n              }>\n              <a href=\"https://www.facebook.com/BearsLairsBansko\" target=\"_blank\" rel=\"noopener noreferrer\">\n                <FontAwesomeIcon icon={['fab', 'facebook']} color=\"#4862a3\" />\n              </a>\n            </OverlayTrigger>\n            &nbsp;\n            &nbsp;\n            <OverlayTrigger\n              placement=\"top\"\n              delay={{ show: 250, hide: 400 }}\n              overlay={\n                <div className=\"rounded-pill\" style={{fontSize: '2em', backgroundColor: '#fff', padding: '20px'}}>\n                  <FontAwesomeIcon icon={['fas', 'map-marked-alt']} color=\"#cccccc\" />\n                  &nbsp;\n                  Get directions\n                </div>\n              }>\n              <a href={mapsLink} target=\"_blank\" rel=\"noopener noreferrer\">\n                <FontAwesomeIcon icon={['fas', 'map-marked-alt']} color=\"#ccccc\" />\n              </a>\n            </OverlayTrigger>\n          </span>\n          <NavDropdown\n            className=\"pull-right\"\n            title={\n              <FontAwesomeIcon className=\"fa-sm\" icon={[(isAuthenticated ? 'fas' : 'far'), 'user']} />\n            }\n            drop=\"left\">\n            {\n              isAuthenticated\n                ? (\n                    <>\n                      <LinkContainer to=\"/settings/password\">\n                        <NavDropdown.Item>\n                          change password\n                        </NavDropdown.Item>\n                      </LinkContainer>\n                      <LinkContainer to=\"/booking/list\">\n                        <NavDropdown.Item>bookings</NavDropdown.Item>\n                      </LinkContainer>\n                      <NavDropdown.Divider />\n                      <NavDropdown.Item onClick={handleLogout}>\n                        log-out\n                      </NavDropdown.Item>\n                    </>\n                  )\n                : <>\n                    <LinkContainer to=\"/signup\">\n                      <NavDropdown.Item>\n                        sign-up\n                      </NavDropdown.Item>\n                    </LinkContainer>\n                    <LinkContainer to=\"/login\">\n                      <NavDropdown.Item>\n                        log-in\n                      </NavDropdown.Item>\n                    </LinkContainer>\n                  </>\n            }\n          </NavDropdown>\n        </Navbar>\n      </Container>\n      <AppContext.Provider value={{ isAuthenticated, userHasAuthenticated }}>\n        <Routes />\n      </AppContext.Provider>\n      <Container id=\"footer\" fluid>\n        <Container>\n          <Row className=\"justify-content-xl-center justify-content-md-center\">\n            <Col xl={6}>\n              <LinkContainer to=\"/privacy\">\n                <NavItem as=\"a\">\n                  privacy\n                </NavItem>\n              </LinkContainer>\n              &nbsp;|&nbsp;\n              <LinkContainer to=\"/terms\">\n                <NavItem as=\"a\">\n                  terms and conditions\n                </NavItem>\n              </LinkContainer>\n              &nbsp;|&nbsp;\n              <a href=\"mailto:info@bearslairs.eu\">info@bearslairs.eu</a>\n              <hr />\n              &copy; 2020, Bears Lairs EOOD, Bulgaria. All rights reserved\n            </Col>\n          </Row>\n        </Container>\n      </Container>\n    </>\n  );\n}\nexport default App;\n","export default {\n  s3: {\n    REGION: 'us-east-1',\n    BUCKET: 'bearslairs-api-dev-serverlessdeploymentbucket-1tt1ibsw7svan'\n  },\n  apiGateway: {\n    REGION: 'us-east-1',\n    URL: 'https://hy1sab4b1f.execute-api.us-east-1.amazonaws.com/dev'\n  },\n  cognito: {\n    REGION: 'us-east-1',\n    USER_POOL_ID: 'us-east-1_nhmWSzeBZ',\n    APP_CLIENT_ID: '6ejs5t57eraer0urepjm6lmi0h',\n    IDENTITY_POOL_ID: 'us-east-1:06ca8ae5-f4de-4373-8a72-de5637b22559'\n  }\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport 'typeface-roboto';\nimport App from './App';\nimport { Amplify } from 'aws-amplify';\nimport {Elements} from '@stripe/react-stripe-js';\nimport {loadStripe} from '@stripe/stripe-js';\nimport config from './config';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { faUser as farUser } from '@fortawesome/free-regular-svg-icons';\nimport { faPhone, faMapMarkedAlt, faUser as fasUser } from '@fortawesome/free-solid-svg-icons';\nimport { faFacebook, faWhatsappSquare, faViber } from '@fortawesome/free-brands-svg-icons';\n//import { fas } from '@fortawesome/free-solid-svg-icons';\n//import { fab } from '@fortawesome/free-brands-svg-icons';\nimport * as serviceWorker from './serviceWorker';\n\n//library.add(fas, fab);\nlibrary.add(faPhone, faFacebook, faWhatsappSquare, faViber, faMapMarkedAlt, farUser, fasUser);\n\nconst stripePromise = loadStripe(\"pk_test_51GskzHLWkJbcmCTlYQ1pisYlrbICWZ8bWVTNVIvU3hS6XYTYH3ls2PaxikdzE8zmJLr5VrsSp1gxTkqkMm5DV8Zf00VYAsg3zL\");\n\nAmplify.configure({\n  Auth: {\n    mandatorySignIn: true,\n    region: config.cognito.REGION,\n    userPoolId: config.cognito.USER_POOL_ID,\n    identityPoolId: config.cognito.IDENTITY_POOL_ID,\n    userPoolWebClientId: config.cognito.APP_CLIENT_ID\n  },\n  Storage: {\n    region: config.s3.REGION,\n    bucket: config.s3.BUCKET,\n    identityPoolId: config.cognito.IDENTITY_POOL_ID\n  },\n  API: {\n    endpoints: [\n      {\n        name: 'limelockers',\n        endpoint: config.apiGateway.URL,\n        region: config.apiGateway.REGION\n      }\n    ]\n  }\n});\n\nReactDOM.render(\n  <Router>\n    <Elements stripe={stripePromise}>\n      <App />\n    </Elements>\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}